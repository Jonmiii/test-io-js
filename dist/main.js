!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.flespiIO=t():e.flespiIO=t()}("undefined"!=typeof self?self:this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=128)}([function(e,t){var n=e.exports={version:"2.5.3"};"number"==typeof __e&&(__e=n)},function(e,t){function n(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function i(e){if(u===setTimeout)return setTimeout(e,0);if((u===n||!u)&&setTimeout)return u=setTimeout,setTimeout(e,0);try{return u(e,0)}catch(t){try{return u.call(null,e,0)}catch(t){return u.call(this,e,0)}}}function o(e){if(d===clearTimeout)return clearTimeout(e);if((d===r||!d)&&clearTimeout)return d=clearTimeout,clearTimeout(e);try{return d(e)}catch(t){try{return d.call(null,e)}catch(t){return d.call(this,e)}}}function s(){h&&f&&(h=!1,f.length?m=f.concat(m):g=-1,m.length&&a())}function a(){if(!h){var e=i(s);h=!0;for(var t=m.length;t;){for(f=m,m=[];++g<t;)f&&f[g].run();g=-1,t=m.length}f=null,h=!1,o(e)}}function c(e,t){this.fun=e,this.array=t}function l(){}var u,d,p=e.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:n}catch(e){u=n}try{d="function"==typeof clearTimeout?clearTimeout:r}catch(e){d=r}}();var f,m=[],h=!1,g=-1;p.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];m.push(new c(e,t)),1!==m.length||h||i(a)},c.prototype.run=function(){this.fun.apply(null,this.array)},p.title="browser",p.browser=!0,p.env={},p.argv=[],p.version="",p.versions={},p.on=l,p.addListener=l,p.once=l,p.off=l,p.removeListener=l,p.removeAllListeners=l,p.emit=l,p.prependListener=l,p.prependOnceListener=l,p.listeners=function(e){return[]},p.binding=function(e){throw new Error("process.binding is not supported")},p.cwd=function(){return"/"},p.chdir=function(e){throw new Error("process.chdir is not supported")},p.umask=function(){return 0}},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){var r=n(53)("wks"),i=n(33),o=n(2).Symbol,s="function"==typeof o;(e.exports=function(e){return r[e]||(r[e]=s&&o[e]||(s?o:i)("Symbol."+e))}).store=r},function(e,t,n){"use strict";function r(e){return"[object Array]"===T.call(e)}function i(e){return"[object ArrayBuffer]"===T.call(e)}function o(e){return"undefined"!=typeof FormData&&e instanceof FormData}function s(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer}function a(e){return"string"==typeof e}function c(e){return"number"==typeof e}function l(e){return void 0===e}function u(e){return null!==e&&"object"==typeof e}function d(e){return"[object Date]"===T.call(e)}function p(e){return"[object File]"===T.call(e)}function f(e){return"[object Blob]"===T.call(e)}function m(e){return"[object Function]"===T.call(e)}function h(e){return u(e)&&m(e.pipe)}function g(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams}function y(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}function b(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)}function v(e,t){if(null!==e&&void 0!==e)if("object"!=typeof e&&(e=[e]),r(e))for(var n=0,i=e.length;n<i;n++)t.call(null,e[n],n,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}function w(){function e(e,n){"object"==typeof t[n]&&"object"==typeof e?t[n]=w(t[n],e):t[n]=e}for(var t={},n=0,r=arguments.length;n<r;n++)v(arguments[n],e);return t}function _(e,t,n){return v(t,function(t,r){e[r]=n&&"function"==typeof t?k(t,n):t}),e}var k=n(76),x=n(146),T=Object.prototype.toString;e.exports={isArray:r,isArrayBuffer:i,isBuffer:x,isFormData:o,isArrayBufferView:s,isString:a,isNumber:c,isObject:u,isUndefined:l,isDate:d,isFile:p,isBlob:f,isFunction:m,isStream:h,isURLSearchParams:g,isStandardBrowserEnv:b,forEach:v,merge:w,extend:_,trim:y}},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){var r=n(2),i=n(0),o=n(24),s=n(12),a=function(e,t,n){var c,l,u,d=e&a.F,p=e&a.G,f=e&a.S,m=e&a.P,h=e&a.B,g=e&a.W,y=p?i:i[t]||(i[t]={}),b=y.prototype,v=p?r:f?r[t]:(r[t]||{}).prototype;p&&(n=t);for(c in n)(l=!d&&v&&void 0!==v[c])&&c in y||(u=l?v[c]:n[c],y[c]=p&&"function"!=typeof v[c]?n[c]:h&&l?o(u,r):g&&v[c]==u?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(u):m&&"function"==typeof u?o(Function.call,u):u,m&&((y.virtual||(y.virtual={}))[c]=u,e&a.R&&b&&!b[c]&&s(b,c,u)))};a.F=1,a.G=2,a.S=4,a.P=8,a.B=16,a.W=32,a.U=64,a.R=128,e.exports=a},function(e,t,n){var r=n(8),i=n(73),o=n(48),s=Object.defineProperty;t.f=n(11)?Object.defineProperty:function(e,t,n){if(r(e),t=o(t,!0),r(n),i)try{return s(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(13);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t,n){function r(e,t){for(var n in e)t[n]=e[n]}function i(e,t,n){return s(e,t,n)}var o=n(46),s=o.Buffer;s.from&&s.alloc&&s.allocUnsafe&&s.allocUnsafeSlow?e.exports=o:(r(o,t),t.Buffer=i),r(s,i),i.from=function(e,t,n){if("number"==typeof e)throw new TypeError("Argument must not be a number");return s(e,t,n)},i.alloc=function(e,t,n){if("number"!=typeof e)throw new TypeError("Argument must be a number");var r=s(e);return void 0!==t?"string"==typeof n?r.fill(t,n):r.fill(t):r.fill(0),r},i.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return s(e)},i.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return o.SlowBuffer(e)}},function(e,t){"function"==typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},function(e,t,n){e.exports=!n(20)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(7),i=n(25);e.exports=n(11)?function(e,t,n){return r.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(75),i=n(49);e.exports=function(e){return r(i(e))}},function(e,t,n){e.exports={default:n(141),__esModule:!0}},function(e,t){function n(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}e.exports=n},function(e,t,n){"use strict";function r(e){if(!(this instanceof r))return new r(e);l.call(this,e),u.call(this,e),e&&!1===e.readable&&(this.readable=!1),e&&!1===e.writable&&(this.writable=!1),this.allowHalfOpen=!0,e&&!1===e.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",i)}function i(){this.allowHalfOpen||this._writableState.ended||s(o,this)}function o(e){e.end()}var s=n(45).nextTick,a=Object.keys||function(e){var t=[];for(var n in e)t.push(n);return t};e.exports=r;var c=n(31);c.inherits=n(10);var l=n(111),u=n(115);c.inherits(r,l);for(var d=a(u.prototype),p=0;p<d.length;p++){var f=d[p];r.prototype[f]||(r.prototype[f]=u.prototype[f])}Object.defineProperty(r.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}}),r.prototype._destroy=function(e,t){this.push(null),this.end(),s(t,e)}},function(e,t,n){e.exports={default:n(130),__esModule:!0}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(74),i=n(54);e.exports=Object.keys||function(e){return r(e,i)}},function(e,t,n){var r=n(83),i="object"==typeof self&&self&&self.Object===Object&&self,o=r||i||Function("return this")();e.exports=o},function(e,t){function n(e){return null!=e&&"object"==typeof e}e.exports=n},function(e,t,n){var r=n(32);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,i){return e.call(t,n,r,i)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,n){function r(e){return null==e?void 0===e?c:a:l&&l in Object(e)?o(e):s(e)}var i=n(59),o=n(176),s=n(177),a="[object Null]",c="[object Undefined]",l=i?i.toStringTag:void 0;e.exports=r},function(e,t){e.exports={}},function(e,t){function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function r(e){return"function"==typeof e}function i(e){return"number"==typeof e}function o(e){return"object"==typeof e&&null!==e}function s(e){return void 0===e}e.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(e){if(!i(e)||e<0||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},n.prototype.emit=function(e){var t,n,i,a,c,l;if(this._events||(this._events={}),"error"===e&&(!this._events.error||o(this._events.error)&&!this._events.error.length)){if((t=arguments[1])instanceof Error)throw t;var u=new Error('Uncaught, unspecified "error" event. ('+t+")");throw u.context=t,u}if(n=this._events[e],s(n))return!1;if(r(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:a=Array.prototype.slice.call(arguments,1),n.apply(this,a)}else if(o(n))for(a=Array.prototype.slice.call(arguments,1),l=n.slice(),i=l.length,c=0;c<i;c++)l[c].apply(this,a);return!0},n.prototype.addListener=function(e,t){var i;if(!r(t))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,r(t.listener)?t.listener:t),this._events[e]?o(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,o(this._events[e])&&!this._events[e].warned&&(i=s(this._maxListeners)?n.defaultMaxListeners:this._maxListeners)&&i>0&&this._events[e].length>i&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace()),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(e,t){function n(){this.removeListener(e,n),i||(i=!0,t.apply(this,arguments))}if(!r(t))throw TypeError("listener must be a function");var i=!1;return n.listener=t,this.on(e,n),this},n.prototype.removeListener=function(e,t){var n,i,s,a;if(!r(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(n=this._events[e],s=n.length,i=-1,n===t||r(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(o(n)){for(a=s;a-- >0;)if(n[a]===t||n[a].listener&&n[a].listener===t){i=a;break}if(i<0)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(i,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},n.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(n=this._events[e],r(n))this.removeListener(e,n);else if(n)for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},n.prototype.listeners=function(e){return this._events&&this._events[e]?r(this._events[e])?[this._events[e]]:this._events[e].slice():[]},n.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(r(t))return 1;if(t)return t.length}return 0},n.listenerCount=function(e,t){return e.listenerCount(t)}},function(e,t,n){(function(e){function n(e){return Array.isArray?Array.isArray(e):"[object Array]"===g(e)}function r(e){return"boolean"==typeof e}function i(e){return null===e}function o(e){return null==e}function s(e){return"number"==typeof e}function a(e){return"string"==typeof e}function c(e){return"symbol"==typeof e}function l(e){return void 0===e}function u(e){return"[object RegExp]"===g(e)}function d(e){return"object"==typeof e&&null!==e}function p(e){return"[object Date]"===g(e)}function f(e){return"[object Error]"===g(e)||e instanceof Error}function m(e){return"function"==typeof e}function h(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e}function g(e){return Object.prototype.toString.call(e)}t.isArray=n,t.isBoolean=r,t.isNull=i,t.isNullOrUndefined=o,t.isNumber=s,t.isString=a,t.isSymbol=c,t.isUndefined=l,t.isRegExp=u,t.isObject=d,t.isDate=p,t.isError=f,t.isFunction=m,t.isPrimitive=h,t.isBuffer=e.isBuffer}).call(t,n(46).Buffer)},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t,n){var r=n(49);e.exports=function(e){return Object(r(e))}},function(e,t,n){function r(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}var i=n(165),o=n(166),s=n(167),a=n(168),c=n(169);r.prototype.clear=i,r.prototype.delete=o,r.prototype.get=s,r.prototype.has=a,r.prototype.set=c,e.exports=r},function(e,t,n){function r(e,t){for(var n=e.length;n--;)if(i(e[n][0],t))return n;return-1}var i=n(37);e.exports=r},function(e,t){function n(e,t){return e===t||e!==e&&t!==t}e.exports=n},function(e,t,n){var r=n(57),i=r(Object,"create");e.exports=i},function(e,t,n){function r(e,t){var n=e.__data__;return i(t)?n["string"==typeof t?"string":"hash"]:n.map}var i=n(191);e.exports=r},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){"use strict";var r=n(233)(!0);n(96)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})})},function(e,t){e.exports=!0},function(e,t,n){var r=n(7).f,i=n(14),o=n(3)("toStringTag");e.exports=function(e,t,n){e&&!i(e=n?e:e.prototype,o)&&r(e,o,{configurable:!0,value:t})}},function(e,t,n){t=e.exports=n(111),t.Stream=t,t.Readable=t,t.Writable=n(115),t.Duplex=n(18),t.Transform=n(117),t.PassThrough=n(274)},function(e,t,n){"use strict";(function(t){function n(e,n,r,i){if("function"!=typeof e)throw new TypeError('"callback" argument must be a function');var o,s,a=arguments.length;switch(a){case 0:case 1:return t.nextTick(e);case 2:return t.nextTick(function(){e.call(null,n)});case 3:return t.nextTick(function(){e.call(null,n,r)});case 4:return t.nextTick(function(){e.call(null,n,r,i)});default:for(o=new Array(a-1),s=0;s<o.length;)o[s++]=arguments[s];return t.nextTick(function(){e.apply(null,o)})}}!t.version||0===t.version.indexOf("v0.")||0===t.version.indexOf("v1.")&&0!==t.version.indexOf("v1.8.")?e.exports={nextTick:n}:e.exports=t}).call(t,n(1))},function(e,t,n){"use strict";(function(e){function r(){return o.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function i(e,t){if(r()<t)throw new RangeError("Invalid typed array length");return o.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t),e.__proto__=o.prototype):(null===e&&(e=new o(t)),e.length=t),e}function o(e,t,n){if(!(o.TYPED_ARRAY_SUPPORT||this instanceof o))return new o(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return l(this,e)}return s(this,e,t,n)}function s(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?p(e,t,n,r):"string"==typeof t?u(e,t,n):f(e,t)}function a(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function c(e,t,n,r){return a(t),t<=0?i(e,t):void 0!==n?"string"==typeof r?i(e,t).fill(n,r):i(e,t).fill(n):i(e,t)}function l(e,t){if(a(t),e=i(e,t<0?0:0|m(t)),!o.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function u(e,t,n){if("string"==typeof n&&""!==n||(n="utf8"),!o.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|g(t,n);e=i(e,r);var s=e.write(t,n);return s!==r&&(e=e.slice(0,s)),e}function d(e,t){var n=t.length<0?0:0|m(t.length);e=i(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function p(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r),o.TYPED_ARRAY_SUPPORT?(e=t,e.__proto__=o.prototype):e=d(e,t),e}function f(e,t){if(o.isBuffer(t)){var n=0|m(t.length);return e=i(e,n),0===e.length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||Y(t.length)?i(e,0):d(e,t);if("Buffer"===t.type&&J(t.data))return d(e,t.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function m(e){if(e>=r())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+r().toString(16)+" bytes");return 0|e}function h(e){return+e!=e&&(e=0),o.alloc(+e)}function g(e,t){if(o.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return B(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return W(e).length;default:if(r)return B(e).length;t=(""+t).toLowerCase(),r=!0}}function y(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if(n>>>=0,t>>>=0,n<=t)return"";for(e||(e="utf8");;)switch(e){case"hex":return P(this,t,n);case"utf8":case"utf-8":return I(this,t,n);case"ascii":return X(this,t,n);case"latin1":case"binary":return A(this,t,n);case"base64":return E(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return j(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function b(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function v(e,t,n,r,i){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=i?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(i)return-1;n=e.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof t&&(t=o.from(t,r)),o.isBuffer(t))return 0===t.length?-1:w(e,t,n,r,i);if("number"==typeof t)return t&=255,o.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):w(e,[t],n,r,i);throw new TypeError("val must be string, number or Buffer")}function w(e,t,n,r,i){function o(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}var s=1,a=e.length,c=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;s=2,a/=2,c/=2,n/=2}var l;if(i){var u=-1;for(l=n;l<a;l++)if(o(e,l)===o(t,-1===u?0:l-u)){if(-1===u&&(u=l),l-u+1===c)return u*s}else-1!==u&&(l-=l-u),u=-1}else for(n+c>a&&(n=a-c),l=n;l>=0;l--){for(var d=!0,p=0;p<c;p++)if(o(e,l+p)!==o(t,p)){d=!1;break}if(d)return l}return-1}function _(e,t,n,r){n=Number(n)||0;var i=e.length-n;r?(r=Number(r))>i&&(r=i):r=i;var o=t.length;if(o%2!=0)throw new TypeError("Invalid hex string");r>o/2&&(r=o/2);for(var s=0;s<r;++s){var a=parseInt(t.substr(2*s,2),16);if(isNaN(a))return s;e[n+s]=a}return s}function k(e,t,n,r){return V(B(t,e.length-n),e,n,r)}function x(e,t,n,r){return V(H(t),e,n,r)}function T(e,t,n,r){return x(e,t,n,r)}function S(e,t,n,r){return V(W(t),e,n,r)}function q(e,t,n,r){return V(G(t,e.length-n),e,n,r)}function E(e,t,n){return 0===t&&n===e.length?Q.fromByteArray(e):Q.fromByteArray(e.slice(t,n))}function I(e,t,n){n=Math.min(e.length,n);for(var r=[],i=t;i<n;){var o=e[i],s=null,a=o>239?4:o>223?3:o>191?2:1;if(i+a<=n){var c,l,u,d;switch(a){case 1:o<128&&(s=o);break;case 2:c=e[i+1],128==(192&c)&&(d=(31&o)<<6|63&c)>127&&(s=d);break;case 3:c=e[i+1],l=e[i+2],128==(192&c)&&128==(192&l)&&(d=(15&o)<<12|(63&c)<<6|63&l)>2047&&(d<55296||d>57343)&&(s=d);break;case 4:c=e[i+1],l=e[i+2],u=e[i+3],128==(192&c)&&128==(192&l)&&128==(192&u)&&(d=(15&o)<<18|(63&c)<<12|(63&l)<<6|63&u)>65535&&d<1114112&&(s=d)}}null===s?(s=65533,a=1):s>65535&&(s-=65536,r.push(s>>>10&1023|55296),s=56320|1023&s),r.push(s),i+=a}return $(r)}function $(e){var t=e.length;if(t<=Z)return String.fromCharCode.apply(String,e);for(var n="",r=0;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=Z));return n}function X(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function A(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function P(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var i="",o=t;o<n;++o)i+=N(e[o]);return i}function j(e,t,n){for(var r=e.slice(t,n),i="",o=0;o<r.length;o+=2)i+=String.fromCharCode(r[o]+256*r[o+1]);return i}function O(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function C(e,t,n,r,i,s){if(!o.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<s)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function L(e,t,n,r){t<0&&(t=65535+t+1);for(var i=0,o=Math.min(e.length-n,2);i<o;++i)e[n+i]=(t&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function M(e,t,n,r){t<0&&(t=4294967295+t+1);for(var i=0,o=Math.min(e.length-n,4);i<o;++i)e[n+i]=t>>>8*(r?i:3-i)&255}function R(e,t,n,r,i,o){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function D(e,t,n,r,i){return i||R(e,t,n,4,3.4028234663852886e38,-3.4028234663852886e38),K.write(e,t,n,r,23,4),n+4}function F(e,t,n,r,i){return i||R(e,t,n,8,1.7976931348623157e308,-1.7976931348623157e308),K.write(e,t,n,r,52,8),n+8}function U(e){if(e=z(e).replace(ee,""),e.length<2)return"";for(;e.length%4!=0;)e+="=";return e}function z(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}function N(e){return e<16?"0"+e.toString(16):e.toString(16)}function B(e,t){t=t||1/0;for(var n,r=e.length,i=null,o=[],s=0;s<r;++s){if((n=e.charCodeAt(s))>55295&&n<57344){if(!i){if(n>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(s+1===r){(t-=3)>-1&&o.push(239,191,189);continue}i=n;continue}if(n<56320){(t-=3)>-1&&o.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,n<128){if((t-=1)<0)break;o.push(n)}else if(n<2048){if((t-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function H(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}function G(e,t){for(var n,r,i,o=[],s=0;s<e.length&&!((t-=2)<0);++s)n=e.charCodeAt(s),r=n>>8,i=n%256,o.push(i),o.push(r);return o}function W(e){return Q.toByteArray(U(e))}function V(e,t,n,r){for(var i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}function Y(e){return e!==e}/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var Q=n(266),K=n(267),J=n(112);t.Buffer=o,t.SlowBuffer=h,t.INSPECT_MAX_BYTES=50,o.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=r(),o.poolSize=8192,o._augment=function(e){return e.__proto__=o.prototype,e},o.from=function(e,t,n){return s(null,e,t,n)},o.TYPED_ARRAY_SUPPORT&&(o.prototype.__proto__=Uint8Array.prototype,o.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&o[Symbol.species]===o&&Object.defineProperty(o,Symbol.species,{value:null,configurable:!0})),o.alloc=function(e,t,n){return c(null,e,t,n)},o.allocUnsafe=function(e){return l(null,e)},o.allocUnsafeSlow=function(e){return l(null,e)},o.isBuffer=function(e){return!(null==e||!e._isBuffer)},o.compare=function(e,t){if(!o.isBuffer(e)||!o.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,i=0,s=Math.min(n,r);i<s;++i)if(e[i]!==t[i]){n=e[i],r=t[i];break}return n<r?-1:r<n?1:0},o.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},o.concat=function(e,t){if(!J(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return o.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=o.allocUnsafe(t),i=0;for(n=0;n<e.length;++n){var s=e[n];if(!o.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(r,i),i+=s.length}return r},o.byteLength=g,o.prototype._isBuffer=!0,o.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)b(this,t,t+1);return this},o.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)b(this,t,t+3),b(this,t+1,t+2);return this},o.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)b(this,t,t+7),b(this,t+1,t+6),b(this,t+2,t+5),b(this,t+3,t+4);return this},o.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?I(this,0,e):y.apply(this,arguments)},o.prototype.equals=function(e){if(!o.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===o.compare(this,e)},o.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},o.prototype.compare=function(e,t,n,r,i){if(!o.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),t<0||n>e.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&t>=n)return 0;if(r>=i)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,r>>>=0,i>>>=0,this===e)return 0;for(var s=i-r,a=n-t,c=Math.min(s,a),l=this.slice(r,i),u=e.slice(t,n),d=0;d<c;++d)if(l[d]!==u[d]){s=l[d],a=u[d];break}return s<a?-1:a<s?1:0},o.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},o.prototype.indexOf=function(e,t,n){return v(this,e,t,n,!0)},o.prototype.lastIndexOf=function(e,t,n){return v(this,e,t,n,!1)},o.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var o=!1;;)switch(r){case"hex":return _(this,e,t,n);case"utf8":case"utf-8":return k(this,e,t,n);case"ascii":return x(this,e,t,n);case"latin1":case"binary":return T(this,e,t,n);case"base64":return S(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return q(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},o.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var Z=4096;o.prototype.slice=function(e,t){var n=this.length;e=~~e,t=void 0===t?n:~~t,e<0?(e+=n)<0&&(e=0):e>n&&(e=n),t<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);var r;if(o.TYPED_ARRAY_SUPPORT)r=this.subarray(e,t),r.__proto__=o.prototype;else{var i=t-e;r=new o(i,void 0);for(var s=0;s<i;++s)r[s]=this[s+e]}return r},o.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||O(e,t,this.length);for(var r=this[e],i=1,o=0;++o<t&&(i*=256);)r+=this[e+o]*i;return r},o.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||O(e,t,this.length);for(var r=this[e+--t],i=1;t>0&&(i*=256);)r+=this[e+--t]*i;return r},o.prototype.readUInt8=function(e,t){return t||O(e,1,this.length),this[e]},o.prototype.readUInt16LE=function(e,t){return t||O(e,2,this.length),this[e]|this[e+1]<<8},o.prototype.readUInt16BE=function(e,t){return t||O(e,2,this.length),this[e]<<8|this[e+1]},o.prototype.readUInt32LE=function(e,t){return t||O(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},o.prototype.readUInt32BE=function(e,t){return t||O(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},o.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||O(e,t,this.length);for(var r=this[e],i=1,o=0;++o<t&&(i*=256);)r+=this[e+o]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*t)),r},o.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||O(e,t,this.length);for(var r=t,i=1,o=this[e+--r];r>0&&(i*=256);)o+=this[e+--r]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*t)),o},o.prototype.readInt8=function(e,t){return t||O(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},o.prototype.readInt16LE=function(e,t){t||O(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},o.prototype.readInt16BE=function(e,t){t||O(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},o.prototype.readInt32LE=function(e,t){return t||O(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},o.prototype.readInt32BE=function(e,t){return t||O(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},o.prototype.readFloatLE=function(e,t){return t||O(e,4,this.length),K.read(this,e,!0,23,4)},o.prototype.readFloatBE=function(e,t){return t||O(e,4,this.length),K.read(this,e,!1,23,4)},o.prototype.readDoubleLE=function(e,t){return t||O(e,8,this.length),K.read(this,e,!0,52,8)},o.prototype.readDoubleBE=function(e,t){return t||O(e,8,this.length),K.read(this,e,!1,52,8)},o.prototype.writeUIntLE=function(e,t,n,r){if(e=+e,t|=0,n|=0,!r){C(this,e,t,n,Math.pow(2,8*n)-1,0)}var i=1,o=0;for(this[t]=255&e;++o<n&&(i*=256);)this[t+o]=e/i&255;return t+n},o.prototype.writeUIntBE=function(e,t,n,r){if(e=+e,t|=0,n|=0,!r){C(this,e,t,n,Math.pow(2,8*n)-1,0)}var i=n-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+n},o.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,1,255,0),o.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},o.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,2,65535,0),o.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):L(this,e,t,!0),t+2},o.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,2,65535,0),o.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):L(this,e,t,!1),t+2},o.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,4,4294967295,0),o.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):M(this,e,t,!0),t+4},o.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,4,4294967295,0),o.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):M(this,e,t,!1),t+4},o.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var i=Math.pow(2,8*n-1);C(this,e,t,n,i-1,-i)}var o=0,s=1,a=0;for(this[t]=255&e;++o<n&&(s*=256);)e<0&&0===a&&0!==this[t+o-1]&&(a=1),this[t+o]=(e/s>>0)-a&255;return t+n},o.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var i=Math.pow(2,8*n-1);C(this,e,t,n,i-1,-i)}var o=n-1,s=1,a=0;for(this[t+o]=255&e;--o>=0&&(s*=256);)e<0&&0===a&&0!==this[t+o+1]&&(a=1),this[t+o]=(e/s>>0)-a&255;return t+n},o.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,1,127,-128),o.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},o.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,2,32767,-32768),o.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):L(this,e,t,!0),t+2},o.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,2,32767,-32768),o.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):L(this,e,t,!1),t+2},o.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,4,2147483647,-2147483648),o.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):M(this,e,t,!0),t+4},o.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),o.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):M(this,e,t,!1),t+4},o.prototype.writeFloatLE=function(e,t,n){return D(this,e,t,!0,n)},o.prototype.writeFloatBE=function(e,t,n){return D(this,e,t,!1,n)},o.prototype.writeDoubleLE=function(e,t,n){return F(this,e,t,!0,n)},o.prototype.writeDoubleBE=function(e,t,n){return F(this,e,t,!1,n)},o.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var i,s=r-n;if(this===e&&n<t&&t<r)for(i=s-1;i>=0;--i)e[i+t]=this[i+n];else if(s<1e3||!o.TYPED_ARRAY_SUPPORT)for(i=0;i<s;++i)e[i+t]=this[i+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+s),t);return s},o.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var i=e.charCodeAt(0);i<256&&(e=i)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!o.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0);var s;if("number"==typeof e)for(s=t;s<n;++s)this[s]=e;else{var a=o.isBuffer(e)?e:B(new o(e,r).toString()),c=a.length;for(s=0;s<n-t;++s)this[s+t]=a[s%c]}return this};var ee=/[^+\/0-9A-Za-z-_]/g}).call(t,n(5))},function(e,t,n){var r=n(13),i=n(2).document,o=r(i)&&r(i.createElement);e.exports=function(e){return o?i.createElement(e):{}}},function(e,t,n){var r=n(13);e.exports=function(e,t){if(!r(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!r(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!r(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){var r=n(51),i=Math.min;e.exports=function(e){return e>0?i(r(e),9007199254740991):0}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r=n(53)("keys"),i=n(33);e.exports=function(e){return r[e]||(r[e]=i(e))}},function(e,t,n){var r=n(2),i=r["__core-js_shared__"]||(r["__core-js_shared__"]={});e.exports=function(e){return i[e]||(i[e]={})}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){"use strict";(function(t){function r(e,t){!i.isUndefined(e)&&i.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var i=n(4),o=n(148),s={"Content-Type":"application/x-www-form-urlencoded"},a={adapter:function(){var e;return"undefined"!=typeof XMLHttpRequest?e=n(77):void 0!==t&&(e=n(77)),e}(),transformRequest:[function(e,t){return o(t,"Content-Type"),i.isFormData(e)||i.isArrayBuffer(e)||i.isBuffer(e)||i.isStream(e)||i.isFile(e)||i.isBlob(e)?e:i.isArrayBufferView(e)?e.buffer:i.isURLSearchParams(e)?(r(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):i.isObject(e)?(r(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};a.headers={common:{Accept:"application/json, text/plain, */*"}},i.forEach(["delete","get","head"],function(e){a.headers[e]={}}),i.forEach(["post","put","patch"],function(e){a.headers[e]=i.merge(s)}),e.exports=a}).call(t,n(1))},function(e,t,n){function r(e,t){var n=o(e,t);return i(n)?n:void 0}var i=n(175),o=n(181);e.exports=r},function(e,t,n){function r(e){if(!o(e))return!1;var t=i(e);return t==a||t==c||t==s||t==l}var i=n(28),o=n(17),s="[object AsyncFunction]",a="[object Function]",c="[object GeneratorFunction]",l="[object Proxy]";e.exports=r},function(e,t,n){var r=n(22),i=r.Symbol;e.exports=i},function(e,t,n){function r(e,t,n){"__proto__"==t&&i?i(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}var i=n(85);e.exports=r},function(e,t){var n=Array.isArray;e.exports=n},function(e,t,n){function r(e){return null!=e&&o(e.length)&&!i(e)}var i=n(58),o=n(89);e.exports=r},function(e,t,n){n(237);for(var r=n(2),i=n(12),o=n(29),s=n(3)("toStringTag"),a="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),c=0;c<a.length;c++){var l=a[c],u=r[l],d=u&&u.prototype;d&&!d[s]&&i(d,s,l),o[l]=o.Array}},function(e,t,n){t.f=n(3)},function(e,t,n){var r=n(2),i=n(0),o=n(42),s=n(64),a=n(7).f;e.exports=function(e){var t=i.Symbol||(i.Symbol=o?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||a(t,e,{value:s.f(e)})}},function(e,t,n){e.exports=n(250)},function(e,t,n){"use strict";t.__esModule=!0;var r=n(252),i=function(e){return e&&e.__esModule?e:{default:e}}(r);t.default=function(e){return function(){var t=e.apply(this,arguments);return new i.default(function(e,n){function r(o,s){try{var a=t[o](s),c=a.value}catch(e){return void n(e)}if(!a.done)return i.default.resolve(c).then(function(e){r("next",e)},function(e){r("throw",e)});e(c)}return r("next")})}}},function(e,t,n){var r=n(102),i=n(3)("iterator"),o=n(29);e.exports=n(0).getIteratorMethod=function(e){if(void 0!=e)return e[i]||e["@@iterator"]||o[r(e)]}},function(e,t,n){"use strict";function r(e){var t,n;this.promise=new e(function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r}),this.resolve=i(t),this.reject=i(n)}var i=n(32);e.exports.f=function(e){return new r(e)}},function(e,t){function n(){for(var e={},t=0;t<arguments.length;t++){var n=arguments[t];for(var i in n)r.call(n,i)&&(e[i]=n[i])}return e}e.exports=n;var r=Object.prototype.hasOwnProperty},function(e,t,n){"use strict";function r(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}function i(e,t,n){if(e&&l.isObject(e)&&e instanceof r)return e;var i=new r;return i.parse(e,t,n),i}function o(e){return l.isString(e)&&(e=i(e)),e instanceof r?e.format():r.prototype.format.call(e)}function s(e,t){return i(e,!1,!0).resolve(t)}function a(e,t){return e?i(e,!1,!0).resolveObject(t):t}var c=n(290),l=n(291);t.parse=i,t.resolve=s,t.resolveObject=a,t.format=o,t.Url=r;var u=/^([a-z0-9.+-]+:)/i,d=/:[0-9]*$/,p=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,f=["<",">",'"',"`"," ","\r","\n","\t"],m=["{","}","|","\\","^","`"].concat(f),h=["'"].concat(m),g=["%","/","?",";","#"].concat(h),y=["/","?","#"],b=/^[+a-z0-9A-Z_-]{0,63}$/,v=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,w={javascript:!0,"javascript:":!0},_={javascript:!0,"javascript:":!0},k={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},x=n(292);r.prototype.parse=function(e,t,n){if(!l.isString(e))throw new TypeError("Parameter 'url' must be a string, not "+typeof e);var r=e.indexOf("?"),i=-1!==r&&r<e.indexOf("#")?"?":"#",o=e.split(i),s=/\\/g;o[0]=o[0].replace(s,"/"),e=o.join(i);var a=e;if(a=a.trim(),!n&&1===e.split("#").length){var d=p.exec(a);if(d)return this.path=a,this.href=a,this.pathname=d[1],d[2]?(this.search=d[2],this.query=t?x.parse(this.search.substr(1)):this.search.substr(1)):t&&(this.search="",this.query={}),this}var f=u.exec(a);if(f){f=f[0];var m=f.toLowerCase();this.protocol=m,a=a.substr(f.length)}if(n||f||a.match(/^\/\/[^@\/]+@[^@\/]+/)){var T="//"===a.substr(0,2);!T||f&&_[f]||(a=a.substr(2),this.slashes=!0)}if(!_[f]&&(T||f&&!k[f])){for(var S=-1,q=0;q<y.length;q++){var E=a.indexOf(y[q]);-1!==E&&(-1===S||E<S)&&(S=E)}var I,$;$=-1===S?a.lastIndexOf("@"):a.lastIndexOf("@",S),-1!==$&&(I=a.slice(0,$),a=a.slice($+1),this.auth=decodeURIComponent(I)),S=-1;for(var q=0;q<g.length;q++){var E=a.indexOf(g[q]);-1!==E&&(-1===S||E<S)&&(S=E)}-1===S&&(S=a.length),this.host=a.slice(0,S),a=a.slice(S),this.parseHost(),this.hostname=this.hostname||"";var X="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!X)for(var A=this.hostname.split(/\./),q=0,P=A.length;q<P;q++){var j=A[q];if(j&&!j.match(b)){for(var O="",C=0,L=j.length;C<L;C++)j.charCodeAt(C)>127?O+="x":O+=j[C];if(!O.match(b)){var M=A.slice(0,q),R=A.slice(q+1),D=j.match(v);D&&(M.push(D[1]),R.unshift(D[2])),R.length&&(a="/"+R.join(".")+a),this.hostname=M.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),X||(this.hostname=c.toASCII(this.hostname));var F=this.port?":"+this.port:"",U=this.hostname||"";this.host=U+F,this.href+=this.host,X&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==a[0]&&(a="/"+a))}if(!w[m])for(var q=0,P=h.length;q<P;q++){var z=h[q];if(-1!==a.indexOf(z)){var N=encodeURIComponent(z);N===z&&(N=escape(z)),a=a.split(z).join(N)}}var B=a.indexOf("#");-1!==B&&(this.hash=a.substr(B),a=a.slice(0,B));var H=a.indexOf("?");if(-1!==H?(this.search=a.substr(H),this.query=a.substr(H+1),t&&(this.query=x.parse(this.query)),a=a.slice(0,H)):t&&(this.search="",this.query={}),a&&(this.pathname=a),k[m]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){var F=this.pathname||"",G=this.search||"";this.path=F+G}return this.href=this.format(),this},r.prototype.format=function(){var e=this.auth||"";e&&(e=encodeURIComponent(e),e=e.replace(/%3A/i,":"),e+="@");var t=this.protocol||"",n=this.pathname||"",r=this.hash||"",i=!1,o="";this.host?i=e+this.host:this.hostname&&(i=e+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(i+=":"+this.port)),this.query&&l.isObject(this.query)&&Object.keys(this.query).length&&(o=x.stringify(this.query));var s=this.search||o&&"?"+o||"";return t&&":"!==t.substr(-1)&&(t+=":"),this.slashes||(!t||k[t])&&!1!==i?(i="//"+(i||""),n&&"/"!==n.charAt(0)&&(n="/"+n)):i||(i=""),r&&"#"!==r.charAt(0)&&(r="#"+r),s&&"?"!==s.charAt(0)&&(s="?"+s),n=n.replace(/[?#]/g,function(e){return encodeURIComponent(e)}),s=s.replace("#","%23"),t+i+n+s+r},r.prototype.resolve=function(e){return this.resolveObject(i(e,!1,!0)).format()},r.prototype.resolveObject=function(e){if(l.isString(e)){var t=new r;t.parse(e,!1,!0),e=t}for(var n=new r,i=Object.keys(this),o=0;o<i.length;o++){var s=i[o];n[s]=this[s]}if(n.hash=e.hash,""===e.href)return n.href=n.format(),n;if(e.slashes&&!e.protocol){for(var a=Object.keys(e),c=0;c<a.length;c++){var u=a[c];"protocol"!==u&&(n[u]=e[u])}return k[n.protocol]&&n.hostname&&!n.pathname&&(n.path=n.pathname="/"),n.href=n.format(),n}if(e.protocol&&e.protocol!==n.protocol){if(!k[e.protocol]){for(var d=Object.keys(e),p=0;p<d.length;p++){var f=d[p];n[f]=e[f]}return n.href=n.format(),n}if(n.protocol=e.protocol,e.host||_[e.protocol])n.pathname=e.pathname;else{for(var m=(e.pathname||"").split("/");m.length&&!(e.host=m.shift()););e.host||(e.host=""),e.hostname||(e.hostname=""),""!==m[0]&&m.unshift(""),m.length<2&&m.unshift(""),n.pathname=m.join("/")}if(n.search=e.search,n.query=e.query,n.host=e.host||"",n.auth=e.auth,n.hostname=e.hostname||e.host,n.port=e.port,n.pathname||n.search){var h=n.pathname||"",g=n.search||"";n.path=h+g}return n.slashes=n.slashes||e.slashes,n.href=n.format(),n}var y=n.pathname&&"/"===n.pathname.charAt(0),b=e.host||e.pathname&&"/"===e.pathname.charAt(0),v=b||y||n.host&&e.pathname,w=v,x=n.pathname&&n.pathname.split("/")||[],m=e.pathname&&e.pathname.split("/")||[],T=n.protocol&&!k[n.protocol];if(T&&(n.hostname="",n.port=null,n.host&&(""===x[0]?x[0]=n.host:x.unshift(n.host)),n.host="",e.protocol&&(e.hostname=null,e.port=null,e.host&&(""===m[0]?m[0]=e.host:m.unshift(e.host)),e.host=null),v=v&&(""===m[0]||""===x[0])),b)n.host=e.host||""===e.host?e.host:n.host,n.hostname=e.hostname||""===e.hostname?e.hostname:n.hostname,n.search=e.search,n.query=e.query,x=m;else if(m.length)x||(x=[]),x.pop(),x=x.concat(m),n.search=e.search,n.query=e.query;else if(!l.isNullOrUndefined(e.search)){if(T){n.hostname=n.host=x.shift();var S=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@");S&&(n.auth=S.shift(),n.host=n.hostname=S.shift())}return n.search=e.search,n.query=e.query,l.isNull(n.pathname)&&l.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.href=n.format(),n}if(!x.length)return n.pathname=null,n.search?n.path="/"+n.search:n.path=null,n.href=n.format(),n;for(var q=x.slice(-1)[0],E=(n.host||e.host||x.length>1)&&("."===q||".."===q)||""===q,I=0,$=x.length;$>=0;$--)q=x[$],"."===q?x.splice($,1):".."===q?(x.splice($,1),I++):I&&(x.splice($,1),I--);if(!v&&!w)for(;I--;I)x.unshift("..");!v||""===x[0]||x[0]&&"/"===x[0].charAt(0)||x.unshift(""),E&&"/"!==x.join("/").substr(-1)&&x.push("");var X=""===x[0]||x[0]&&"/"===x[0].charAt(0);if(T){n.hostname=n.host=X?"":x.length?x.shift():"";var S=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@");S&&(n.auth=S.shift(),n.host=n.hostname=S.shift())}return v=v||n.host&&x.length,v&&!X&&x.unshift(""),x.length?n.pathname=x.join("/"):(n.pathname=null,n.path=null),l.isNull(n.pathname)&&l.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.auth=e.auth||n.auth,n.slashes=n.slashes||e.slashes,n.href=n.format(),n},r.prototype.parseHost=function(){var e=this.host,t=d.exec(e);t&&(t=t[0],":"!==t&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)}},function(e,t,n){"use strict";function r(e,t){function n(n){t.rejectUnauthorized&&e.emit("error",n),r.end()}var r;return t.port=t.port||8883,t.host=t.hostname||t.host||"localhost",t.rejectUnauthorized=!1!==t.rejectUnauthorized,delete t.path,r=i.connect(t),r.on("secureConnect",function(){t.rejectUnauthorized&&!r.authorized?r.emit("error",new Error("TLS not authorized")):r.removeListener("error",n)}),r.on("error",n),r}var i=n(296);e.exports=r},function(e,t,n){e.exports=!n(11)&&!n(20)(function(){return 7!=Object.defineProperty(n(47)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(14),i=n(15),o=n(133)(!1),s=n(52)("IE_PROTO");e.exports=function(e,t){var n,a=i(e),c=0,l=[];for(n in a)n!=s&&r(a,n)&&l.push(n);for(;t.length>c;)r(a,n=t[c++])&&(~o(l,n)||l.push(n));return l}},function(e,t,n){var r=n(26);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t,n){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},function(e,t,n){"use strict";(function(t){var r=n(4),i=n(149),o=n(151),s=n(152),a=n(153),c=n(78),l="undefined"!=typeof window&&window.btoa&&window.btoa.bind(window)||n(154);e.exports=function(e){return new Promise(function(u,d){var p=e.data,f=e.headers;r.isFormData(p)&&delete f["Content-Type"];var m=new XMLHttpRequest,h="onreadystatechange",g=!1;if("test"===t.env.NODE_ENV||"undefined"==typeof window||!window.XDomainRequest||"withCredentials"in m||a(e.url)||(m=new window.XDomainRequest,h="onload",g=!0,m.onprogress=function(){},m.ontimeout=function(){}),e.auth){var y=e.auth.username||"",b=e.auth.password||"";f.Authorization="Basic "+l(y+":"+b)}if(m.open(e.method.toUpperCase(),o(e.url,e.params,e.paramsSerializer),!0),m.timeout=e.timeout,m[h]=function(){if(m&&(4===m.readyState||g)&&(0!==m.status||m.responseURL&&0===m.responseURL.indexOf("file:"))){var t="getAllResponseHeaders"in m?s(m.getAllResponseHeaders()):null,n=e.responseType&&"text"!==e.responseType?m.response:m.responseText,r={data:n,status:1223===m.status?204:m.status,statusText:1223===m.status?"No Content":m.statusText,headers:t,config:e,request:m};i(u,d,r),m=null}},m.onerror=function(){d(c("Network Error",e,null,m)),m=null},m.ontimeout=function(){d(c("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",m)),m=null},r.isStandardBrowserEnv()){var v=n(155),w=(e.withCredentials||a(e.url))&&e.xsrfCookieName?v.read(e.xsrfCookieName):void 0;w&&(f[e.xsrfHeaderName]=w)}if("setRequestHeader"in m&&r.forEach(f,function(e,t){void 0===p&&"content-type"===t.toLowerCase()?delete f[t]:m.setRequestHeader(t,e)}),e.withCredentials&&(m.withCredentials=!0),e.responseType)try{m.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&m.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&m.upload&&m.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){m&&(m.abort(),d(e),m=null)}),void 0===p&&(p=null),m.send(p)})}}).call(t,n(1))},function(e,t,n){"use strict";var r=n(150);e.exports=function(e,t,n,i,o){var s=new Error(e);return r(s,t,n,i,o)}},function(e,t,n){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,n){"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},function(e,t,n){var r=n(163),i=n(220),o=i(function(e,t,n){r(e,t,n)});e.exports=o},function(e,t,n){var r=n(57),i=n(22),o=r(i,"Map");e.exports=o},function(e,t,n){(function(t){var n="object"==typeof t&&t&&t.Object===Object&&t;e.exports=n}).call(t,n(5))},function(e,t,n){function r(e,t,n){(void 0===n||o(e[t],n))&&(void 0!==n||t in e)||i(e,t,n)}var i=n(60),o=n(37);e.exports=r},function(e,t,n){var r=n(57),i=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=i},function(e,t,n){var r=n(205),i=r(Object.getPrototypeOf,Object);e.exports=i},function(e,t){function n(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||r)}var r=Object.prototype;e.exports=n},function(e,t,n){var r=n(206),i=n(23),o=Object.prototype,s=o.hasOwnProperty,a=o.propertyIsEnumerable,c=r(function(){return arguments}())?r:function(e){return i(e)&&s.call(e,"callee")&&!a.call(e,"callee")};e.exports=c},function(e,t){function n(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=r}var r=9007199254740991;e.exports=n},function(e,t,n){(function(e){var r=n(22),i=n(208),o="object"==typeof t&&t&&!t.nodeType&&t,s=o&&"object"==typeof e&&e&&!e.nodeType&&e,a=s&&s.exports===o,c=a?r.Buffer:void 0,l=c?c.isBuffer:void 0,u=l||i;e.exports=u}).call(t,n(40)(e))},function(e,t,n){var r=n(210),i=n(211),o=n(212),s=o&&o.isTypedArray,a=s?i(s):r;e.exports=a},function(e,t){function n(e,t){return"__proto__"==t?void 0:e[t]}e.exports=n},function(e,t,n){function r(e){return s(e)?i(e,!0):o(e)}var i=n(216),o=n(218),s=n(62);e.exports=r},function(e,t){function n(e,t){var n=typeof e;return!!(t=null==t?r:t)&&("number"==n||"symbol"!=n&&i.test(e))&&e>-1&&e%1==0&&e<t}var r=9007199254740991,i=/^(?:0|[1-9]\d*)$/;e.exports=n},function(e,t){function n(e){return e}e.exports=n},function(e,t,n){"use strict";var r=n(42),i=n(6),o=n(97),s=n(12),a=n(14),c=n(29),l=n(234),u=n(43),d=n(236),p=n(3)("iterator"),f=!([].keys&&"next"in[].keys()),m=function(){return this};e.exports=function(e,t,n,h,g,y,b){l(n,t,h);var v,w,_,k=function(e){if(!f&&e in q)return q[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},x=t+" Iterator",T="values"==g,S=!1,q=e.prototype,E=q[p]||q["@@iterator"]||g&&q[g],I=!f&&E||k(g),$=g?T?k("entries"):I:void 0,X="Array"==t?q.entries||E:E;if(X&&(_=d(X.call(new e)))!==Object.prototype&&_.next&&(u(_,x,!0),r||a(_,p)||s(_,p,m)),T&&E&&"values"!==E.name&&(S=!0,I=function(){return E.call(this)}),r&&!b||!f&&!S&&q[p]||s(q,p,I),c[t]=I,c[x]=m,g)if(v={values:T?I:k("values"),keys:y?I:k("keys"),entries:$},b)for(w in v)w in q||o(q,w,v[w]);else i(i.P+i.F*(f||S),t,v);return v}},function(e,t,n){e.exports=n(12)},function(e,t,n){var r=n(8),i=n(235),o=n(54),s=n(52)("IE_PROTO"),a=function(){},c=function(){var e,t=n(47)("iframe"),r=o.length;for(t.style.display="none",n(99).appendChild(t),t.src="javascript:",e=t.contentWindow.document,e.open(),e.write("<script>document.F=Object<\/script>"),e.close(),c=e.F;r--;)delete c.prototype[o[r]];return c()};e.exports=Object.create||function(e,t){var n;return null!==e?(a.prototype=r(e),n=new a,a.prototype=null,n[s]=e):n=c(),void 0===t?n:i(n,t)}},function(e,t,n){var r=n(2).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(74),i=n(54).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,i)}},function(e,t){},function(e,t,n){var r=n(26),i=n(3)("toStringTag"),o="Arguments"==r(function(){return arguments}()),s=function(e,t){try{return e[t]}catch(e){}};e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=s(t=Object(e),i))?n:o?r(t):"Object"==(a=r(t))&&"function"==typeof t.callee?"Arguments":a}},function(e,t,n){var r=n(8);e.exports=function(e,t,n,i){try{return i?t(r(n)[0],n[1]):t(n)}catch(t){var o=e.return;throw void 0!==o&&r(o.call(e)),t}}},function(e,t,n){var r=n(29),i=n(3)("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||o[i]===e)}},function(e,t,n){var r=n(8),i=n(32),o=n(3)("species");e.exports=function(e,t){var n,s=r(e).constructor;return void 0===s||void 0==(n=r(s)[o])?t:i(n)}},function(e,t,n){var r,i,o,s=n(24),a=n(257),c=n(99),l=n(47),u=n(2),d=u.process,p=u.setImmediate,f=u.clearImmediate,m=u.MessageChannel,h=u.Dispatch,g=0,y={},b=function(){var e=+this;if(y.hasOwnProperty(e)){var t=y[e];delete y[e],t()}},v=function(e){b.call(e.data)};p&&f||(p=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return y[++g]=function(){a("function"==typeof e?e:Function(e),t)},r(g),g},f=function(e){delete y[e]},"process"==n(26)(d)?r=function(e){d.nextTick(s(b,e,1))}:h&&h.now?r=function(e){h.now(s(b,e,1))}:m?(i=new m,o=i.port2,i.port1.onmessage=v,r=s(o.postMessage,o,1)):u.addEventListener&&"function"==typeof postMessage&&!u.importScripts?(r=function(e){u.postMessage(e+"","*")},u.addEventListener("message",v,!1)):r="onreadystatechange"in l("script")?function(e){c.appendChild(l("script")).onreadystatechange=function(){c.removeChild(this),b.call(e)}}:function(e){setTimeout(s(b,e,1),0)}),e.exports={set:p,clear:f}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var r=n(8),i=n(13),o=n(69);e.exports=function(e,t){if(r(e),i(t)&&t.constructor===e)return t;var n=o.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){var r=n(3)("iterator"),i=!1;try{var o=[7][r]();o.return=function(){i=!0},Array.from(o,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!i)return!1;var n=!1;try{var o=[7],s=o[r]();s.next=function(){return{done:n=!0}},o[r]=function(){return s},e(o)}catch(e){}return n}},function(e,t,n){"use strict";(function(t){function r(e){if(!(this instanceof r))return new r(e);this.options=e||{},this.options=i(a,e),this._inflights={}}var i=n(70),o=n(44).Readable,s={objectMode:!0},a={clean:!0};r.prototype.put=function(e,t){return this._inflights[e.messageId]=e,t&&t(),this},r.prototype.createStream=function(){var e=new o(s),n=this._inflights,r=Object.keys(this._inflights),i=!1,a=0;return e._read=function(){!i&&a<r.length?this.push(n[r[a++]]):this.push(null)},e.destroy=function(){if(!i){var e=this;i=!0,t.nextTick(function(){e.emit("close")})}},e},r.prototype.del=function(e,t){return e=this._inflights[e.messageId],e?(delete this._inflights[e.messageId],t(null,e)):t&&t(new Error("missing packet")),this},r.prototype.get=function(e,t){return e=this._inflights[e.messageId],e?t(null,e):t&&t(new Error("missing packet")),this},r.prototype.close=function(e){this.options.clean&&(this._inflights=null),e&&e()},e.exports=r}).call(t,n(1))},function(e,t,n){"use strict";(function(t,r){function i(e){return M.from(e)}function o(e){return M.isBuffer(e)||e instanceof R}function s(e,t,n){if("function"==typeof e.prependListener)return e.prependListener(t,n);e._events&&e._events[t]?O(e._events[t])?e._events[t].unshift(n):e._events[t]=[n,e._events[t]]:e.on(t,n)}function a(e,t){j=j||n(18),e=e||{};var r=t instanceof j;this.objectMode=!!e.objectMode,r&&(this.objectMode=this.objectMode||!!e.readableObjectMode);var i=e.highWaterMark,o=e.readableHighWaterMark,s=this.objectMode?16:16384;this.highWaterMark=i||0===i?i:r&&(o||0===o)?o:s,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new N,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(z||(z=n(116).StringDecoder),this.decoder=new z(e.encoding),this.encoding=e.encoding)}function c(e){if(j=j||n(18),!(this instanceof c))return new c(e);this._readableState=new a(e,this),this.readable=!0,e&&("function"==typeof e.read&&(this._read=e.read),"function"==typeof e.destroy&&(this._destroy=e.destroy)),L.call(this)}function l(e,t,n,r,o){var s=e._readableState;if(null===t)s.reading=!1,h(e,s);else{var a;o||(a=d(s,t)),a?e.emit("error",a):s.objectMode||t&&t.length>0?("string"==typeof t||s.objectMode||Object.getPrototypeOf(t)===M.prototype||(t=i(t)),r?s.endEmitted?e.emit("error",new Error("stream.unshift() after end event")):u(e,s,t,!0):s.ended?e.emit("error",new Error("stream.push() after EOF")):(s.reading=!1,s.decoder&&!n?(t=s.decoder.write(t),s.objectMode||0!==t.length?u(e,s,t,!1):b(e,s)):u(e,s,t,!1))):r||(s.reading=!1)}return p(s)}function u(e,t,n,r){t.flowing&&0===t.length&&!t.sync?(e.emit("data",n),e.read(0)):(t.length+=t.objectMode?1:n.length,r?t.buffer.unshift(n):t.buffer.push(n),t.needReadable&&g(e)),b(e,t)}function d(e,t){var n;return o(t)||"string"==typeof t||void 0===t||e.objectMode||(n=new TypeError("Invalid non-string/buffer chunk")),n}function p(e){return!e.ended&&(e.needReadable||e.length<e.highWaterMark||0===e.length)}function f(e){return e>=G?e=G:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}function m(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!==e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=f(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function h(e,t){if(!t.ended){if(t.decoder){var n=t.decoder.end();n&&n.length&&(t.buffer.push(n),t.length+=t.objectMode?1:n.length)}t.ended=!0,g(e)}}function g(e){var t=e._readableState;t.needReadable=!1,t.emittedReadable||(U("emitReadable",t.flowing),t.emittedReadable=!0,t.sync?P(y,e):y(e))}function y(e){U("emit readable"),e.emit("readable"),T(e)}function b(e,t){t.readingMore||(t.readingMore=!0,P(v,e,t))}function v(e,t){for(var n=t.length;!t.reading&&!t.flowing&&!t.ended&&t.length<t.highWaterMark&&(U("maybeReadMore read 0"),e.read(0),n!==t.length);)n=t.length;t.readingMore=!1}function w(e){return function(){var t=e._readableState;U("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&C(e,"data")&&(t.flowing=!0,T(e))}}function _(e){U("readable nexttick read 0"),e.read(0)}function k(e,t){t.resumeScheduled||(t.resumeScheduled=!0,P(x,e,t))}function x(e,t){t.reading||(U("resume read 0"),e.read(0)),t.resumeScheduled=!1,t.awaitDrain=0,e.emit("resume"),T(e),t.flowing&&!t.reading&&e.read(0)}function T(e){var t=e._readableState;for(U("flow",t.flowing);t.flowing&&null!==e.read(););}function S(e,t){if(0===t.length)return null;var n;return t.objectMode?n=t.buffer.shift():!e||e>=t.length?(n=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.head.data:t.buffer.concat(t.length),t.buffer.clear()):n=q(e,t.buffer,t.decoder),n}function q(e,t,n){var r;return e<t.head.data.length?(r=t.head.data.slice(0,e),t.head.data=t.head.data.slice(e)):r=e===t.head.data.length?t.shift():n?E(e,t):I(e,t),r}function E(e,t){var n=t.head,r=1,i=n.data;for(e-=i.length;n=n.next;){var o=n.data,s=e>o.length?o.length:e;if(s===o.length?i+=o:i+=o.slice(0,e),0===(e-=s)){s===o.length?(++r,n.next?t.head=n.next:t.head=t.tail=null):(t.head=n,n.data=o.slice(s));break}++r}return t.length-=r,i}function I(e,t){var n=M.allocUnsafe(e),r=t.head,i=1;for(r.data.copy(n),e-=r.data.length;r=r.next;){var o=r.data,s=e>o.length?o.length:e;if(o.copy(n,n.length-e,0,s),0===(e-=s)){s===o.length?(++i,r.next?t.head=r.next:t.head=t.tail=null):(t.head=r,r.data=o.slice(s));break}++i}return t.length-=i,n}function $(e){var t=e._readableState;if(t.length>0)throw new Error('"endReadable()" called on non-empty stream');t.endEmitted||(t.ended=!0,P(X,t,e))}function X(e,t){e.endEmitted||0!==e.length||(e.endEmitted=!0,t.readable=!1,t.emit("end"))}function A(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1}var P=n(45).nextTick;e.exports=c;var j,O=n(112);c.ReadableState=a;var C=(n(30).EventEmitter,function(e,t){return e.listeners(t).length}),L=n(113),M=n(9).Buffer,R=t.Uint8Array||function(){},D=n(31);D.inherits=n(10);var F=n(268),U=void 0;U=F&&F.debuglog?F.debuglog("stream"):function(){};var z,N=n(269),B=n(114);D.inherits(c,L);var H=["error","close","destroy","pause","resume"];Object.defineProperty(c.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),c.prototype.destroy=B.destroy,c.prototype._undestroy=B.undestroy,c.prototype._destroy=function(e,t){this.push(null),t(e)},c.prototype.push=function(e,t){var n,r=this._readableState;return r.objectMode?n=!0:"string"==typeof e&&(t=t||r.defaultEncoding,t!==r.encoding&&(e=M.from(e,t),t=""),n=!0),l(this,e,t,!1,n)},c.prototype.unshift=function(e){return l(this,e,null,!0,!1)},c.prototype.isPaused=function(){return!1===this._readableState.flowing},c.prototype.setEncoding=function(e){return z||(z=n(116).StringDecoder),this._readableState.decoder=new z(e),this._readableState.encoding=e,this};var G=8388608;c.prototype.read=function(e){U("read",e),e=parseInt(e,10);var t=this._readableState,n=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&(t.length>=t.highWaterMark||t.ended))return U("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?$(this):g(this),null;if(0===(e=m(e,t))&&t.ended)return 0===t.length&&$(this),null;var r=t.needReadable;U("need readable",r),(0===t.length||t.length-e<t.highWaterMark)&&(r=!0,U("length less than watermark",r)),t.ended||t.reading?(r=!1,U("reading or ended",r)):r&&(U("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=m(n,t)));var i;return i=e>0?S(e,t):null,null===i?(t.needReadable=!0,e=0):t.length-=e,0===t.length&&(t.ended||(t.needReadable=!0),n!==e&&t.ended&&$(this)),null!==i&&this.emit("data",i),i},c.prototype._read=function(e){this.emit("error",new Error("_read() is not implemented"))},c.prototype.pipe=function(e,t){function n(e,t){U("onunpipe"),e===p&&t&&!1===t.hasUnpiped&&(t.hasUnpiped=!0,o())}function i(){U("onend"),e.end()}function o(){U("cleanup"),e.removeListener("close",l),e.removeListener("finish",u),e.removeListener("drain",g),e.removeListener("error",c),e.removeListener("unpipe",n),p.removeListener("end",i),p.removeListener("end",d),p.removeListener("data",a),y=!0,!f.awaitDrain||e._writableState&&!e._writableState.needDrain||g()}function a(t){U("ondata"),b=!1,!1!==e.write(t)||b||((1===f.pipesCount&&f.pipes===e||f.pipesCount>1&&-1!==A(f.pipes,e))&&!y&&(U("false write response, pause",p._readableState.awaitDrain),p._readableState.awaitDrain++,b=!0),p.pause())}function c(t){U("onerror",t),d(),e.removeListener("error",c),0===C(e,"error")&&e.emit("error",t)}function l(){e.removeListener("finish",u),d()}function u(){U("onfinish"),e.removeListener("close",l),d()}function d(){U("unpipe"),p.unpipe(e)}var p=this,f=this._readableState;switch(f.pipesCount){case 0:f.pipes=e;break;case 1:f.pipes=[f.pipes,e];break;default:f.pipes.push(e)}f.pipesCount+=1,U("pipe count=%d opts=%j",f.pipesCount,t);var m=(!t||!1!==t.end)&&e!==r.stdout&&e!==r.stderr,h=m?i:d;f.endEmitted?P(h):p.once("end",h),e.on("unpipe",n);var g=w(p);e.on("drain",g);var y=!1,b=!1;return p.on("data",a),s(e,"error",c),e.once("close",l),e.once("finish",u),e.emit("pipe",p),f.flowing||(U("pipe resume"),p.resume()),e},c.prototype.unpipe=function(e){var t=this._readableState,n={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes?this:(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this,n),this);if(!e){var r=t.pipes,i=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var o=0;o<i;o++)r[o].emit("unpipe",this,n);return this}var s=A(t.pipes,e);return-1===s?this:(t.pipes.splice(s,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this,n),this)},c.prototype.on=function(e,t){var n=L.prototype.on.call(this,e,t);if("data"===e)!1!==this._readableState.flowing&&this.resume();else if("readable"===e){var r=this._readableState;r.endEmitted||r.readableListening||(r.readableListening=r.needReadable=!0,r.emittedReadable=!1,r.reading?r.length&&g(this):P(_,this))}return n},c.prototype.addListener=c.prototype.on,c.prototype.resume=function(){var e=this._readableState;return e.flowing||(U("resume"),e.flowing=!0,k(this,e)),this},c.prototype.pause=function(){return U("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(U("pause"),this._readableState.flowing=!1,this.emit("pause")),this},c.prototype.wrap=function(e){var t=this,n=this._readableState,r=!1;e.on("end",function(){if(U("wrapped end"),n.decoder&&!n.ended){var e=n.decoder.end();e&&e.length&&t.push(e)}t.push(null)}),e.on("data",function(i){if(U("wrapped data"),n.decoder&&(i=n.decoder.write(i)),(!n.objectMode||null!==i&&void 0!==i)&&(n.objectMode||i&&i.length)){t.push(i)||(r=!0,e.pause())}});for(var i in e)void 0===this[i]&&"function"==typeof e[i]&&(this[i]=function(t){return function(){return e[t].apply(e,arguments)}}(i));for(var o=0;o<H.length;o++)e.on(H[o],this.emit.bind(this,H[o]));return this._read=function(t){U("wrapped _read",t),r&&(r=!1,e.resume())},this},c._fromList=S}).call(t,n(5),n(1))},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){e.exports=n(30).EventEmitter},function(e,t,n){"use strict";function r(e,t){var n=this,r=this._readableState&&this._readableState.destroyed,i=this._writableState&&this._writableState.destroyed;return r||i?(t?t(e):!e||this._writableState&&this._writableState.errorEmitted||s(o,this,e),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(e||null,function(e){!t&&e?(s(o,n,e),n._writableState&&(n._writableState.errorEmitted=!0)):t&&t(e)}),this)}function i(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}function o(e,t){e.emit("error",t)}var s=n(45).nextTick;e.exports={destroy:r,undestroy:i}},function(e,t,n){"use strict";(function(t,r,i){function o(e){var t=this;this.next=null,this.entry=null,this.finish=function(){E(t,e)}}function s(e){return O.from(e)}function a(e){return O.isBuffer(e)||e instanceof C}function c(){}function l(e,t){$=$||n(18),e=e||{};var r=t instanceof $;this.objectMode=!!e.objectMode,r&&(this.objectMode=this.objectMode||!!e.writableObjectMode);var i=e.highWaterMark,s=e.writableHighWaterMark,a=this.objectMode?16:16384;this.highWaterMark=i||0===i?i:r&&(s||0===s)?s:a,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var c=!1===e.decodeStrings;this.decodeStrings=!c,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){b(t,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new o(this)}function u(e){if($=$||n(18),!(M.call(u,this)||this instanceof $))return new u(e);this._writableState=new l(e,this),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.final&&(this._final=e.final)),j.call(this)}function d(e,t){var n=new Error("write after end");e.emit("error",n),I(t,n)}function p(e,t,n,r){var i=!0,o=!1;return null===n?o=new TypeError("May not write null values to stream"):"string"==typeof n||void 0===n||t.objectMode||(o=new TypeError("Invalid non-string/buffer chunk")),o&&(e.emit("error",o),I(r,o),i=!1),i}function f(e,t,n){return e.objectMode||!1===e.decodeStrings||"string"!=typeof t||(t=O.from(t,n)),t}function m(e,t,n,r,i,o){if(!n){var s=f(t,r,i);r!==s&&(n=!0,i="buffer",r=s)}var a=t.objectMode?1:r.length;t.length+=a;var c=t.length<t.highWaterMark;if(c||(t.needDrain=!0),t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:r,encoding:i,isBuf:n,callback:o,next:null},l?l.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else h(e,t,!1,a,r,i,o);return c}function h(e,t,n,r,i,o,s){t.writelen=r,t.writecb=s,t.writing=!0,t.sync=!0,n?e._writev(i,t.onwrite):e._write(i,o,t.onwrite),t.sync=!1}function g(e,t,n,r,i){--t.pendingcb,n?(I(i,r),I(S,e,t),e._writableState.errorEmitted=!0,e.emit("error",r)):(i(r),e._writableState.errorEmitted=!0,e.emit("error",r),S(e,t))}function y(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}function b(e,t){var n=e._writableState,r=n.sync,i=n.writecb;if(y(n),t)g(e,n,r,t,i);else{var o=k(n);o||n.corked||n.bufferProcessing||!n.bufferedRequest||_(e,n),r?X(v,e,n,o,i):v(e,n,o,i)}}function v(e,t,n,r){n||w(e,t),t.pendingcb--,r(),S(e,t)}function w(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}function _(e,t){t.bufferProcessing=!0;var n=t.bufferedRequest;if(e._writev&&n&&n.next){var r=t.bufferedRequestCount,i=new Array(r),s=t.corkedRequestsFree;s.entry=n;for(var a=0,c=!0;n;)i[a]=n,n.isBuf||(c=!1),n=n.next,a+=1;i.allBuffers=c,h(e,t,!0,t.length,i,"",s.finish),t.pendingcb++,t.lastBufferedRequest=null,s.next?(t.corkedRequestsFree=s.next,s.next=null):t.corkedRequestsFree=new o(t),t.bufferedRequestCount=0}else{for(;n;){var l=n.chunk,u=n.encoding,d=n.callback;if(h(e,t,!1,t.objectMode?1:l.length,l,u,d),n=n.next,t.bufferedRequestCount--,t.writing)break}null===n&&(t.lastBufferedRequest=null)}t.bufferedRequest=n,t.bufferProcessing=!1}function k(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function x(e,t){e._final(function(n){t.pendingcb--,n&&e.emit("error",n),t.prefinished=!0,e.emit("prefinish"),S(e,t)})}function T(e,t){t.prefinished||t.finalCalled||("function"==typeof e._final?(t.pendingcb++,t.finalCalled=!0,I(x,e,t)):(t.prefinished=!0,e.emit("prefinish")))}function S(e,t){var n=k(t);return n&&(T(e,t),0===t.pendingcb&&(t.finished=!0,e.emit("finish"))),n}function q(e,t,n){t.ending=!0,S(e,t),n&&(t.finished?I(n):e.once("finish",n)),t.ended=!0,e.writable=!1}function E(e,t,n){var r=e.entry;for(e.entry=null;r;){var i=r.callback;t.pendingcb--,i(n),r=r.next}t.corkedRequestsFree?t.corkedRequestsFree.next=e:t.corkedRequestsFree=e}var I=n(45).nextTick;e.exports=u;var $,X=!t.browser&&["v0.10","v0.9."].indexOf(t.version.slice(0,5))>-1?r:I;u.WritableState=l;var A=n(31);A.inherits=n(10);var P={deprecate:n(273)},j=n(113),O=n(9).Buffer,C=i.Uint8Array||function(){},L=n(114);A.inherits(u,j),l.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(l.prototype,"buffer",{get:P.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}();var M;"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(M=Function.prototype[Symbol.hasInstance],Object.defineProperty(u,Symbol.hasInstance,{value:function(e){return!!M.call(this,e)||this===u&&(e&&e._writableState instanceof l)}})):M=function(e){return e instanceof this},u.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},u.prototype.write=function(e,t,n){var r=this._writableState,i=!1,o=!r.objectMode&&a(e);return o&&!O.isBuffer(e)&&(e=s(e)),"function"==typeof t&&(n=t,t=null),o?t="buffer":t||(t=r.defaultEncoding),"function"!=typeof n&&(n=c),r.ended?d(this,n):(o||p(this,r,e,n))&&(r.pendingcb++,i=m(this,r,o,e,t,n)),i},u.prototype.cork=function(){this._writableState.corked++},u.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.finished||e.bufferProcessing||!e.bufferedRequest||_(this,e))},u.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+e);return this._writableState.defaultEncoding=e,this},u.prototype._write=function(e,t,n){n(new Error("_write() is not implemented"))},u.prototype._writev=null,u.prototype.end=function(e,t,n){var r=this._writableState;"function"==typeof e?(n=e,e=null,t=null):"function"==typeof t&&(n=t,t=null),null!==e&&void 0!==e&&this.write(e,t),r.corked&&(r.corked=1,this.uncork()),r.ending||r.finished||q(this,r,n)},Object.defineProperty(u.prototype,"destroyed",{get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),u.prototype.destroy=L.destroy,u.prototype._undestroy=L.undestroy,u.prototype._destroy=function(e,t){this.end(),t(e)}}).call(t,n(1),n(271).setImmediate,n(5))},function(e,t,n){"use strict";function r(e){if(!e)return"utf8";for(var t;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(t)return;e=(""+e).toLowerCase(),t=!0}}function i(e){var t=r(e);if("string"!=typeof t&&(b.isEncoding===v||!v(e)))throw new Error("Unknown encoding: "+e);return t||e}function o(e){this.encoding=i(e);var t;switch(this.encoding){case"utf16le":this.text=p,this.end=f,t=4;break;case"utf8":this.fillLast=l,t=4;break;case"base64":this.text=m,this.end=h,t=3;break;default:return this.write=g,void(this.end=y)}this.lastNeed=0,this.lastTotal=0,this.lastChar=b.allocUnsafe(t)}function s(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:-1}function a(e,t,n){var r=t.length-1;if(r<n)return 0;var i=s(t[r]);return i>=0?(i>0&&(e.lastNeed=i-1),i):--r<n?0:(i=s(t[r]))>=0?(i>0&&(e.lastNeed=i-2),i):--r<n?0:(i=s(t[r]),i>=0?(i>0&&(2===i?i=0:e.lastNeed=i-3),i):0)}function c(e,t,n){if(128!=(192&t[0]))return e.lastNeed=0,"�".repeat(n);if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,"�".repeat(n+1);if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,"�".repeat(n+2)}}function l(e){var t=this.lastTotal-this.lastNeed,n=c(this,e,t);return void 0!==n?n:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function u(e,t){var n=a(this,e,t);if(!this.lastNeed)return e.toString("utf8",t);this.lastTotal=n;var r=e.length-(n-this.lastNeed);return e.copy(this.lastChar,0,r),e.toString("utf8",t,r)}function d(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+"�".repeat(this.lastTotal-this.lastNeed):t}function p(e,t){if((e.length-t)%2==0){var n=e.toString("utf16le",t);if(n){var r=n.charCodeAt(n.length-1);if(r>=55296&&r<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",t,e.length-1)}function f(e){var t=e&&e.length?this.write(e):"";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,n)}return t}function m(e,t){var n=(e.length-t)%3;return 0===n?e.toString("base64",t):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",t,e.length-n))}function h(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function g(e){return e.toString(this.encoding)}function y(e){return e&&e.length?this.write(e):""}var b=n(9).Buffer,v=b.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};t.StringDecoder=o,o.prototype.write=function(e){if(0===e.length)return"";var t,n;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return"";n=this.lastNeed,this.lastNeed=0}else n=0;return n<e.length?t?t+this.text(e,n):this.text(e,n):t||""},o.prototype.end=d,o.prototype.text=u,o.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}},function(e,t,n){"use strict";function r(e,t){var n=this._transformState;n.transforming=!1;var r=n.writecb;if(!r)return this.emit("error",new Error("write callback called multiple times"));n.writechunk=null,n.writecb=null,null!=t&&this.push(t),r(e);var i=this._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}function i(e){if(!(this instanceof i))return new i(e);a.call(this,e),this._transformState={afterTransform:r.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",o)}function o(){var e=this;"function"==typeof this._flush?this._flush(function(t,n){s(e,t,n)}):s(this,null,null)}function s(e,t,n){if(t)return e.emit("error",t);if(null!=n&&e.push(n),e._writableState.length)throw new Error("Calling transform done when ws.length != 0");if(e._transformState.transforming)throw new Error("Calling transform done when still transforming");return e.push(null)}e.exports=i;var a=n(18),c=n(31);c.inherits=n(10),c.inherits(i,a),i.prototype.push=function(e,t){return this._transformState.needTransform=!1,a.prototype.push.call(this,e,t)},i.prototype._transform=function(e,t,n){throw new Error("_transform() is not implemented")},i.prototype._write=function(e,t,n){var r=this._transformState;if(r.writecb=n,r.writechunk=e,r.writeencoding=t,!r.transforming){var i=this._readableState;(r.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},i.prototype._read=function(e){var t=this._transformState;null!==t.writechunk&&t.writecb&&!t.transforming?(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform)):t.needTransform=!0},i.prototype._destroy=function(e,t){var n=this;a.prototype._destroy.call(this,e,function(e){t(e),n.emit("close")})}},function(e,t,n){var r=n(275),i=function(){},o=function(e){return e.setHeader&&"function"==typeof e.abort},s=function(e){return e.stdio&&Array.isArray(e.stdio)&&3===e.stdio.length},a=function(e,t,n){if("function"==typeof t)return a(e,null,t);t||(t={}),n=r(n||i);var c=e._writableState,l=e._readableState,u=t.readable||!1!==t.readable&&e.readable,d=t.writable||!1!==t.writable&&e.writable,p=function(){e.writable||f()},f=function(){d=!1,u||n.call(e)},m=function(){u=!1,d||n.call(e)},h=function(t){n.call(e,t?new Error("exited with error code: "+t):null)},g=function(t){n.call(e,t)},y=function(){return(!u||l&&l.ended)&&(!d||c&&c.ended)?void 0:n.call(e,new Error("premature close"))},b=function(){e.req.on("finish",f)};return o(e)?(e.on("complete",f),e.on("abort",y),e.req?b():e.on("request",b)):d&&!c&&(e.on("end",p),e.on("close",p)),s(e)&&e.on("exit",h),e.on("end",m),e.on("finish",f),!1!==t.error&&e.on("error",g),e.on("close",y),function(){e.removeListener("complete",f),e.removeListener("abort",y),e.removeListener("request",b),e.req&&e.req.removeListener("finish",f),e.removeListener("end",p),e.removeListener("close",p),e.removeListener("finish",f),e.removeListener("exit",h),e.removeListener("end",m),e.removeListener("error",g),e.removeListener("close",y)}};e.exports=a},function(e,t,n){"use strict";function r(e){return[0,1,2].map(function(t){return[0,1].map(function(n){return[0,1].map(function(r){var s=new i(1);return s.writeUInt8(o.codes[e]<<o.CMD_SHIFT|(n?o.DUP_MASK:0)|t<<o.QOS_SHIFT|r,0,!0),s})})})}var i=n(9).Buffer,o=e.exports;o.types={0:"reserved",1:"connect",2:"connack",3:"publish",4:"puback",5:"pubrec",6:"pubrel",7:"pubcomp",8:"subscribe",9:"suback",10:"unsubscribe",11:"unsuback",12:"pingreq",13:"pingresp",14:"disconnect",15:"reserved"},o.codes={};for(var s in o.types){var a=o.types[s];o.codes[a]=s}o.CMD_SHIFT=4,o.CMD_MASK=240,o.DUP_MASK=8,o.QOS_MASK=3,o.QOS_SHIFT=1,o.RETAIN_MASK=1,o.LENGTH_MASK=127,o.LENGTH_FIN_MASK=128,o.SESSIONPRESENT_MASK=1,o.SESSIONPRESENT_HEADER=i.from([o.SESSIONPRESENT_MASK]),o.CONNACK_HEADER=i.from([o.codes.connack<<o.CMD_SHIFT]),o.USERNAME_MASK=128,o.PASSWORD_MASK=64,o.WILL_RETAIN_MASK=32,o.WILL_QOS_MASK=24,o.WILL_QOS_SHIFT=3,o.WILL_FLAG_MASK=4,o.CLEAN_SESSION_MASK=2,o.CONNECT_HEADER=i.from([o.codes.connect<<o.CMD_SHIFT]),o.PUBLISH_HEADER=r("publish"),o.SUBSCRIBE_HEADER=r("subscribe"),o.UNSUBSCRIBE_HEADER=r("unsubscribe"),o.ACKS={unsuback:r("unsuback"),puback:r("puback"),pubcomp:r("pubcomp"),pubrel:r("pubrel"),pubrec:r("pubrec")},o.SUBACK_HEADER=i.from([o.codes.suback<<o.CMD_SHIFT]),o.VERSION3=i.from([3]),o.VERSION4=i.from([4]),o.QOS=[0,1,2].map(function(e){return i.from([e])}),o.EMPTY={pingreq:i.from([o.codes.pingreq<<4,0]),pingresp:i.from([o.codes.pingresp<<4,0]),disconnect:i.from([o.codes.disconnect<<4,0])}},function(e,t,n){"use strict";function r(e,t){switch(t.cork&&(t.cork(),q(i,t)),A&&(A=!1,$()),e.cmd){case"connect":return o(e,t);case"connack":return s(e,t);case"publish":return a(e,t);case"puback":case"pubrec":case"pubrel":case"pubcomp":case"unsuback":return c(e,t);case"subscribe":return l(e,t);case"suback":return u(e,t);case"unsubscribe":return d(e,t);case"pingreq":case"pingresp":case"disconnect":return p(e,t);default:return t.emit("error",new Error("Unknown command")),!1}}function i(e){e.uncork()}function o(e,t){var n=e||{},r=n.protocolId||"MQTT",i=n.protocolVersion||4,o=n.will,s=n.clean,a=n.keepalive||0,c=n.clientId||"",l=n.username,u=n.password;void 0===s&&(s=!0);var d=0;if(!r||"string"!=typeof r&&!k.isBuffer(r))return t.emit("error",new Error("Invalid protocolId")),!1;if(d+=r.length+2,3!==i&&4!==i)return t.emit("error",new Error("Invalid protocol version")),!1;if(d+=1,"string"!=typeof c&&!k.isBuffer(c)||!c&&4!==i||!c&&!s){if(i<4)return t.emit("error",new Error("clientId must be supplied before 3.1.1")),!1;if(1*s==0)return t.emit("error",new Error("clientId must be given if cleanSession set to 0")),!1}else d+=c.length+2;if("number"!=typeof a||a<0||a>65535||a%1!=0)return t.emit("error",new Error("Invalid keepalive")),!1;if(d+=2,d+=1,o){if("object"!=typeof o)return t.emit("error",new Error("Invalid will")),!1;if(!o.topic||"string"!=typeof o.topic)return t.emit("error",new Error("Invalid will topic")),!1;if(d+=k.byteLength(o.topic)+2,o.payload&&o.payload){if(!(o.payload.length>=0))return t.emit("error",new Error("Invalid will payload")),!1;"string"==typeof o.payload?d+=k.byteLength(o.payload)+2:d+=o.payload.length+2}else d+=2}if(l){if(!l.length)return t.emit("error",new Error("Invalid username")),!1;d+=k.byteLength(l)+2}if(u){if(!u.length)return t.emit("error",new Error("Invalid password")),!1;d+=w(u)+2}t.write(_.CONNECT_HEADER),h(t,d),v(t,r),t.write(4===i?_.VERSION4:_.VERSION3);var p=0;return p|=l?_.USERNAME_MASK:0,p|=u?_.PASSWORD_MASK:0,p|=o&&o.retain?_.WILL_RETAIN_MASK:0,p|=o&&o.qos?o.qos<<_.WILL_QOS_SHIFT:0,p|=o?_.WILL_FLAG_MASK:0,p|=s?_.CLEAN_SESSION_MASK:0,t.write(k.from([p])),X(t,a),v(t,c),o&&(g(t,o.topic),v(t,o.payload)),l&&v(t,l),u&&v(t,u),!0}function s(e,t){var n=e||{},r=n.returnCode;return"number"!=typeof r?(t.emit("error",new Error("Invalid return code")),!1):(t.write(_.CONNACK_HEADER),h(t,2),t.write(e.sessionPresent?_.SESSIONPRESENT_HEADER:T),t.write(k.from([r])))}function a(e,t){var n=e||{},r=n.qos||0,i=n.retain?_.RETAIN_MASK:0,o=n.topic,s=n.payload||x,a=n.messageId,c=0;if("string"==typeof o)c+=k.byteLength(o)+2;else{if(!k.isBuffer(o))return t.emit("error",new Error("Invalid topic")),!1;c+=o.length+2}return k.isBuffer(s)?c+=s.length:c+=k.byteLength(s),r&&"number"!=typeof a?(t.emit("error",new Error("Invalid messageId")),!1):(r&&(c+=2),t.write(_.PUBLISH_HEADER[r][e.dup?1:0][i?1:0]),h(t,c),X(t,w(o)),t.write(o),r>0&&X(t,a),t.write(s))}function c(e,t){var n=e||{},r=n.cmd||"puback",i=n.messageId,o=n.dup&&"pubrel"===r?_.DUP_MASK:0,s=0;return"pubrel"===r&&(s=1),"number"!=typeof i?(t.emit("error",new Error("Invalid messageId")),!1):(t.write(_.ACKS[r][s][o][0]),h(t,2),X(t,i))}function l(e,t){var n=e||{},r=n.dup?_.DUP_MASK:0,i=n.messageId,o=n.subscriptions,s=0;if("number"!=typeof i)return t.emit("error",new Error("Invalid messageId")),!1;if(s+=2,"object"!=typeof o||!o.length)return t.emit("error",new Error("Invalid subscriptions")),!1;for(var a=0;a<o.length;a+=1){var c=o[a].topic,l=o[a].qos;if("string"!=typeof c)return t.emit("error",new Error("Invalid subscriptions - invalid topic")),!1;if("number"!=typeof l)return t.emit("error",new Error("Invalid subscriptions - invalid qos")),!1;s+=k.byteLength(c)+2+1}t.write(_.SUBSCRIBE_HEADER[1][r?1:0][0]),h(t,s),X(t,i);for(var u=!0,d=0;d<o.length;d++){var p=o[d],f=p.topic,m=p.qos;g(t,f),u=t.write(_.QOS[m])}return u}function u(e,t){var n=e||{},r=n.messageId,i=n.granted,o=0;if("number"!=typeof r)return t.emit("error",new Error("Invalid messageId")),!1;if(o+=2,"object"!=typeof i||!i.length)return t.emit("error",new Error("Invalid qos vector")),!1;for(var s=0;s<i.length;s+=1){if("number"!=typeof i[s])return t.emit("error",new Error("Invalid qos vector")),!1;o+=1}return t.write(_.SUBACK_HEADER),h(t,o),X(t,r),t.write(k.from(i))}function d(e,t){var n=e||{},r=n.messageId,i=n.dup?_.DUP_MASK:0,o=n.unsubscriptions,s=0;if("number"!=typeof r)return t.emit("error",new Error("Invalid messageId")),!1;if(s+=2,"object"!=typeof o||!o.length)return t.emit("error",new Error("Invalid unsubscriptions")),!1;for(var a=0;a<o.length;a+=1){if("string"!=typeof o[a])return t.emit("error",new Error("Invalid unsubscriptions")),!1;s+=k.byteLength(o[a])+2}t.write(_.UNSUBSCRIBE_HEADER[1][i?1:0][0]),h(t,s),X(t,r);for(var c=!0,l=0;l<o.length;l++)c=g(t,o[l]);return c}function p(e,t){return t.write(_.EMPTY[e.cmd])}function f(e){return e>=0&&e<128?1:e>=128&&e<16384?2:e>=16384&&e<2097152?3:e>=2097152&&e<268435456?4:0}function m(e){var t=0,n=0,r=k.allocUnsafe(f(e));do{t=e%128|0,e=e/128|0,e>0&&(t|=128),r.writeUInt8(t,n++,!0)}while(e>0);return r}function h(e,t){var n=P[t];n||(n=m(t),t<16384&&(P[t]=n)),e.write(n)}function g(e,t){var n=k.byteLength(t);X(e,n),e.write(t,"utf8")}function y(e,t){return e.write(E[t])}function b(e,t){return e.write(I(t))}function v(e,t){t&&"string"==typeof t?g(e,t):t?(X(e,t.length),e.write(t)):X(e,0)}function w(e){return e?k.isBuffer(e)?e.length:k.byteLength(e):0}var _=n(119),k=n(9).Buffer,x=k.allocUnsafe(0),T=k.from([0]),S=n(286),q=n(287),E=S.cache,I=S.generateNumber,$=S.generateCache,X=y,A=!0;Object.defineProperty(r,"cacheNumbers",{get:function(){return X===y},set:function(e){e?(E&&0!==Object.keys(E).length||(A=!0),X=y):(A=!1,X=b)}});var P={};e.exports=r},function(e,t,n){"use strict";function r(e,t){var n,r;return t.port=t.port||1883,t.hostname=t.hostname||t.host||"localhost",n=t.port,r=t.hostname,i.createConnection(n,r)}var i=n(295);e.exports=r},function(e,t,n){"use strict";function r(e){l?wx.sendSocketMessage({data:e}):u.push(e)}function i(e,t){var n={OPEN:1,CLOSING:2,CLOSED:3,readyState:l?1:0,send:r,close:wx.closeSocket,onopen:null,onmessage:null,onclose:null,onerror:null};return wx.connectSocket({url:e,protocols:t}),wx.onSocketOpen(function(e){n.readyState=n.OPEN,l=!0;for(var t=0;t<u.length;t++)r(u[t]);u=[],n.onopen&&n.onopen.apply(n,arguments)}),wx.onSocketMessage(function(e){n.onmessage&&n.onmessage.apply(n,arguments)}),wx.onSocketClose(function(){n.onclose&&n.onclose.apply(n,arguments),n.readyState=n.CLOSED,l=!1}),wx.onSocketError(function(){n.onerror&&n.onerror.apply(n,arguments),n.readyState=n.CLOSED,l=!1}),n}function o(e,t){var n="wxs"===e.protocol?"wss":"ws",r=n+"://"+e.hostname+":"+e.port+e.path;return"function"==typeof e.transformWsUrl&&(r=e.transformWsUrl(r,e,t)),r}function s(e){e.hostname||(e.hostname="localhost"),e.port||("wss"===e.protocol?e.port=443:e.port=80),e.path||(e.path="/"),e.wsOptions||(e.wsOptions={})}function a(e,t){var n="MQIsdp"===t.protocolId&&3===t.protocolVersion?"mqttv3.1":"mqtt";s(t);var r=o(t,e);return d(i(r,[n]))}function c(e,t){if(t.hostname||(t.hostname=t.host),!t.hostname){if("undefined"==typeof document)throw new Error("Could not determine host. Specify host manually.");var n=p.parse(document.URL);t.hostname=n.hostname,t.port||(t.port=n.port)}return a(e,t)}var l=!1,u=[],d=n(123),p=n(71);e.exports=c},function(e,t,n){"use strict";(function(t,r){function i(e,n,r){var i=new s({objectMode:e.objectMode});return i._write=n,i._flush=r,i._destroy=function(e,n){var r=this;this.push(null),this.end(),t.nextTick(function(){n(e),r.emit("close")})},i}function o(e,n,o){function s(e,t,n){if(v.readyState!==v.OPEN)return void n();q&&"string"==typeof e&&(e=new l(e,"utf8")),v.send(e,n)}function u(e,t,n){if(v.bufferedAmount>T)return void setTimeout(u,S,e,t,n);q&&"string"==typeof e&&(e=new l(e,"utf8"));try{v.send(e)}catch(e){return n(e)}n()}function d(e){v.close(),e()}function p(){b.setReadable(x),b.setWritable(x),b.emit("connect")}function f(){b.end(),b.destroy()}function m(e){b.destroy(e)}function h(e){var t=e.data;t=t instanceof ArrayBuffer?l.from(t):l.from(t,"utf8"),x.push(t)}function g(){v.close()}function y(e,t){for(var n=new Array(e.length),r=0;r<e.length;r++)"string"==typeof e[r].chunk?n[r]=l.from(e[r],"utf8"):n[r]=e[r].chunk;this._write(l.concat(n),"binary",t)}var b,v,w="browser"===t.title,_=!!r.WebSocket,k=w?u:s;n&&!Array.isArray(n)&&"object"==typeof n&&(o=n,n=null,("string"==typeof o.protocol||Array.isArray(o.protocol))&&(n=o.protocol)),o||(o={}),void 0===o.objectMode&&(o.objectMode=!(!0===o.binary||void 0===o.binary));var x=i(o,k,d);o.objectMode||(x._writev=y);var T=o.browserBufferSize||524288,S=o.browserBufferTimeout||1e3;"object"==typeof e?v=e:(v=_&&w?new c(e,n):new c(e,n,o),v.binaryType="arraybuffer"),v.readyState===v.OPEN?b=x:(b=a.obj(),v.onopen=p),b.socket=v,v.onclose=f,v.onerror=m,v.onmessage=h,x.on("close",g);var q=!o.objectMode;return b}var s=n(44).Transform,a=n(297),c=n(299),l=n(9).Buffer;e.exports=o}).call(t,n(1),n(5))},function(e,t,n){"use strict";(function(t){function r(e,t){var n=e.protocol+"://"+e.hostname+":"+e.port+e.path;return"function"==typeof e.transformWsUrl&&(n=e.transformWsUrl(n,e,t)),n}function i(e){e.hostname||(e.hostname="localhost"),e.port||("wss"===e.protocol?e.port=443:e.port=80),e.path||(e.path="/"),e.wsOptions||(e.wsOptions={}),d||"wss"!==e.protocol||u.forEach(function(t){e.hasOwnProperty(t)&&!e.wsOptions.hasOwnProperty(t)&&(e.wsOptions[t]=e[t])})}function o(e,t){var n="MQIsdp"===t.protocolId&&3===t.protocolVersion?"mqttv3.1":"mqtt";i(t);var o=r(t,e);return c(o,[n],t.wsOptions)}function s(e,t){return o(e,t)}function a(e,t){if(t.hostname||(t.hostname=t.host),!t.hostname){if("undefined"==typeof document)throw new Error("Could not determine host. Specify host manually.");var n=l.parse(document.URL);t.hostname=n.hostname,t.port||(t.port=n.port)}return o(e,t)}var c=n(123),l=n(71),u=["rejectUnauthorized","ca","cert","key","pfx","passphrase"],d="browser"===t.title;e.exports=d?a:s}).call(t,n(1))},function(e,t){e.exports={messages:{base:"flespi/message/",children:{channels:{methods:[{name:"subscribe",pattern:"gw/channels/{channel_id}/{ident}",params:["channel_id","ident"]},{name:"unsubscribe",pattern:"gw/channels/{channel_id}/{ident}",params:["channel_id","ident"]}]},devices:{methods:[{name:"subscribe",pattern:"registry/devices/{device_id}",params:["device_id"]},{name:"unsubscribe",pattern:"registry/devices/{device_id}",params:["device_id"]}]},containers:{methods:[{name:"subscribe",pattern:"storage/containers/{container_id}/{name}",params:["container_id","name"]},{name:"unsubscribe",pattern:"storage/containers/{container_id}/{name}",params:["container_id","name"]}]},abques:{methods:[{name:"subscribe",pattern:"storage/abques/{abque_id}/{name}",params:["abque_id","name"]},{name:"unsubscribe",pattern:"storage/abques/{abque_id}/{name}",params:["abque_id","name"]}]}}},sms:{base:"flespi/sms/gw/modems/",methods:[{name:"subscribe",pattern:"{modem_id}/{phone}",params:["modem_id","phone"]},{name:"unsubscribe",pattern:"{modem_id}/{phone}",params:["modem_id","phone"]}]},logs:{base:"flespi/log/",methods:[{name:"subscribe",pattern:"{api}/{origin}/{event_type}",params:["api","origin","event_type"]},{name:"unsubscribe",pattern:"{api}/{origin}/{event_type}",params:["api","origin","event_type"]}]}}},function(e,t,n){e.exports={default:n(319),__esModule:!0}},function(e,t){e.exports={devices:{api:"registry",origin:"devices/+"},streams:{api:"registry",origin:"streams/+",children:{subscriptions:{api:"registry",origin:"streams/+/subscriptions/+"}}},channels:{api:"gw",origin:"channels/+"},containers:{api:"storage",origin:"containers/+"},abques:{api:"storage",origin:"abques/+"},modems:{api:"gw",origin:"modems/+"},customer:{children:{tokens:{api:"platform",origin:"customer/tokens/+"}}},mqtt:{children:{sessions:{api:"mqtt",origin:"sessions/+"}}}}},function(e,t,n){e.exports=n(129)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var i=n(19),o=r(i),s=n(135),a=r(s),c=n(136),l=r(c),u=n(140),d=r(u),p=n(229),f=r(p),m=n(307),h=r(m),g=n(317),y=r(g),b=n(318),v=r(b),w=n(321),_=r(w),k=n(81),x=r(k),T=function(){function e(t){(0,a.default)(this,e);var n={httpConfig:{server:"https://flespi.io"},socketConfig:{server:"wss://mqtt.flespi.io"},token:""};this.config=(0,x.default)(n,t),this.socket=f.default,this.http=d.default,this.http.init(this.token,this.httpConfig),this.socket.init(this.token,this.socketConfig);var r=(0,h.default)(this.http);(0,o.default)(this,r),(0,o.default)(this,(0,y.default)(this.socket)),this.pool=(0,v.default)(this.http,this.socket),(0,o.default)(this,(0,_.default)(this.http,this.socket))}return(0,l.default)(e,[{key:"token",get:function(){return this.config.token},set:function(e){this.config.token=e,this.socket.update("token",this.token),this.http.update("token",this.token)}},{key:"httpConfig",get:function(){return this.config.httpConfig},set:function(e){this.config.httpConfig=e,this.http.update("config",e)}},{key:"socketConfig",get:function(){return this.config.socketConfig},set:function(e){this.config.socketConfig=e,this.socket.update("config",e)}}]),e}();t.default=T},function(e,t,n){n(131),e.exports=n(0).Object.assign},function(e,t,n){var r=n(6);r(r.S+r.F,"Object",{assign:n(132)})},function(e,t,n){"use strict";var r=n(21),i=n(55),o=n(27),s=n(34),a=n(75),c=Object.assign;e.exports=!c||n(20)(function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach(function(e){t[e]=e}),7!=c({},e)[n]||Object.keys(c({},t)).join("")!=r})?function(e,t){for(var n=s(e),c=arguments.length,l=1,u=i.f,d=o.f;c>l;)for(var p,f=a(arguments[l++]),m=u?r(f).concat(u(f)):r(f),h=m.length,g=0;h>g;)d.call(f,p=m[g++])&&(n[p]=f[p]);return n}:c},function(e,t,n){var r=n(15),i=n(50),o=n(134);e.exports=function(e){return function(t,n,s){var a,c=r(t),l=i(c.length),u=o(s,l);if(e&&n!=n){for(;l>u;)if((a=c[u++])!=a)return!0}else for(;l>u;u++)if((e||u in c)&&c[u]===n)return e||u||0;return!e&&-1}}},function(e,t,n){var r=n(51),i=Math.max,o=Math.min;e.exports=function(e,t){return e=r(e),e<0?i(e+t,0):o(e,t)}},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,n){"use strict";t.__esModule=!0;var r=n(137),i=function(e){return e&&e.__esModule?e:{default:e}}(r);t.default=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),(0,i.default)(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()},function(e,t,n){e.exports={default:n(138),__esModule:!0}},function(e,t,n){n(139);var r=n(0).Object;e.exports=function(e,t,n){return r.defineProperty(e,t,n)}},function(e,t,n){var r=n(6);r(r.S+r.F*!n(11),"Object",{defineProperty:n(7).f})},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(){var e="";return m.server&&(e=m.server),m.port&&(e+=":"+m.port),e}function o(e){var t={baseURL:i()};return(0,d.default)((0,f.default)(t,e))}Object.defineProperty(t,"__esModule",{value:!0});var s=n(19),a=r(s),c=n(16),l=r(c),u=n(144),d=r(u),p=n(81),f=r(p),m={},h=["get","post","put","delete"];o.init=function(e,t){(0,l.default)(m).length||(m=t,m.token=e,d.default.defaults.headers.common.Authorization=m.token)},o.update=function(e,t){switch(e){case"token":m.token=t,d.default.defaults.headers.common.Authorization=m.token;break;case"config":m=(0,a.default)(m,t)}},h.forEach(function(e){o[e]="get"===e||"delete"===e?function(t,n){return o((0,a.default)({},n,{url:t,method:e}))}:function(t,n,r){return o((0,a.default)({},r,{url:t,method:e,data:n}))}}),o.external=d.default,t.default=o},function(e,t,n){n(142),e.exports=n(0).Object.keys},function(e,t,n){var r=n(34),i=n(21);n(143)("keys",function(){return function(e){return i(r(e))}})},function(e,t,n){var r=n(6),i=n(0),o=n(20);e.exports=function(e,t){var n=(i.Object||{})[e]||Object[e],s={};s[e]=t(n),r(r.S+r.F*o(function(){n(1)}),"Object",s)}},function(e,t,n){e.exports=n(145)},function(e,t,n){"use strict";function r(e){var t=new s(e),n=o(s.prototype.request,t);return i.extend(n,s.prototype,t),i.extend(n,t),n}var i=n(4),o=n(76),s=n(147),a=n(56),c=r(a);c.Axios=s,c.create=function(e){return r(i.merge(a,e))},c.Cancel=n(80),c.CancelToken=n(161),c.isCancel=n(79),c.all=function(e){return Promise.all(e)},c.spread=n(162),e.exports=c,e.exports.default=c},function(e,t){function n(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}function r(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&n(e.slice(0,0))}/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function(e){return null!=e&&(n(e)||r(e)||!!e._isBuffer)}},function(e,t,n){"use strict";function r(e){this.defaults=e,this.interceptors={request:new s,response:new s}}var i=n(56),o=n(4),s=n(156),a=n(157);r.prototype.request=function(e){"string"==typeof e&&(e=o.merge({url:arguments[0]},arguments[1])),e=o.merge(i,this.defaults,{method:"get"},e),e.method=e.method.toLowerCase();var t=[a,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){t.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){t.push(e.fulfilled,e.rejected)});t.length;)n=n.then(t.shift(),t.shift());return n},o.forEach(["delete","get","head","options"],function(e){r.prototype[e]=function(t,n){return this.request(o.merge(n||{},{method:e,url:t}))}}),o.forEach(["post","put","patch"],function(e){r.prototype[e]=function(t,n,r){return this.request(o.merge(r||{},{method:e,url:t,data:n}))}}),e.exports=r},function(e,t,n){"use strict";var r=n(4);e.exports=function(e,t){r.forEach(e,function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])})}},function(e,t,n){"use strict";var r=n(78);e.exports=function(e,t,n){var i=n.config.validateStatus;n.status&&i&&!i(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,i){return e.config=t,n&&(e.code=n),e.request=r,e.response=i,e}},function(e,t,n){"use strict";function r(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var i=n(4);e.exports=function(e,t,n){if(!t)return e;var o;if(n)o=n(t);else if(i.isURLSearchParams(t))o=t.toString();else{var s=[];i.forEach(t,function(e,t){null!==e&&void 0!==e&&(i.isArray(e)&&(t+="[]"),i.isArray(e)||(e=[e]),i.forEach(e,function(e){i.isDate(e)?e=e.toISOString():i.isObject(e)&&(e=JSON.stringify(e)),s.push(r(t)+"="+r(e))}))}),o=s.join("&")}return o&&(e+=(-1===e.indexOf("?")?"?":"&")+o),e}},function(e,t,n){"use strict";var r=n(4),i=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,o,s={};return e?(r.forEach(e.split("\n"),function(e){if(o=e.indexOf(":"),t=r.trim(e.substr(0,o)).toLowerCase(),n=r.trim(e.substr(o+1)),t){if(s[t]&&i.indexOf(t)>=0)return;s[t]="set-cookie"===t?(s[t]?s[t]:[]).concat([n]):s[t]?s[t]+", "+n:n}}),s):s}},function(e,t,n){"use strict";var r=n(4);e.exports=r.isStandardBrowserEnv()?function(){function e(e){var t=e;return n&&(i.setAttribute("href",t),t=i.href),i.setAttribute("href",t),{href:i.href,protocol:i.protocol?i.protocol.replace(/:$/,""):"",host:i.host,search:i.search?i.search.replace(/^\?/,""):"",hash:i.hash?i.hash.replace(/^#/,""):"",hostname:i.hostname,port:i.port,pathname:"/"===i.pathname.charAt(0)?i.pathname:"/"+i.pathname}}var t,n=/(msie|trident)/i.test(navigator.userAgent),i=document.createElement("a");return t=e(window.location.href),function(n){var i=r.isString(n)?e(n):n;return i.protocol===t.protocol&&i.host===t.host}}():function(){return function(){return!0}}()},function(e,t,n){"use strict";function r(){this.message="String contains an invalid character"}function i(e){for(var t,n,i=String(e),s="",a=0,c=o;i.charAt(0|a)||(c="=",a%1);s+=c.charAt(63&t>>8-a%1*8)){if((n=i.charCodeAt(a+=.75))>255)throw new r;t=t<<8|n}return s}var o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";r.prototype=new Error,r.prototype.code=5,r.prototype.name="InvalidCharacterError",e.exports=i},function(e,t,n){"use strict";var r=n(4);e.exports=r.isStandardBrowserEnv()?function(){return{write:function(e,t,n,i,o,s){var a=[];a.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&a.push("expires="+new Date(n).toGMTString()),r.isString(i)&&a.push("path="+i),r.isString(o)&&a.push("domain="+o),!0===s&&a.push("secure"),document.cookie=a.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}()},function(e,t,n){"use strict";function r(){this.handlers=[]}var i=n(4);r.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},r.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},r.prototype.forEach=function(e){i.forEach(this.handlers,function(t){null!==t&&e(t)})},e.exports=r},function(e,t,n){"use strict";function r(e){e.cancelToken&&e.cancelToken.throwIfRequested()}var i=n(4),o=n(158),s=n(79),a=n(56),c=n(159),l=n(160);e.exports=function(e){return r(e),e.baseURL&&!c(e.url)&&(e.url=l(e.baseURL,e.url)),e.headers=e.headers||{},e.data=o(e.data,e.headers,e.transformRequest),e.headers=i.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),i.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]}),(e.adapter||a.adapter)(e).then(function(t){return r(e),t.data=o(t.data,t.headers,e.transformResponse),t},function(t){return s(t)||(r(e),t&&t.response&&(t.response.data=o(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},function(e,t,n){"use strict";var r=n(4);e.exports=function(e,t,n){return r.forEach(n,function(n){e=n(e,t)}),e}},function(e,t,n){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,n){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,n){"use strict";function r(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function(e){t=e});var n=this;e(function(e){n.reason||(n.reason=new i(e),t(n.reason))})}var i=n(80);r.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},r.source=function(){var e;return{token:new r(function(t){e=t}),cancel:e}},e.exports=r},function(e,t,n){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},function(e,t,n){function r(e,t,n,d,p){e!==t&&s(t,function(s,l){if(c(s))p||(p=new i),a(e,t,l,n,r,d,p);else{var f=d?d(u(e,l),s,l+"",e,t,p):void 0;void 0===f&&(f=s),o(e,l,f)}},l)}var i=n(164),o=n(84),s=n(195),a=n(197),c=n(17),l=n(93),u=n(92);e.exports=r},function(e,t,n){function r(e){var t=this.__data__=new i(e);this.size=t.size}var i=n(35),o=n(170),s=n(171),a=n(172),c=n(173),l=n(174);r.prototype.clear=o,r.prototype.delete=s,r.prototype.get=a,r.prototype.has=c,r.prototype.set=l,e.exports=r},function(e,t){function n(){this.__data__=[],this.size=0}e.exports=n},function(e,t,n){function r(e){var t=this.__data__,n=i(t,e);return!(n<0)&&(n==t.length-1?t.pop():s.call(t,n,1),--this.size,!0)}var i=n(36),o=Array.prototype,s=o.splice;e.exports=r},function(e,t,n){function r(e){var t=this.__data__,n=i(t,e);return n<0?void 0:t[n][1]}var i=n(36);e.exports=r},function(e,t,n){function r(e){return i(this.__data__,e)>-1}var i=n(36);e.exports=r},function(e,t,n){function r(e,t){var n=this.__data__,r=i(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this}var i=n(36);e.exports=r},function(e,t,n){function r(){this.__data__=new i,this.size=0}var i=n(35);e.exports=r},function(e,t){function n(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}e.exports=n},function(e,t){function n(e){return this.__data__.get(e)}e.exports=n},function(e,t){function n(e){return this.__data__.has(e)}e.exports=n},function(e,t,n){function r(e,t){var n=this.__data__;if(n instanceof i){var r=n.__data__;if(!o||r.length<a-1)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new s(r)}return n.set(e,t),this.size=n.size,this}var i=n(35),o=n(82),s=n(182),a=200;e.exports=r},function(e,t,n){function r(e){return!(!s(e)||o(e))&&(i(e)?m:l).test(a(e))}var i=n(58),o=n(178),s=n(17),a=n(180),c=/[\\^$.*+?()[\]{}|]/g,l=/^\[object .+?Constructor\]$/,u=Function.prototype,d=Object.prototype,p=u.toString,f=d.hasOwnProperty,m=RegExp("^"+p.call(f).replace(c,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=r},function(e,t,n){function r(e){var t=s.call(e,c),n=e[c];try{e[c]=void 0;var r=!0}catch(e){}var i=a.call(e);return r&&(t?e[c]=n:delete e[c]),i}var i=n(59),o=Object.prototype,s=o.hasOwnProperty,a=o.toString,c=i?i.toStringTag:void 0;e.exports=r},function(e,t){function n(e){return i.call(e)}var r=Object.prototype,i=r.toString;e.exports=n},function(e,t,n){function r(e){return!!o&&o in e}var i=n(179),o=function(){var e=/[^.]+$/.exec(i&&i.keys&&i.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();e.exports=r},function(e,t,n){var r=n(22),i=r["__core-js_shared__"];e.exports=i},function(e,t){function n(e){if(null!=e){try{return i.call(e)}catch(e){}try{return e+""}catch(e){}}return""}var r=Function.prototype,i=r.toString;e.exports=n},function(e,t){function n(e,t){return null==e?void 0:e[t]}e.exports=n},function(e,t,n){function r(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}var i=n(183),o=n(190),s=n(192),a=n(193),c=n(194);r.prototype.clear=i,r.prototype.delete=o,r.prototype.get=s,r.prototype.has=a,r.prototype.set=c,e.exports=r},function(e,t,n){function r(){this.size=0,this.__data__={hash:new i,map:new(s||o),string:new i}}var i=n(184),o=n(35),s=n(82);e.exports=r},function(e,t,n){function r(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}var i=n(185),o=n(186),s=n(187),a=n(188),c=n(189);r.prototype.clear=i,r.prototype.delete=o,r.prototype.get=s,r.prototype.has=a,r.prototype.set=c,e.exports=r},function(e,t,n){function r(){this.__data__=i?i(null):{},this.size=0}var i=n(38);e.exports=r},function(e,t){function n(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}e.exports=n},function(e,t,n){function r(e){var t=this.__data__;if(i){var n=t[e];return n===o?void 0:n}return a.call(t,e)?t[e]:void 0}var i=n(38),o="__lodash_hash_undefined__",s=Object.prototype,a=s.hasOwnProperty;e.exports=r},function(e,t,n){function r(e){var t=this.__data__;return i?void 0!==t[e]:s.call(t,e)}var i=n(38),o=Object.prototype,s=o.hasOwnProperty;e.exports=r},function(e,t,n){function r(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=i&&void 0===t?o:t,this}var i=n(38),o="__lodash_hash_undefined__";e.exports=r},function(e,t,n){function r(e){var t=i(this,e).delete(e);return this.size-=t?1:0,t}var i=n(39);e.exports=r},function(e,t){function n(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}e.exports=n},function(e,t,n){function r(e){return i(this,e).get(e)}var i=n(39);e.exports=r},function(e,t,n){function r(e){return i(this,e).has(e)}var i=n(39);e.exports=r},function(e,t,n){function r(e,t){var n=i(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this}var i=n(39);e.exports=r},function(e,t,n){var r=n(196),i=r();e.exports=i},function(e,t){function n(e){return function(t,n,r){for(var i=-1,o=Object(t),s=r(t),a=s.length;a--;){var c=s[e?a:++i];if(!1===n(o[c],c,o))break}return t}}e.exports=n},function(e,t,n){function r(e,t,n,r,v,w,_){var k=y(e,n),x=y(t,n),T=_.get(x);if(T)return void i(e,n,T);var S=w?w(k,x,n+"",e,t,_):void 0,q=void 0===S;if(q){var E=u(x),I=!E&&p(x),$=!E&&!I&&g(x);S=x,E||I||$?u(k)?S=k:d(k)?S=a(k):I?(q=!1,S=o(x,!0)):$?(q=!1,S=s(x,!0)):S=[]:h(x)||l(x)?(S=k,l(k)?S=b(k):(!m(k)||r&&f(k))&&(S=c(x))):q=!1}q&&(_.set(x,S),v(S,x,r,w,_),_.delete(x)),i(e,n,S)}var i=n(84),o=n(198),s=n(199),a=n(202),c=n(203),l=n(88),u=n(61),d=n(207),p=n(90),f=n(58),m=n(17),h=n(209),g=n(91),y=n(92),b=n(213);e.exports=r},function(e,t,n){(function(e){function r(e,t){if(t)return e.slice();var n=e.length,r=l?l(n):new e.constructor(n);return e.copy(r),r}var i=n(22),o="object"==typeof t&&t&&!t.nodeType&&t,s=o&&"object"==typeof e&&e&&!e.nodeType&&e,a=s&&s.exports===o,c=a?i.Buffer:void 0,l=c?c.allocUnsafe:void 0;e.exports=r}).call(t,n(40)(e))},function(e,t,n){function r(e,t){var n=t?i(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}var i=n(200);e.exports=r},function(e,t,n){function r(e){var t=new e.constructor(e.byteLength);return new i(t).set(new i(e)),t}var i=n(201);e.exports=r},function(e,t,n){var r=n(22),i=r.Uint8Array;e.exports=i},function(e,t){function n(e,t){var n=-1,r=e.length;for(t||(t=Array(r));++n<r;)t[n]=e[n];return t}e.exports=n},function(e,t,n){function r(e){return"function"!=typeof e.constructor||s(e)?{}:i(o(e))}var i=n(204),o=n(86),s=n(87);e.exports=r},function(e,t,n){var r=n(17),i=Object.create,o=function(){function e(){}return function(t){if(!r(t))return{};if(i)return i(t);e.prototype=t;var n=new e;return e.prototype=void 0,n}}();e.exports=o},function(e,t){function n(e,t){return function(n){return e(t(n))}}e.exports=n},function(e,t,n){function r(e){return o(e)&&i(e)==s}var i=n(28),o=n(23),s="[object Arguments]";e.exports=r},function(e,t,n){function r(e){return o(e)&&i(e)}var i=n(62),o=n(23);e.exports=r},function(e,t){function n(){return!1}e.exports=n},function(e,t,n){function r(e){if(!s(e)||i(e)!=a)return!1;var t=o(e);if(null===t)return!0;var n=d.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&u.call(n)==p}var i=n(28),o=n(86),s=n(23),a="[object Object]",c=Function.prototype,l=Object.prototype,u=c.toString,d=l.hasOwnProperty,p=u.call(Object);e.exports=r},function(e,t,n){function r(e){return s(e)&&o(e.length)&&!!a[i(e)]}var i=n(28),o=n(89),s=n(23),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,e.exports=r},function(e,t){function n(e){return function(t){return e(t)}}e.exports=n},function(e,t,n){(function(e){var r=n(83),i="object"==typeof t&&t&&!t.nodeType&&t,o=i&&"object"==typeof e&&e&&!e.nodeType&&e,s=o&&o.exports===i,a=s&&r.process,c=function(){try{return a&&a.binding&&a.binding("util")}catch(e){}}();e.exports=c}).call(t,n(40)(e))},function(e,t,n){function r(e){return i(e,o(e))}var i=n(214),o=n(93);e.exports=r},function(e,t,n){function r(e,t,n,r){var s=!n;n||(n={});for(var a=-1,c=t.length;++a<c;){var l=t[a],u=r?r(n[l],e[l],l,n,e):void 0;void 0===u&&(u=e[l]),s?o(n,l,u):i(n,l,u)}return n}var i=n(215),o=n(60);e.exports=r},function(e,t,n){function r(e,t,n){var r=e[t];a.call(e,t)&&o(r,n)&&(void 0!==n||t in e)||i(e,t,n)}var i=n(60),o=n(37),s=Object.prototype,a=s.hasOwnProperty;e.exports=r},function(e,t,n){function r(e,t){var n=s(e),r=!n&&o(e),u=!n&&!r&&a(e),p=!n&&!r&&!u&&l(e),f=n||r||u||p,m=f?i(e.length,String):[],h=m.length;for(var g in e)!t&&!d.call(e,g)||f&&("length"==g||u&&("offset"==g||"parent"==g)||p&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||c(g,h))||m.push(g);return m}var i=n(217),o=n(88),s=n(61),a=n(90),c=n(94),l=n(91),u=Object.prototype,d=u.hasOwnProperty;e.exports=r},function(e,t){function n(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}e.exports=n},function(e,t,n){function r(e){if(!i(e))return s(e);var t=o(e),n=[];for(var r in e)("constructor"!=r||!t&&c.call(e,r))&&n.push(r);return n}var i=n(17),o=n(87),s=n(219),a=Object.prototype,c=a.hasOwnProperty;e.exports=r},function(e,t){function n(e){var t=[];if(null!=e)for(var n in Object(e))t.push(n);return t}e.exports=n},function(e,t,n){function r(e){return i(function(t,n){var r=-1,i=n.length,s=i>1?n[i-1]:void 0,a=i>2?n[2]:void 0;for(s=e.length>3&&"function"==typeof s?(i--,s):void 0,a&&o(n[0],n[1],a)&&(s=i<3?void 0:s,i=1),t=Object(t);++r<i;){var c=n[r];c&&e(t,c,r,s)}return t})}var i=n(221),o=n(228);e.exports=r},function(e,t,n){function r(e,t){return s(o(e,t,i),e+"")}var i=n(95),o=n(222),s=n(224);e.exports=r},function(e,t,n){function r(e,t,n){return t=o(void 0===t?e.length-1:t,0),function(){for(var r=arguments,s=-1,a=o(r.length-t,0),c=Array(a);++s<a;)c[s]=r[t+s];s=-1;for(var l=Array(t+1);++s<t;)l[s]=r[s];return l[t]=n(c),i(e,this,l)}}var i=n(223),o=Math.max;e.exports=r},function(e,t){function n(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}e.exports=n},function(e,t,n){var r=n(225),i=n(227),o=i(r);e.exports=o},function(e,t,n){var r=n(226),i=n(85),o=n(95),s=i?function(e,t){return i(e,"toString",{configurable:!0,enumerable:!1,value:r(t),writable:!0})}:o;e.exports=s},function(e,t){function n(e){return function(){return e}}e.exports=n},function(e,t){function n(e){var t=0,n=0;return function(){var s=o(),a=i-(s-n);if(n=s,a>0){if(++t>=r)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}var r=800,i=16,o=Date.now;e.exports=n},function(e,t,n){function r(e,t,n){if(!a(n))return!1;var r=typeof t;return!!("number"==r?o(n)&&s(t,n.length):"string"==r&&t in n)&&i(n[t],e)}var i=n(37),o=n(62),s=n(94),a=n(17);e.exports=r},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e){var t=[];if(e instanceof Array)e.forEach(function(e){var n=(0,_.default)();x[n]=e,t.push(n)});else{var n=(0,_.default)();x[n]=e,t=n}return h(),t}Object.defineProperty(t,"__esModule",{value:!0});var o=n(230),s=r(o),a=n(66),c=r(a),l=n(19),u=r(l),d=n(16),p=r(d),f=n(67),m=r(f),h=function(){var e=(0,m.default)(c.default.mark(function e(){var t;return c.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!k){e.next=3;break}return e.next=3,k.end(!0);case 3:if(T.token&&T.server){e.next=5;break}return e.abrupt("return",!1);case 5:t=T.server,T.port&&(t+=":"+T.port),k=y.default.connect(t,{username:T.token,clientId:T.clientId||"flespi-io-js_"+Math.random().toString(16).substr(2,8)}),k.on("connect",function(){var e=(0,p.default)(x);e.length&&e.forEach(function(e){k.subscribe(x[e].name)}),S.connect&&S.connect.forEach(function(e){e()})}),k.on("error",function(e){var t="";switch(e.code){case 2:i.close(!0),t="connection refused, identifier rejected";break;case 3:t="connection refused, server unavailable";break;case 5:i.close(!0),t="connection refused, not authorized"}S.error&&S.error.forEach(function(n){n((0,u.default)({message:t},e))})}),k.on("close",function(){S.close&&S.close.forEach(function(e){e()})}),k.on("message",function(e,t){var n=e.split("/");(0,p.default)(x).filter(function(e){var t=x[e].name.split("/");return(t.length===n.length||"#"===t[t.length-1])&&t.reduce(function(e,t,r){return"#"===t||"+"===t?e&&!0:e&&t===n[r]},!0)}).forEach(function(e){x[e].handler(t)})});case 12:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),g=n(263),y=r(g),b=n(301),v=r(b),w=n(302),_=r(w),k=null,x={},T={},S={};i.init=function(){function e(e,n){return t.apply(this,arguments)}var t=(0,m.default)(c.default.mark(function e(t,n){return c.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if((0,p.default)(T).length||(T=(0,u.default)(n,{token:t})),k){e.next=4;break}return e.next=4,h();case 4:case"end":return e.stop()}},e,this)}));return e}(),i.update=function(){function e(e,n){return t.apply(this,arguments)}var t=(0,m.default)(c.default.mark(function e(t,n){return c.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:e.t0=t,e.next="token"===e.t0?3:"config"===e.t0?17:26;break;case 3:if(T.token=n,!k){e.next=14;break}if(!n){e.next=10;break}return e.next=8,h();case 8:e.next=12;break;case 10:return e.next=12,i.close(!0);case 12:e.next=16;break;case 14:return e.next=16,h();case 16:return e.abrupt("break",26);case 17:if(T=(0,u.default)(T,n),!k){e.next=23;break}return e.next=21,h();case 21:e.next=25;break;case 23:return e.next=25,h();case 25:return e.abrupt("break",26);case 26:case"end":return e.stop()}},e,this)}));return e}(),i.hasClient=function(){return!!k},i.subscribe=function(){function e(e){return t.apply(this,arguments)}var t=(0,m.default)(c.default.mark(function e(t){var n,r,i,o,a=this;return c.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(t instanceof Array)){e.next=4;break}return e.abrupt("return",t.reduce(function(){var e=(0,m.default)(c.default.mark(function e(t,n){var r,i,o,s;return c.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(r=(0,_.default)(),x[r]=n,!k){e.next=12;break}return e.next=5,k.subscribe(n.name);case 5:i=e.sent,o=i.err,s=i.granted,o&&t.push(!1),t.push(r),e.next=13;break;case 12:t.push(!1);case 13:case"end":return e.stop()}},e,a)}));return function(t,n){return e.apply(this,arguments)}}(),[]));case 4:if("object"!==(void 0===t?"undefined":(0,s.default)(t))){e.next=22;break}if(n=(0,_.default)(),x[n]=t,!k){e.next=19;break}return e.next=10,k.subscribe(t.name);case 10:if(r=e.sent,i=r.err,o=r.granted,!i){e.next=16;break}return console.log(i),e.abrupt("return",!1);case 16:return e.abrupt("return",n);case 19:return e.abrupt("return",!1);case 20:e.next=23;break;case 22:return e.abrupt("return",!1);case 23:case"end":return e.stop()}},e,this)}));return e}(),i.unsubscribe=function(){function e(e){return t.apply(this,arguments)}var t=(0,m.default)(c.default.mark(function e(t){var n,r=arguments;return c.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=(0,p.default)(x).reduce(function(e,n,i){return("string"==typeof t&&x[n].name===t||t instanceof Array&&t.includes(x[n].name))&&(r[1]?n===r[1]&&e.push(n):e.push(n)),e},[]),n.forEach(function(e){delete x[e]}),!n.length){e.next=8;break}return e.next=5,k.unsubscribe(t);case 5:return e.abrupt("return",e.sent);case 8:return e.abrupt("return",!1);case 9:case"end":return e.stop()}},e,this)}));return e}(),i.unsubscribeAll=function(){function e(){return t.apply(this,arguments)}var t=(0,m.default)(c.default.mark(function e(){var t=this;return c.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:(0,p.default)(x).forEach(function(){var e=(0,m.default)(c.default.mark(function e(n){return c.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,k.unsubscribe(x[n].name);case 2:case"end":return e.stop()}},e,t)}));return function(t){return e.apply(this,arguments)}}());case 1:case"end":return e.stop()}},e,this)}));return e}(),i.publish=(0,m.default)(c.default.mark(function e(){var t,n=arguments;return c.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!k){e.next=6;break}return e.next=3,(t=k).publish.apply(t,n);case 3:return e.abrupt("return",e.sent);case 6:throw new Error("Client is empty");case 7:case"end":return e.stop()}},e,this)})),i.close=function(){function e(){return t.apply(this,arguments)}var t=(0,m.default)(c.default.mark(function e(){var t=arguments;return c.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!k){e.next=3;break}return x={},e.abrupt("return",k.end(t[0]).then(function(){k=null}));case 3:case"end":return e.stop()}},e,this)}));return e}(),i.on=function(e,t){S[e]||(S[e]=[]),S[e].push(t)},i.off=function(e){if(arguments[1]&&"function"==typeof arguments[1]){var t=arguments[1];S[e].reduce(function(e,n,r){return n.toString()===t.toString()&&e.push(r),e},[]).forEach(function(t){S[e].splice(t,1)})}else S[e]=void 0},t.default=(0,v.default)(i)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var i=n(231),o=r(i),s=n(240),a=r(s),c="function"==typeof a.default&&"symbol"==typeof o.default?function(e){return typeof e}:function(e){return e&&"function"==typeof a.default&&e.constructor===a.default&&e!==a.default.prototype?"symbol":typeof e};t.default="function"==typeof a.default&&"symbol"===c(o.default)?function(e){return void 0===e?"undefined":c(e)}:function(e){return e&&"function"==typeof a.default&&e.constructor===a.default&&e!==a.default.prototype?"symbol":void 0===e?"undefined":c(e)}},function(e,t,n){e.exports={default:n(232),__esModule:!0}},function(e,t,n){n(41),n(63),e.exports=n(64).f("iterator")},function(e,t,n){var r=n(51),i=n(49);e.exports=function(e){return function(t,n){var o,s,a=String(i(t)),c=r(n),l=a.length;return c<0||c>=l?e?"":void 0:(o=a.charCodeAt(c),o<55296||o>56319||c+1===l||(s=a.charCodeAt(c+1))<56320||s>57343?e?a.charAt(c):o:e?a.slice(c,c+2):s-56320+(o-55296<<10)+65536)}}},function(e,t,n){"use strict";var r=n(98),i=n(25),o=n(43),s={};n(12)(s,n(3)("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(s,{next:i(1,n)}),o(e,t+" Iterator")}},function(e,t,n){var r=n(7),i=n(8),o=n(21);e.exports=n(11)?Object.defineProperties:function(e,t){i(e);for(var n,s=o(t),a=s.length,c=0;a>c;)r.f(e,n=s[c++],t[n]);return e}},function(e,t,n){var r=n(14),i=n(34),o=n(52)("IE_PROTO"),s=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=i(e),r(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?s:null}},function(e,t,n){"use strict";var r=n(238),i=n(239),o=n(29),s=n(15);e.exports=n(96)(Array,"Array",function(e,t){this._t=s(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,i(1)):"keys"==t?i(0,n):"values"==t?i(0,e[n]):i(0,[n,e[n]])},"values"),o.Arguments=o.Array,r("keys"),r("values"),r("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){e.exports={default:n(241),__esModule:!0}},function(e,t,n){n(242),n(101),n(248),n(249),e.exports=n(0).Symbol},function(e,t,n){"use strict";var r=n(2),i=n(14),o=n(11),s=n(6),a=n(97),c=n(243).KEY,l=n(20),u=n(53),d=n(43),p=n(33),f=n(3),m=n(64),h=n(65),g=n(244),y=n(245),b=n(8),v=n(13),w=n(15),_=n(48),k=n(25),x=n(98),T=n(246),S=n(247),q=n(7),E=n(21),I=S.f,$=q.f,X=T.f,A=r.Symbol,P=r.JSON,j=P&&P.stringify,O=f("_hidden"),C=f("toPrimitive"),L={}.propertyIsEnumerable,M=u("symbol-registry"),R=u("symbols"),D=u("op-symbols"),F=Object.prototype,U="function"==typeof A,z=r.QObject,N=!z||!z.prototype||!z.prototype.findChild,B=o&&l(function(){return 7!=x($({},"a",{get:function(){return $(this,"a",{value:7}).a}})).a})?function(e,t,n){var r=I(F,t);r&&delete F[t],$(e,t,n),r&&e!==F&&$(F,t,r)}:$,H=function(e){var t=R[e]=x(A.prototype);return t._k=e,t},G=U&&"symbol"==typeof A.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof A},W=function(e,t,n){return e===F&&W(D,t,n),b(e),t=_(t,!0),b(n),i(R,t)?(n.enumerable?(i(e,O)&&e[O][t]&&(e[O][t]=!1),n=x(n,{enumerable:k(0,!1)})):(i(e,O)||$(e,O,k(1,{})),e[O][t]=!0),B(e,t,n)):$(e,t,n)},V=function(e,t){b(e);for(var n,r=g(t=w(t)),i=0,o=r.length;o>i;)W(e,n=r[i++],t[n]);return e},Y=function(e,t){return void 0===t?x(e):V(x(e),t)},Q=function(e){var t=L.call(this,e=_(e,!0));return!(this===F&&i(R,e)&&!i(D,e))&&(!(t||!i(this,e)||!i(R,e)||i(this,O)&&this[O][e])||t)},K=function(e,t){if(e=w(e),t=_(t,!0),e!==F||!i(R,t)||i(D,t)){var n=I(e,t);return!n||!i(R,t)||i(e,O)&&e[O][t]||(n.enumerable=!0),n}},J=function(e){for(var t,n=X(w(e)),r=[],o=0;n.length>o;)i(R,t=n[o++])||t==O||t==c||r.push(t);return r},Z=function(e){for(var t,n=e===F,r=X(n?D:w(e)),o=[],s=0;r.length>s;)!i(R,t=r[s++])||n&&!i(F,t)||o.push(R[t]);return o};U||(A=function(){if(this instanceof A)throw TypeError("Symbol is not a constructor!");var e=p(arguments.length>0?arguments[0]:void 0),t=function(n){this===F&&t.call(D,n),i(this,O)&&i(this[O],e)&&(this[O][e]=!1),B(this,e,k(1,n))};return o&&N&&B(F,e,{configurable:!0,set:t}),H(e)},a(A.prototype,"toString",function(){return this._k}),S.f=K,q.f=W,n(100).f=T.f=J,n(27).f=Q,n(55).f=Z,o&&!n(42)&&a(F,"propertyIsEnumerable",Q,!0),m.f=function(e){return H(f(e))}),s(s.G+s.W+s.F*!U,{Symbol:A});for(var ee="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),te=0;ee.length>te;)f(ee[te++]);for(var ne=E(f.store),re=0;ne.length>re;)h(ne[re++]);s(s.S+s.F*!U,"Symbol",{for:function(e){return i(M,e+="")?M[e]:M[e]=A(e)},keyFor:function(e){if(!G(e))throw TypeError(e+" is not a symbol!");for(var t in M)if(M[t]===e)return t},useSetter:function(){N=!0},useSimple:function(){N=!1}}),s(s.S+s.F*!U,"Object",{create:Y,defineProperty:W,defineProperties:V,getOwnPropertyDescriptor:K,getOwnPropertyNames:J,getOwnPropertySymbols:Z}),P&&s(s.S+s.F*(!U||l(function(){var e=A();return"[null]"!=j([e])||"{}"!=j({a:e})||"{}"!=j(Object(e))})),"JSON",{stringify:function(e){for(var t,n,r=[e],i=1;arguments.length>i;)r.push(arguments[i++]);if(n=t=r[1],(v(t)||void 0!==e)&&!G(e))return y(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!G(t))return t}),r[1]=t,j.apply(P,r)}}),A.prototype[C]||n(12)(A.prototype,C,A.prototype.valueOf),d(A,"Symbol"),d(Math,"Math",!0),d(r.JSON,"JSON",!0)},function(e,t,n){var r=n(33)("meta"),i=n(13),o=n(14),s=n(7).f,a=0,c=Object.isExtensible||function(){return!0},l=!n(20)(function(){return c(Object.preventExtensions({}))}),u=function(e){s(e,r,{value:{i:"O"+ ++a,w:{}}})},d=function(e,t){if(!i(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!o(e,r)){if(!c(e))return"F";if(!t)return"E";u(e)}return e[r].i},p=function(e,t){if(!o(e,r)){if(!c(e))return!0;if(!t)return!1;u(e)}return e[r].w},f=function(e){return l&&m.NEED&&c(e)&&!o(e,r)&&u(e),e},m=e.exports={KEY:r,NEED:!1,fastKey:d,getWeak:p,onFreeze:f}},function(e,t,n){var r=n(21),i=n(55),o=n(27);e.exports=function(e){var t=r(e),n=i.f;if(n)for(var s,a=n(e),c=o.f,l=0;a.length>l;)c.call(e,s=a[l++])&&t.push(s);return t}},function(e,t,n){var r=n(26);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(15),i=n(100).f,o={}.toString,s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],a=function(e){try{return i(e)}catch(e){return s.slice()}};e.exports.f=function(e){return s&&"[object Window]"==o.call(e)?a(e):i(r(e))}},function(e,t,n){var r=n(27),i=n(25),o=n(15),s=n(48),a=n(14),c=n(73),l=Object.getOwnPropertyDescriptor;t.f=n(11)?l:function(e,t){if(e=o(e),t=s(t,!0),c)try{return l(e,t)}catch(e){}if(a(e,t))return i(!r.f.call(e,t),e[t])}},function(e,t,n){n(65)("asyncIterator")},function(e,t,n){n(65)("observable")},function(e,t,n){var r=function(){return this}()||Function("return this")(),i=r.regeneratorRuntime&&Object.getOwnPropertyNames(r).indexOf("regeneratorRuntime")>=0,o=i&&r.regeneratorRuntime;if(r.regeneratorRuntime=void 0,e.exports=n(251),i)r.regeneratorRuntime=o;else try{delete r.regeneratorRuntime}catch(e){r.regeneratorRuntime=void 0}},function(e,t){!function(t){"use strict";function n(e,t,n,r){var o=t&&t.prototype instanceof i?t:i,s=Object.create(o.prototype),a=new f(r||[]);return s._invoke=l(e,n,a),s}function r(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function i(){}function o(){}function s(){}function a(e){["next","throw","return"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function c(e){function t(n,i,o,s){var a=r(e[n],e,i);if("throw"!==a.type){var c=a.arg,l=c.value;return l&&"object"==typeof l&&b.call(l,"__await")?Promise.resolve(l.__await).then(function(e){t("next",e,o,s)},function(e){t("throw",e,o,s)}):Promise.resolve(l).then(function(e){c.value=e,o(c)},s)}s(a.arg)}function n(e,n){function r(){return new Promise(function(r,i){t(e,n,r,i)})}return i=i?i.then(r,r):r()}var i;this._invoke=n}function l(e,t,n){var i=S;return function(o,s){if(i===E)throw new Error("Generator is already running");if(i===I){if("throw"===o)throw s;return h()}for(n.method=o,n.arg=s;;){var a=n.delegate;if(a){var c=u(a,n);if(c){if(c===$)continue;return c}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(i===S)throw i=I,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i=E;var l=r(e,t,n);if("normal"===l.type){if(i=n.done?I:q,l.arg===$)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(i=I,n.method="throw",n.arg=l.arg)}}}function u(e,t){var n=e.iterator[t.method];if(n===g){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=g,u(e,t),"throw"===t.method))return $;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return $}var i=r(n,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,$;var o=i.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=g),t.delegate=null,$):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,$)}function d(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function p(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function f(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(d,this),this.reset(!0)}function m(e){if(e){var t=e[w];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,r=function t(){for(;++n<e.length;)if(b.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=g,t.done=!0,t};return r.next=r}}return{next:h}}function h(){return{value:g,done:!0}}var g,y=Object.prototype,b=y.hasOwnProperty,v="function"==typeof Symbol?Symbol:{},w=v.iterator||"@@iterator",_=v.asyncIterator||"@@asyncIterator",k=v.toStringTag||"@@toStringTag",x="object"==typeof e,T=t.regeneratorRuntime;if(T)return void(x&&(e.exports=T));T=t.regeneratorRuntime=x?e.exports:{},T.wrap=n;var S="suspendedStart",q="suspendedYield",E="executing",I="completed",$={},X={};X[w]=function(){return this};var A=Object.getPrototypeOf,P=A&&A(A(m([])));P&&P!==y&&b.call(P,w)&&(X=P);var j=s.prototype=i.prototype=Object.create(X);o.prototype=j.constructor=s,s.constructor=o,s[k]=o.displayName="GeneratorFunction",T.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===o||"GeneratorFunction"===(t.displayName||t.name))},T.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,s):(e.__proto__=s,k in e||(e[k]="GeneratorFunction")),e.prototype=Object.create(j),e},T.awrap=function(e){return{__await:e}},a(c.prototype),c.prototype[_]=function(){return this},T.AsyncIterator=c,T.async=function(e,t,r,i){var o=new c(n(e,t,r,i));return T.isGeneratorFunction(t)?o:o.next().then(function(e){return e.done?e.value:o.next()})},a(j),j[k]="Generator",j[w]=function(){return this},j.toString=function(){return"[object Generator]"},T.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},T.values=m,f.prototype={constructor:f,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=g,this.done=!1,this.delegate=null,this.method="next",this.arg=g,this.tryEntries.forEach(p),!e)for(var t in this)"t"===t.charAt(0)&&b.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=g)},stop:function(){this.done=!0;var e=this.tryEntries[0],t=e.completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){function t(t,r){return o.type="throw",o.arg=e,n.next=t,r&&(n.method="next",n.arg=g),!!r}if(this.done)throw e;for(var n=this,r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r],o=i.completion;if("root"===i.tryLoc)return t("end");if(i.tryLoc<=this.prev){var s=b.call(i,"catchLoc"),a=b.call(i,"finallyLoc");if(s&&a){if(this.prev<i.catchLoc)return t(i.catchLoc,!0);if(this.prev<i.finallyLoc)return t(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return t(i.catchLoc,!0)}else{if(!a)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return t(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&b.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=e,o.arg=t,i?(this.method="next",this.next=i.finallyLoc,$):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),$},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),p(n),$}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var i=r.arg;p(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:m(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=g),$}}}(function(){return this}()||Function("return this")())},function(e,t,n){e.exports={default:n(253),__esModule:!0}},function(e,t,n){n(101),n(41),n(63),n(254),n(261),n(262),e.exports=n(0).Promise},function(e,t,n){"use strict";var r,i,o,s,a=n(42),c=n(2),l=n(24),u=n(102),d=n(6),p=n(13),f=n(32),m=n(255),h=n(256),g=n(105),y=n(106).set,b=n(258)(),v=n(69),w=n(107),_=n(108),k=c.TypeError,x=c.process,T=c.Promise,S="process"==u(x),q=function(){},E=i=v.f,I=!!function(){try{var e=T.resolve(1),t=(e.constructor={})[n(3)("species")]=function(e){e(q,q)};return(S||"function"==typeof PromiseRejectionEvent)&&e.then(q)instanceof t}catch(e){}}(),$=function(e){var t;return!(!p(e)||"function"!=typeof(t=e.then))&&t},X=function(e,t){if(!e._n){e._n=!0;var n=e._c;b(function(){for(var r=e._v,i=1==e._s,o=0;n.length>o;)!function(t){var n,o,s=i?t.ok:t.fail,a=t.resolve,c=t.reject,l=t.domain;try{s?(i||(2==e._h&&j(e),e._h=1),!0===s?n=r:(l&&l.enter(),n=s(r),l&&l.exit()),n===t.promise?c(k("Promise-chain cycle")):(o=$(n))?o.call(n,a,c):a(n)):c(r)}catch(e){c(e)}}(n[o++]);e._c=[],e._n=!1,t&&!e._h&&A(e)})}},A=function(e){y.call(c,function(){var t,n,r,i=e._v,o=P(e);if(o&&(t=w(function(){S?x.emit("unhandledRejection",i,e):(n=c.onunhandledrejection)?n({promise:e,reason:i}):(r=c.console)&&r.error&&r.error("Unhandled promise rejection",i)}),e._h=S||P(e)?2:1),e._a=void 0,o&&t.e)throw t.v})},P=function(e){return 1!==e._h&&0===(e._a||e._c).length},j=function(e){y.call(c,function(){var t;S?x.emit("rejectionHandled",e):(t=c.onrejectionhandled)&&t({promise:e,reason:e._v})})},O=function(e){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=e,t._s=2,t._a||(t._a=t._c.slice()),X(t,!0))},C=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw k("Promise can't be resolved itself");(t=$(e))?b(function(){var r={_w:n,_d:!1};try{t.call(e,l(C,r,1),l(O,r,1))}catch(e){O.call(r,e)}}):(n._v=e,n._s=1,X(n,!1))}catch(e){O.call({_w:n,_d:!1},e)}}};I||(T=function(e){m(this,T,"Promise","_h"),f(e),r.call(this);try{e(l(C,this,1),l(O,this,1))}catch(e){O.call(this,e)}},r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},r.prototype=n(259)(T.prototype,{then:function(e,t){var n=E(g(this,T));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=S?x.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&X(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new r;this.promise=e,this.resolve=l(C,e,1),this.reject=l(O,e,1)},v.f=E=function(e){return e===T||e===s?new o(e):i(e)}),d(d.G+d.W+d.F*!I,{Promise:T}),n(43)(T,"Promise"),n(260)("Promise"),s=n(0).Promise,d(d.S+d.F*!I,"Promise",{reject:function(e){var t=E(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(a||!I),"Promise",{resolve:function(e){return _(a&&this===s?T:this,e)}}),d(d.S+d.F*!(I&&n(109)(function(e){T.all(e).catch(q)})),"Promise",{all:function(e){var t=this,n=E(t),r=n.resolve,i=n.reject,o=w(function(){var n=[],o=0,s=1;h(e,!1,function(e){var a=o++,c=!1;n.push(void 0),s++,t.resolve(e).then(function(e){c||(c=!0,n[a]=e,--s||r(n))},i)}),--s||r(n)});return o.e&&i(o.v),n.promise},race:function(e){var t=this,n=E(t),r=n.reject,i=w(function(){h(e,!1,function(e){t.resolve(e).then(n.resolve,r)})});return i.e&&r(i.v),n.promise}})},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var r=n(24),i=n(103),o=n(104),s=n(8),a=n(50),c=n(68),l={},u={},t=e.exports=function(e,t,n,d,p){var f,m,h,g,y=p?function(){return e}:c(e),b=r(n,d,t?2:1),v=0;if("function"!=typeof y)throw TypeError(e+" is not iterable!");if(o(y)){for(f=a(e.length);f>v;v++)if((g=t?b(s(m=e[v])[0],m[1]):b(e[v]))===l||g===u)return g}else for(h=y.call(e);!(m=h.next()).done;)if((g=i(h,b,m.value,t))===l||g===u)return g};t.BREAK=l,t.RETURN=u},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(2),i=n(106).set,o=r.MutationObserver||r.WebKitMutationObserver,s=r.process,a=r.Promise,c="process"==n(26)(s);e.exports=function(){var e,t,n,l=function(){var r,i;for(c&&(r=s.domain)&&r.exit();e;){i=e.fn,e=e.next;try{i()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(c)n=function(){s.nextTick(l)};else if(!o||r.navigator&&r.navigator.standalone)if(a&&a.resolve){var u=a.resolve();n=function(){u.then(l)}}else n=function(){i.call(r,l)};else{var d=!0,p=document.createTextNode("");new o(l).observe(p,{characterData:!0}),n=function(){p.data=d=!d}}return function(r){var i={fn:r,next:void 0};t&&(t.next=i),e||(e=i,n()),t=i}}},function(e,t,n){var r=n(12);e.exports=function(e,t,n){for(var i in t)n&&e[i]?e[i]=t[i]:r(e,i,t[i]);return e}},function(e,t,n){"use strict";var r=n(2),i=n(0),o=n(7),s=n(11),a=n(3)("species");e.exports=function(e){var t="function"==typeof i[e]?i[e]:r[e];s&&t&&!t[a]&&o.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,n){"use strict";var r=n(6),i=n(0),o=n(2),s=n(105),a=n(108);r(r.P+r.R,"Promise",{finally:function(e){var t=s(this,i.Promise||o.Promise),n="function"==typeof e;return this.then(n?function(n){return a(t,e()).then(function(){return n})}:e,n?function(n){return a(t,e()).then(function(){throw n})}:e)}})},function(e,t,n){"use strict";var r=n(6),i=n(69),o=n(107);r(r.S,"Promise",{try:function(e){var t=i.f(this),n=o(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},function(e,t,n){"use strict";function r(e,t){return new i(c.connect(e,t))}function i(e){this._client=e}function o(e){i.prototype[e]=function(){var t=this._client;return t[e].apply(t,arguments)}}function s(e){i.prototype[e]=function(){var t=this._client,n=[],r=arguments.length,i=0;for(i;i<r;i++)n.push(arguments[i]);return new Promise(function(r,i){n.push(a(r,i)),t[e].apply(t,n)})}}function a(e,t){return function(n,r){n?t(n):e(r)}}var c=n(264),l=(n(300),c.MqttClient.prototype,["publish","subscribe","unsubscribe","unsubscribe","end"]),u=["emit","addListener","on","once","removeListener","removeAllListeners","setMaxListeners","getMaxListeners","listeners","listenerCount"];e.exports={connect:r,AsyncClient:i},i.prototype={set handleMessage(e){this._client.handleMessage=e},get handleMessage(){return this._client.handleMessage}},l.forEach(s),u.forEach(o)},function(e,t,n){"use strict";(function(t){function r(e){var t;e.auth&&(t=e.auth.match(/^(.+):(.+)$/),t?(e.username=t[1],e.password=t[2]):e.username=e.auth)}function i(e,t){function n(e){return t.servers&&(e._reconnectCount&&e._reconnectCount!==t.servers.length||(e._reconnectCount=0),t.host=t.servers[e._reconnectCount].host,t.port=t.servers[e._reconnectCount].port,t.hostname=t.host,e._reconnectCount++),l[t.protocol](e,t)}if("object"!=typeof e||t||(t=e,e=null),t=t||{},e){var i=a.parse(e,!0);if(null!=i.port&&(i.port=Number(i.port)),t=c(i,t),null===t.protocol)throw new Error("Missing protocol");t.protocol=t.protocol.replace(/:$/,"")}if(r(t),t.query&&"string"==typeof t.query.clientId&&(t.clientId=t.query.clientId),t.cert&&t.key){if(!t.protocol)throw new Error("Missing secure protocol key");if(-1===["mqtts","wss","wxs"].indexOf(t.protocol))switch(t.protocol){case"mqtt":t.protocol="mqtts";break;case"ws":t.protocol="wss";break;case"wx":t.protocol="wxs";break;default:throw new Error('Unknown protocol for secure connection: "'+t.protocol+'"!')}}if(!l[t.protocol]){var s=-1!==["mqtts","wss"].indexOf(t.protocol);t.protocol=["mqtt","mqtts","ws","wss","wx","wxs"].filter(function(e,t){return(!s||t%2!=0)&&"function"==typeof l[e]})[0]}if(!1===t.clean&&!t.clientId)throw new Error("Missing clientId for unclean clients");return new o(n,t)}var o=n(265),s=n(110),a=n(71),c=n(70),l={};"browser"!==t.title?(l.mqtt=n(121),l.tcp=n(121),l.ssl=n(72),l.tls=n(72),l.mqtts=n(72)):(l.wx=n(122),l.wxs=n(122)),l.ws=n(124),l.wss=n(124),e.exports=i,e.exports.connect=i,e.exports.MqttClient=o,e.exports.Store=s}).call(t,n(1))},function(e,t,n){"use strict";(function(t,r){function i(){return"mqttjs_"+Math.random().toString(16).substr(2,8)}function o(e,t,n){e.emit("packetsend",t),!p.writeToStream(t,e.stream)&&n?e.stream.once("drain",n):n&&n()}function s(e,t,n){e.outgoingStore.put(t,function(r){if(r)return n&&n(r);o(e,t,n)})}function a(){}function c(e,t){var n,r=this;if(!(this instanceof c))return new c(e,t);this.options=t||{};for(n in v)void 0===this.options[n]?this.options[n]=v[n]:this.options[n]=t[n];this.options.clientId="string"==typeof this.options.clientId?this.options.clientId:i(),this.streamBuilder=e,this.outgoingStore=this.options.outgoingStore||new u,this.incomingStore=this.options.incomingStore||new u,this.queueQoSZero=void 0===this.options.queueQoSZero||this.options.queueQoSZero,this._resubscribeTopics={},this.messageIdToTopic={},this.pingTimer=null,this.connected=!1,this.disconnecting=!1,this.queue=[],this.connackTimer=null,this.reconnectTimer=null,this.nextId=Math.floor(65535*Math.random()),this.outgoing={},this.on("connect",function(){if(!this.disconnected){this.connected=!0;var e=null;e=this.outgoingStore.createStream(),e.once("readable",function(){function t(){var n,i=e.read(1);i&&(!r.disconnecting&&!r.reconnectTimer&&r.options.reconnectPeriod>0?(e.read(0),n=r.outgoing[i.messageId],r.outgoing[i.messageId]=function(e,r){n&&n(e,r),t()},r._sendPacket(i)):e.destroy&&e.destroy())}t()}).on("error",this.emit.bind(this,"error"))}}),this.on("close",function(){this.connected=!1,clearTimeout(this.connackTimer)}),this.on("connect",this._setupPingTimer),this.on("connect",function(){function e(){var n=t.shift(),i=null;n&&(i=n.packet,r._sendPacket(i,function(t){n.cb&&n.cb(t),e()}))}var t=this.queue;e()});var o=!0;this.on("connect",function(){!o&&this.options.clean&&Object.keys(this._resubscribeTopics).length>0&&(this.options.resubscribe?(this._resubscribeTopics.resubscribe=!0,this.subscribe(this._resubscribeTopics)):this._resubscribeTopics={}),o=!1}),this.on("close",function(){null!==r.pingTimer&&(r.pingTimer.clear(),r.pingTimer=null)}),this.on("close",this._setupReconnect),l.EventEmitter.call(this),this._setupStream()}var l=n(30),u=n(110),d=n(118),p=n(277),f=n(44).Writable,m=n(10),h=n(288),g=n(289),y=n(70),b=t.setImmediate||function(e){r.nextTick(e)},v={keepalive:60,reschedulePings:!0,protocolId:"MQTT",protocolVersion:4,reconnectPeriod:1e3,connectTimeout:3e4,clean:!0,resubscribe:!0};m(c,l.EventEmitter),c.prototype._setupStream=function(){function e(){r.nextTick(t)}function t(){var t=u.shift(),n=l;t?i._handlePacket(t,e):(l=null,n())}var n,i=this,s=new f,c=p.parser(this.options),l=null,u=[];this._clearReconnect(),this.stream=this.streamBuilder(this),c.on("packet",function(e){u.push(e)}),s._write=function(e,n,r){l=r,c.parse(e),t()},this.stream.pipe(s),this.stream.on("error",a),d(this.stream,this.emit.bind(this,"close")),n=Object.create(this.options),n.cmd="connect",o(this,n),c.on("error",this.emit.bind(this,"error")),this.stream.setMaxListeners(1e3),clearTimeout(this.connackTimer),this.connackTimer=setTimeout(function(){i._cleanUp(!0)},this.options.connectTimeout)},c.prototype._handlePacket=function(e,t){switch(this.emit("packetreceive",e),e.cmd){case"publish":this._handlePublish(e,t);break;case"puback":case"pubrec":case"pubcomp":case"suback":case"unsuback":this._handleAck(e),t();break;case"pubrel":this._handlePubrel(e,t);break;case"connack":this._handleConnack(e),t();break;case"pingresp":this._handlePingresp(e),t()}},c.prototype._checkDisconnecting=function(e){return this.disconnecting&&(e?e(new Error("client disconnecting")):this.emit("error",new Error("client disconnecting"))),this.disconnecting},c.prototype.publish=function(e,t,n,r){var i;if("function"==typeof n&&(r=n,n=null),n=y({qos:0,retain:!1,dup:!1},n),this._checkDisconnecting(r))return this;switch(i={cmd:"publish",topic:e,payload:t,qos:n.qos,retain:n.retain,messageId:this._nextId(),dup:n.dup},n.qos){case 1:case 2:this.outgoing[i.messageId]=r||a,this._sendPacket(i);break;default:this._sendPacket(i,r)}return this},c.prototype.subscribe=function(){var e,t,n=Array.prototype.slice.call(arguments),r=[],i=n.shift(),o=i.resubscribe,s=n.pop()||a,c=n.pop(),l=this;if(delete i.resubscribe,"string"==typeof i&&(i=[i]),"function"!=typeof s&&(c=s,s=a),null!==(t=g.validateTopics(i)))return b(s,new Error("Invalid topic "+t)),this;if(this._checkDisconnecting(s))return this;if(c=y({qos:0},c),Array.isArray(i)?i.forEach(function(e){(l._resubscribeTopics[e]<c.qos||!l._resubscribeTopics.hasOwnProperty(e)||o)&&r.push({topic:e,qos:c.qos})}):Object.keys(i).forEach(function(e){(l._resubscribeTopics[e]<i[e]||!l._resubscribeTopics.hasOwnProperty(e)||o)&&r.push({topic:e,qos:i[e]})}),e={cmd:"subscribe",subscriptions:r,qos:1,retain:!1,dup:!1,messageId:this._nextId()},!r.length)return void s(null,[]);if(this.options.resubscribe){var u=[];r.forEach(function(e){l.options.reconnectPeriod>0&&(l._resubscribeTopics[e.topic]=e.qos,u.push(e.topic))}),l.messageIdToTopic[e.messageId]=u}return this.outgoing[e.messageId]=function(e,t){if(!e)for(var n=t.granted,i=0;i<n.length;i+=1)r[i].qos=n[i];s(e,r)},this._sendPacket(e),this},c.prototype.unsubscribe=function(e,t){var n={cmd:"unsubscribe",qos:1,messageId:this._nextId()},r=this;return t=t||a,this._checkDisconnecting(t)?this:("string"==typeof e?n.unsubscriptions=[e]:"object"==typeof e&&e.length&&(n.unsubscriptions=e),this.options.resubscribe&&n.unsubscriptions.forEach(function(e){delete r._resubscribeTopics[e]}),this.outgoing[n.messageId]=t,this._sendPacket(n),this)},c.prototype.end=function(e,t){function n(){i.disconnected=!0,i.incomingStore.close(function(){i.outgoingStore.close(t)}),i._deferredReconnect&&i._deferredReconnect()}function r(){i._cleanUp(e,b.bind(null,n))}var i=this;return"function"==typeof e&&(t=e,e=!1),this.disconnecting?this:(this._clearReconnect(),this.disconnecting=!0,!e&&Object.keys(this.outgoing).length>0?this.once("outgoingEmpty",setTimeout.bind(null,r,10)):r(),this)},c.prototype.removeOutgoingMessage=function(e){var t=this.outgoing[e];return delete this.outgoing[e],this.outgoingStore.del({messageId:e},function(){t(new Error("Message removed"))}),this},c.prototype.reconnect=function(e){var t=this,n=function(){e?(t.options.incomingStore=e.incomingStore,t.options.outgoingStore=e.outgoingStore):(t.options.incomingStore=null,t.options.outgoingStore=null),t.incomingStore=t.options.incomingStore||new u,t.outgoingStore=t.options.outgoingStore||new u,t.disconnecting=!1,t.disconnected=!1,t._deferredReconnect=null,t._reconnect()};return this.disconnecting&&!this.disconnected?this._deferredReconnect=n:n(),this},c.prototype._reconnect=function(){this.emit("reconnect"),this._setupStream()},c.prototype._setupReconnect=function(){var e=this;!e.disconnecting&&!e.reconnectTimer&&e.options.reconnectPeriod>0&&(this.reconnecting||(this.emit("offline"),this.reconnecting=!0),e.reconnectTimer=setInterval(function(){e._reconnect()},e.options.reconnectPeriod))},c.prototype._clearReconnect=function(){this.reconnectTimer&&(clearInterval(this.reconnectTimer),this.reconnectTimer=null)},c.prototype._cleanUp=function(e,t){t&&this.stream.on("close",t),e?this.stream.destroy():this._sendPacket({cmd:"disconnect"},b.bind(null,this.stream.end.bind(this.stream))),this.disconnecting||(this._clearReconnect(),this._setupReconnect()),null!==this.pingTimer&&(this.pingTimer.clear(),this.pingTimer=null),this.connected||(this.stream.removeListener("close",t),t())},c.prototype._sendPacket=function(e,t){if(!this.connected)return void(0===(e.qos||0)&&this.queueQoSZero||"publish"!==e.cmd?this.queue.push({packet:e,cb:t}):e.qos>0?(t=this.outgoing[e.messageId],this.outgoingStore.put(e,function(e){if(e)return t&&t(e)})):t&&t(new Error("No connection to broker")));if(this._shiftPingInterval(),"publish"!==e.cmd)return void o(this,e,t);switch(e.qos){case 2:case 1:s(this,e,t);break;case 0:default:o(this,e,t)}},c.prototype._setupPingTimer=function(){var e=this;!this.pingTimer&&this.options.keepalive&&(this.pingResp=!0,this.pingTimer=h(function(){e._checkPing()},1e3*this.options.keepalive))},c.prototype._shiftPingInterval=function(){this.pingTimer&&this.options.keepalive&&this.options.reschedulePings&&this.pingTimer.reschedule(1e3*this.options.keepalive)},c.prototype._checkPing=function(){this.pingResp?(this.pingResp=!1,this._sendPacket({cmd:"pingreq"})):this._cleanUp(!0)},c.prototype._handlePingresp=function(){this.pingResp=!0},c.prototype._handleConnack=function(e){var t=e.returnCode,n=["","Unacceptable protocol version","Identifier rejected","Server unavailable","Bad username or password","Not authorized"];if(clearTimeout(this.connackTimer),0===t)this.reconnecting=!1,this.emit("connect",e);else if(t>0){var r=new Error("Connection refused: "+n[t]);r.code=t,this.emit("error",r)}},c.prototype._handlePublish=function(e,t){var n=e.topic.toString(),r=e.payload,i=e.qos,o=e.messageId,s=this;switch(i){case 2:this.incomingStore.put(e,function(){s._sendPacket({cmd:"pubrec",messageId:o},t)});break;case 1:this.emit("message",n,r,e),this.handleMessage(e,function(e){if(e)return t&&t(e);s._sendPacket({cmd:"puback",messageId:o},t)});break;case 0:this.emit("message",n,r,e),this.handleMessage(e,t)}},c.prototype.handleMessage=function(e,t){t()},c.prototype._handleAck=function(e){var t=e.messageId,n=e.cmd,r=null,i=this.outgoing[t],o=this;if(i){switch(n){case"pubcomp":case"puback":delete this.outgoing[t],this.outgoingStore.del(e,i);break;case"pubrec":r={cmd:"pubrel",qos:2,messageId:t},this._sendPacket(r);break;case"suback":if(delete this.outgoing[t],1===e.granted.length&&0!=(128&e.granted[0])){var s=this.messageIdToTopic[t];s&&s.forEach(function(e){delete o._resubscribeTopics[e]})}i(null,e);break;case"unsuback":delete this.outgoing[t],i(null);break;default:o.emit("error",new Error("unrecognized packet type"))}this.disconnecting&&0===Object.keys(this.outgoing).length&&this.emit("outgoingEmpty")}},c.prototype._handlePubrel=function(e,t){var n=e.messageId,r=this,i={cmd:"pubcomp",messageId:n};r.incomingStore.get(e,function(n,o){n||"pubrel"===o.cmd?r._sendPacket(i,t):(r.emit("message",o.topic,o.payload,o),r.incomingStore.put(e),r.handleMessage(o,function(e){if(e)return t&&t(e);r._sendPacket(i,t)}))})},c.prototype._nextId=function(){var e=this.nextId++;return 65535===e&&(this.nextId=1),e},c.prototype.getLastMessageId=function(){return 1===this.nextId?65535:this.nextId-1},e.exports=c}).call(t,n(5),n(1))},function(e,t,n){"use strict";function r(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");return"="===e[t-2]?2:"="===e[t-1]?1:0}function i(e){return 3*e.length/4-r(e)}function o(e){var t,n,i,o,s,a=e.length;o=r(e),s=new d(3*a/4-o),n=o>0?a-4:a;var c=0;for(t=0;t<n;t+=4)i=u[e.charCodeAt(t)]<<18|u[e.charCodeAt(t+1)]<<12|u[e.charCodeAt(t+2)]<<6|u[e.charCodeAt(t+3)],s[c++]=i>>16&255,s[c++]=i>>8&255,s[c++]=255&i;return 2===o?(i=u[e.charCodeAt(t)]<<2|u[e.charCodeAt(t+1)]>>4,s[c++]=255&i):1===o&&(i=u[e.charCodeAt(t)]<<10|u[e.charCodeAt(t+1)]<<4|u[e.charCodeAt(t+2)]>>2,s[c++]=i>>8&255,s[c++]=255&i),s}function s(e){return l[e>>18&63]+l[e>>12&63]+l[e>>6&63]+l[63&e]}function a(e,t,n){for(var r,i=[],o=t;o<n;o+=3)r=(e[o]<<16)+(e[o+1]<<8)+e[o+2],i.push(s(r));return i.join("")}function c(e){for(var t,n=e.length,r=n%3,i="",o=[],s=0,c=n-r;s<c;s+=16383)o.push(a(e,s,s+16383>c?c:s+16383));return 1===r?(t=e[n-1],i+=l[t>>2],i+=l[t<<4&63],i+="=="):2===r&&(t=(e[n-2]<<8)+e[n-1],i+=l[t>>10],i+=l[t>>4&63],i+=l[t<<2&63],i+="="),o.push(i),o.join("")}t.byteLength=i,t.toByteArray=o,t.fromByteArray=c;for(var l=[],u=[],d="undefined"!=typeof Uint8Array?Uint8Array:Array,p="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",f=0,m=p.length;f<m;++f)l[f]=p[f],u[p.charCodeAt(f)]=f;u["-".charCodeAt(0)]=62,u["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,r,i){var o,s,a=8*i-r-1,c=(1<<a)-1,l=c>>1,u=-7,d=n?i-1:0,p=n?-1:1,f=e[t+d];for(d+=p,o=f&(1<<-u)-1,f>>=-u,u+=a;u>0;o=256*o+e[t+d],d+=p,u-=8);for(s=o&(1<<-u)-1,o>>=-u,u+=r;u>0;s=256*s+e[t+d],d+=p,u-=8);if(0===o)o=1-l;else{if(o===c)return s?NaN:1/0*(f?-1:1);s+=Math.pow(2,r),o-=l}return(f?-1:1)*s*Math.pow(2,o-r)},t.write=function(e,t,n,r,i,o){var s,a,c,l=8*o-i-1,u=(1<<l)-1,d=u>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,f=r?0:o-1,m=r?1:-1,h=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,s=u):(s=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-s))<1&&(s--,c*=2),t+=s+d>=1?p/c:p*Math.pow(2,1-d),t*c>=2&&(s++,c/=2),s+d>=u?(a=0,s=u):s+d>=1?(a=(t*c-1)*Math.pow(2,i),s+=d):(a=t*Math.pow(2,d-1)*Math.pow(2,i),s=0));i>=8;e[n+f]=255&a,f+=m,a/=256,i-=8);for(s=s<<i|a,l+=i;l>0;e[n+f]=255&s,f+=m,s/=256,l-=8);e[n+f-m]|=128*h}},function(e,t){},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t,n){e.copy(t,n)}var o=n(9).Buffer,s=n(270);e.exports=function(){function e(){r(this,e),this.head=null,this.tail=null,this.length=0}return e.prototype.push=function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length},e.prototype.unshift=function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length},e.prototype.shift=function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}},e.prototype.clear=function(){this.head=this.tail=null,this.length=0},e.prototype.join=function(e){if(0===this.length)return"";for(var t=this.head,n=""+t.data;t=t.next;)n+=e+t.data;return n},e.prototype.concat=function(e){if(0===this.length)return o.alloc(0);if(1===this.length)return this.head.data;for(var t=o.allocUnsafe(e>>>0),n=this.head,r=0;n;)i(n.data,t,r),r+=n.data.length,n=n.next;return t},e}(),s&&s.inspect&&s.inspect.custom&&(e.exports.prototype[s.inspect.custom]=function(){var e=s.inspect({length:this.length});return this.constructor.name+" "+e})},function(e,t){},function(e,t,n){(function(e){function r(e,t){this._id=e,this._clearFn=t}var i=Function.prototype.apply;t.setTimeout=function(){return new r(i.call(setTimeout,window,arguments),clearTimeout)},t.setInterval=function(){return new r(i.call(setInterval,window,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},r.prototype.unref=r.prototype.ref=function(){},r.prototype.close=function(){this._clearFn.call(window,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},t))},n(272),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(t,n(5))},function(e,t,n){(function(e,t){!function(e,n){"use strict";function r(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var r={callback:e,args:t};return l[c]=r,a(c),c++}function i(e){delete l[e]}function o(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(n,r)}}function s(e){if(u)setTimeout(s,0,e);else{var t=l[e];if(t){u=!0;try{o(t)}finally{i(e),u=!1}}}}if(!e.setImmediate){var a,c=1,l={},u=!1,d=e.document,p=Object.getPrototypeOf&&Object.getPrototypeOf(e);p=p&&p.setTimeout?p:e,"[object process]"==={}.toString.call(e.process)?function(){a=function(e){t.nextTick(function(){s(e)})}}():function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?function(){var t="setImmediate$"+Math.random()+"$",n=function(n){n.source===e&&"string"==typeof n.data&&0===n.data.indexOf(t)&&s(+n.data.slice(t.length))};e.addEventListener?e.addEventListener("message",n,!1):e.attachEvent("onmessage",n),a=function(n){e.postMessage(t+n,"*")}}():e.MessageChannel?function(){var e=new MessageChannel;e.port1.onmessage=function(e){s(e.data)},a=function(t){e.port2.postMessage(t)}}():d&&"onreadystatechange"in d.createElement("script")?function(){var e=d.documentElement;a=function(t){var n=d.createElement("script");n.onreadystatechange=function(){s(t),n.onreadystatechange=null,e.removeChild(n),n=null},e.appendChild(n)}}():function(){a=function(e){setTimeout(s,0,e)}}(),p.setImmediate=r,p.clearImmediate=i}}("undefined"==typeof self?void 0===e?this:e:self)}).call(t,n(5),n(1))},function(e,t,n){(function(t){function n(e,t){function n(){if(!i){if(r("throwDeprecation"))throw new Error(t);r("traceDeprecation")?console.trace(t):console.warn(t),i=!0}return e.apply(this,arguments)}if(r("noDeprecation"))return e;var i=!1;return n}function r(e){try{if(!t.localStorage)return!1}catch(e){return!1}var n=t.localStorage[e];return null!=n&&"true"===String(n).toLowerCase()}e.exports=n}).call(t,n(5))},function(e,t,n){"use strict";function r(e){if(!(this instanceof r))return new r(e);i.call(this,e)}e.exports=r;var i=n(117),o=n(31);o.inherits=n(10),o.inherits(r,i),r.prototype._transform=function(e,t,n){n(null,e)}},function(e,t,n){function r(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function i(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},n=e.name||"Function wrapped with `once`";return t.onceError=n+" shouldn't be called more than once",t.called=!1,t}var o=n(276);e.exports=o(r),e.exports.strict=o(i),r.proto=r(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return r(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return i(this)},configurable:!0})})},function(e,t){function n(e,t){function r(){for(var t=new Array(arguments.length),n=0;n<t.length;n++)t[n]=arguments[n];var r=e.apply(this,t),i=t[t.length-1];return"function"==typeof r&&r!==i&&Object.keys(i).forEach(function(e){r[e]=i[e]}),r}if(e&&t)return n(e)(t);if("function"!=typeof e)throw new TypeError("need wrapper function");return Object.keys(e).forEach(function(t){r[t]=e[t]}),r}e.exports=n},function(e,t,n){"use strict";t.parser=n(278),t.generate=n(285),t.writeToStream=n(120)},function(e,t,n){"use strict";function r(){if(!(this instanceof r))return new r;this._states=["_parseHeader","_parseLength","_parsePayload","_newPacket"],this._resetState()}var i=n(279),o=n(10),s=n(30).EventEmitter,a=n(284),c=n(119);o(r,s),r.prototype._resetState=function(){this.packet=new a,this.error=null,this._list=i(),this._stateCounter=0},r.prototype.parse=function(e){for(this.error&&this._resetState(),this._list.append(e);(-1!==this.packet.length||this._list.length>0)&&this[this._states[this._stateCounter]]()&&!this.error;)++this._stateCounter>=this._states.length&&(this._stateCounter=0);return this._list.length},r.prototype._parseHeader=function(){var e=this._list.readUInt8(0);return this.packet.cmd=c.types[e>>c.CMD_SHIFT],this.packet.retain=0!=(e&c.RETAIN_MASK),this.packet.qos=e>>c.QOS_SHIFT&c.QOS_MASK,this.packet.dup=0!=(e&c.DUP_MASK),this._list.consume(1),!0},r.prototype._parseLength=function(){for(var e,t=0,n=1,r=0,i=!0;t<5&&(e=this._list.readUInt8(t++),r+=n*(e&c.LENGTH_MASK),n*=128,0!=(e&c.LENGTH_FIN_MASK));)if(this._list.length<=t){i=!1;break}return i&&(this.packet.length=r,this._list.consume(t)),i},r.prototype._parsePayload=function(){var e=!1;if(0===this.packet.length||this._list.length>=this.packet.length){switch(this._pos=0,this.packet.cmd){case"connect":this._parseConnect();break;case"connack":this._parseConnack();break;case"publish":this._parsePublish();break;case"puback":case"pubrec":case"pubrel":case"pubcomp":this._parseMessageId();break;case"subscribe":this._parseSubscribe();break;case"suback":this._parseSuback();break;case"unsubscribe":this._parseUnsubscribe();break;case"unsuback":this._parseUnsuback();break;case"pingreq":case"pingresp":case"disconnect":break;default:this._emitError(new Error("Not supported"))}e=!0}return e},r.prototype._parseConnect=function(){var e,t,n,r,i,o,s={},a=this.packet;if(null===(e=this._parseString()))return this._emitError(new Error("Cannot parse protocolId"));if("MQTT"!==e&&"MQIsdp"!==e)return this._emitError(new Error("Invalid protocolId"));if(a.protocolId=e,this._pos>=this._list.length)return this._emitError(new Error("Packet too short"));if(a.protocolVersion=this._list.readUInt8(this._pos),3!==a.protocolVersion&&4!==a.protocolVersion)return this._emitError(new Error("Invalid protocol version"));if(++this._pos>=this._list.length)return this._emitError(new Error("Packet too short"));if(s.username=this._list.readUInt8(this._pos)&c.USERNAME_MASK,s.password=this._list.readUInt8(this._pos)&c.PASSWORD_MASK,s.will=this._list.readUInt8(this._pos)&c.WILL_FLAG_MASK,s.will&&(a.will={},a.will.retain=0!=(this._list.readUInt8(this._pos)&c.WILL_RETAIN_MASK),a.will.qos=(this._list.readUInt8(this._pos)&c.WILL_QOS_MASK)>>c.WILL_QOS_SHIFT),a.clean=0!=(this._list.readUInt8(this._pos)&c.CLEAN_SESSION_MASK),this._pos++,a.keepalive=this._parseNum(),-1===a.keepalive)return this._emitError(new Error("Packet too short"));if(null===(t=this._parseString()))return this._emitError(new Error("Packet too short"));if(a.clientId=t,s.will){if(null===(n=this._parseString()))return this._emitError(new Error("Cannot parse will topic"));if(a.will.topic=n,null===(r=this._parseBuffer()))return this._emitError(new Error("Cannot parse will payload"));a.will.payload=r}if(s.username){if(null===(o=this._parseString()))return this._emitError(new Error("Cannot parse username"));a.username=o}if(s.password){if(null===(i=this._parseBuffer()))return this._emitError(new Error("Cannot parse password"));a.password=i}return a},r.prototype._parseConnack=function(){var e=this.packet;return this._list.length<2?null:(e.sessionPresent=!!(this._list.readUInt8(this._pos++)&c.SESSIONPRESENT_MASK),e.returnCode=this._list.readUInt8(this._pos),-1===e.returnCode?this._emitError(new Error("Cannot parse return code")):void 0)},r.prototype._parsePublish=function(){var e=this.packet;if(e.topic=this._parseString(),null===e.topic)return this._emitError(new Error("Cannot parse topic"));e.qos>0&&!this._parseMessageId()||(e.payload=this._list.slice(this._pos,e.length))},r.prototype._parseSubscribe=function(){var e,t,n=this.packet;if(1!==n.qos)return this._emitError(new Error("Wrong subscribe header"));if(n.subscriptions=[],this._parseMessageId())for(;this._pos<n.length;){if(null===(e=this._parseString()))return this._emitError(new Error("Cannot parse topic"));t=this._list.readUInt8(this._pos++),n.subscriptions.push({topic:e,qos:t})}},r.prototype._parseSuback=function(){if(this.packet.granted=[],this._parseMessageId())for(;this._pos<this.packet.length;)this.packet.granted.push(this._list.readUInt8(this._pos++))},r.prototype._parseUnsubscribe=function(){var e=this.packet;if(e.unsubscriptions=[],this._parseMessageId())for(;this._pos<e.length;){var t;if(null===(t=this._parseString()))return this._emitError(new Error("Cannot parse topic"));e.unsubscriptions.push(t)}},r.prototype._parseUnsuback=function(){if(!this._parseMessageId())return this._emitError(new Error("Cannot parse messageId"))},r.prototype._parseMessageId=function(){var e=this.packet;return e.messageId=this._parseNum(),null!==e.messageId||(this._emitError(new Error("Cannot parse messageId")),!1)},r.prototype._parseString=function(e){var t,n=this._parseNum(),r=n+this._pos;return-1===n||r>this._list.length||r>this.packet.length?null:(t=this._list.toString("utf8",this._pos,r),this._pos+=n,t)},r.prototype._parseBuffer=function(){var e,t=this._parseNum(),n=t+this._pos;return-1===t||n>this._list.length||n>this.packet.length?null:(e=this._list.slice(this._pos,n),this._pos+=t,e)},r.prototype._parseNum=function(){if(this._list.length-this._pos<2)return-1;var e=this._list.readUInt16BE(this._pos);return this._pos+=2,e},r.prototype._newPacket=function(){return this.packet&&(this._list.consume(this.packet.length),this.emit("packet",this.packet)),this.packet=new a,!0},r.prototype._emitError=function(e){this.error=e,this.emit("error",e)},e.exports=r},function(e,t,n){(function(t){function r(e){if(!(this instanceof r))return new r(e);if(this._bufs=[],this.length=0,"function"==typeof e){this._callback=e;var t=function(e){this._callback&&(this._callback(e),this._callback=null)}.bind(this);this.on("pipe",function(e){e.on("error",t)}),this.on("unpipe",function(e){e.removeListener("error",t)})}else this.append(e);i.call(this)}var i=n(280);n(281).inherits(r,i),r.prototype._offset=function(e){var t,n=0,r=0;if(0===e)return[0,0];for(;r<this._bufs.length;r++){if(t=n+this._bufs[r].length,e<t||r==this._bufs.length-1)return[r,e-n];n=t}},r.prototype.append=function(e){var n=0;if(t.isBuffer(e))this._appendBuffer(e);else if(Array.isArray(e))for(;n<e.length;n++)this.append(e[n]);else if(e instanceof r)for(;n<e._bufs.length;n++)this.append(e._bufs[n]);else null!=e&&("number"==typeof e&&(e=e.toString()),this._appendBuffer(new t(e)));return this},r.prototype._appendBuffer=function(e){this._bufs.push(e),this.length+=e.length},r.prototype._write=function(e,t,n){this._appendBuffer(e),"function"==typeof n&&n()},r.prototype._read=function(e){if(!this.length)return this.push(null);e=Math.min(e,this.length),this.push(this.slice(0,e)),this.consume(e)},r.prototype.end=function(e){i.prototype.end.call(this,e),this._callback&&(this._callback(null,this.slice()),this._callback=null)},r.prototype.get=function(e){return this.slice(e,e+1)[0]},r.prototype.slice=function(e,t){return"number"==typeof e&&e<0&&(e+=this.length),"number"==typeof t&&t<0&&(t+=this.length),this.copy(null,0,e,t)},r.prototype.copy=function(e,n,r,i){if(("number"!=typeof r||r<0)&&(r=0),("number"!=typeof i||i>this.length)&&(i=this.length),r>=this.length)return e||new t(0);if(i<=0)return e||new t(0);var o,s,a=!!e,c=this._offset(r),l=i-r,u=l,d=a&&n||0,p=c[1];if(0===r&&i==this.length){if(!a)return 1===this._bufs.length?this._bufs[0]:t.concat(this._bufs,this.length);for(s=0;s<this._bufs.length;s++)this._bufs[s].copy(e,d),d+=this._bufs[s].length;return e}if(u<=this._bufs[c[0]].length-p)return a?this._bufs[c[0]].copy(e,n,p,p+u):this._bufs[c[0]].slice(p,p+u);for(a||(e=new t(l)),s=c[0];s<this._bufs.length;s++){if(o=this._bufs[s].length-p,!(u>o)){this._bufs[s].copy(e,d,p,p+u);break}this._bufs[s].copy(e,d,p),d+=o,u-=o,p&&(p=0)}return e},r.prototype.shallowSlice=function(e,t){e=e||0,t=t||this.length,e<0&&(e+=this.length),t<0&&(t+=this.length);var n=this._offset(e),i=this._offset(t),o=this._bufs.slice(n[0],i[0]+1);return 0==i[1]?o.pop():o[o.length-1]=o[o.length-1].slice(0,i[1]),0!=n[1]&&(o[0]=o[0].slice(n[1])),new r(o)},r.prototype.toString=function(e,t,n){return this.slice(t,n).toString(e)},r.prototype.consume=function(e){for(;this._bufs.length;){if(!(e>=this._bufs[0].length)){this._bufs[0]=this._bufs[0].slice(e),this.length-=e;break}e-=this._bufs[0].length,this.length-=this._bufs[0].length,this._bufs.shift()}return this},r.prototype.duplicate=function(){for(var e=0,t=new r;e<this._bufs.length;e++)t.append(this._bufs[e]);return t},r.prototype.destroy=function(){this._bufs.length=0,this.length=0,this.push(null)},function(){var e={readDoubleBE:8,readDoubleLE:8,readFloatBE:4,readFloatLE:4,readInt32BE:4,readInt32LE:4,readUInt32BE:4,readUInt32LE:4,readInt16BE:2,readInt16LE:2,readUInt16BE:2,readUInt16LE:2,readInt8:1,readUInt8:1};for(var t in e)!function(t){r.prototype[t]=function(n){return this.slice(n,n+e[t])[t](0)}}(t)}(),e.exports=r}).call(t,n(46).Buffer)},function(e,t,n){e.exports=n(18)},function(e,t,n){(function(e,r){function i(e,n){var r={seen:[],stylize:s};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),h(n)?r.showHidden=n:n&&t._extend(r,n),_(r.showHidden)&&(r.showHidden=!1),_(r.depth)&&(r.depth=2),_(r.colors)&&(r.colors=!1),_(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=o),c(r,e,r.depth)}function o(e,t){var n=i.styles[t];return n?"["+i.colors[n][0]+"m"+e+"["+i.colors[n][1]+"m":e}function s(e,t){return e}function a(e){var t={};return e.forEach(function(e,n){t[e]=!0}),t}function c(e,n,r){if(e.customInspect&&n&&q(n.inspect)&&n.inspect!==t.inspect&&(!n.constructor||n.constructor.prototype!==n)){var i=n.inspect(r,e);return v(i)||(i=c(e,i,r)),i}var o=l(e,n);if(o)return o;var s=Object.keys(n),h=a(s);if(e.showHidden&&(s=Object.getOwnPropertyNames(n)),S(n)&&(s.indexOf("message")>=0||s.indexOf("description")>=0))return u(n);if(0===s.length){if(q(n)){var g=n.name?": "+n.name:"";return e.stylize("[Function"+g+"]","special")}if(k(n))return e.stylize(RegExp.prototype.toString.call(n),"regexp");if(T(n))return e.stylize(Date.prototype.toString.call(n),"date");if(S(n))return u(n)}var y="",b=!1,w=["{","}"];if(m(n)&&(b=!0,w=["[","]"]),q(n)){y=" [Function"+(n.name?": "+n.name:"")+"]"}if(k(n)&&(y=" "+RegExp.prototype.toString.call(n)),T(n)&&(y=" "+Date.prototype.toUTCString.call(n)),S(n)&&(y=" "+u(n)),0===s.length&&(!b||0==n.length))return w[0]+y+w[1];if(r<0)return k(n)?e.stylize(RegExp.prototype.toString.call(n),"regexp"):e.stylize("[Object]","special");e.seen.push(n);var _;return _=b?d(e,n,r,h,s):s.map(function(t){return p(e,n,r,h,t,b)}),e.seen.pop(),f(_,y,w)}function l(e,t){if(_(t))return e.stylize("undefined","undefined");if(v(t)){var n="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(n,"string")}return b(t)?e.stylize(""+t,"number"):h(t)?e.stylize(""+t,"boolean"):g(t)?e.stylize("null","null"):void 0}function u(e){return"["+Error.prototype.toString.call(e)+"]"}function d(e,t,n,r,i){for(var o=[],s=0,a=t.length;s<a;++s)A(t,String(s))?o.push(p(e,t,n,r,String(s),!0)):o.push("");return i.forEach(function(i){i.match(/^\d+$/)||o.push(p(e,t,n,r,i,!0))}),o}function p(e,t,n,r,i,o){var s,a,l;if(l=Object.getOwnPropertyDescriptor(t,i)||{value:t[i]},l.get?a=l.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):l.set&&(a=e.stylize("[Setter]","special")),A(r,i)||(s="["+i+"]"),a||(e.seen.indexOf(l.value)<0?(a=g(n)?c(e,l.value,null):c(e,l.value,n-1),a.indexOf("\n")>-1&&(a=o?a.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+a.split("\n").map(function(e){return"   "+e}).join("\n"))):a=e.stylize("[Circular]","special")),_(s)){if(o&&i.match(/^\d+$/))return a;s=JSON.stringify(""+i),s.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(s=s.substr(1,s.length-2),s=e.stylize(s,"name")):(s=s.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),s=e.stylize(s,"string"))}return s+": "+a}function f(e,t,n){var r=0;return e.reduce(function(e,t){return r++,t.indexOf("\n")>=0&&r++,e+t.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60?n[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+n[1]:n[0]+t+" "+e.join(", ")+" "+n[1]}function m(e){return Array.isArray(e)}function h(e){return"boolean"==typeof e}function g(e){return null===e}function y(e){return null==e}function b(e){return"number"==typeof e}function v(e){return"string"==typeof e}function w(e){return"symbol"==typeof e}function _(e){return void 0===e}function k(e){return x(e)&&"[object RegExp]"===I(e)}function x(e){return"object"==typeof e&&null!==e}function T(e){return x(e)&&"[object Date]"===I(e)}function S(e){return x(e)&&("[object Error]"===I(e)||e instanceof Error)}function q(e){return"function"==typeof e}function E(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e}function I(e){return Object.prototype.toString.call(e)}function $(e){return e<10?"0"+e.toString(10):e.toString(10)}function X(){var e=new Date,t=[$(e.getHours()),$(e.getMinutes()),$(e.getSeconds())].join(":");return[e.getDate(),C[e.getMonth()],t].join(" ")}function A(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var P=/%[sdj%]/g;t.format=function(e){if(!v(e)){for(var t=[],n=0;n<arguments.length;n++)t.push(i(arguments[n]));return t.join(" ")}for(var n=1,r=arguments,o=r.length,s=String(e).replace(P,function(e){if("%%"===e)return"%";if(n>=o)return e;switch(e){case"%s":return String(r[n++]);case"%d":return Number(r[n++]);case"%j":try{return JSON.stringify(r[n++])}catch(e){return"[Circular]"}default:return e}}),a=r[n];n<o;a=r[++n])g(a)||!x(a)?s+=" "+a:s+=" "+i(a);return s},t.deprecate=function(n,i){function o(){if(!s){if(r.throwDeprecation)throw new Error(i);r.traceDeprecation?console.trace(i):console.error(i),s=!0}return n.apply(this,arguments)}if(_(e.process))return function(){return t.deprecate(n,i).apply(this,arguments)};if(!0===r.noDeprecation)return n;var s=!1;return o};var j,O={};t.debuglog=function(e){if(_(j)&&(j=r.env.NODE_DEBUG||""),e=e.toUpperCase(),!O[e])if(new RegExp("\\b"+e+"\\b","i").test(j)){var n=r.pid;O[e]=function(){var r=t.format.apply(t,arguments);console.error("%s %d: %s",e,n,r)}}else O[e]=function(){};return O[e]},t.inspect=i,i.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},i.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},t.isArray=m,t.isBoolean=h,t.isNull=g,t.isNullOrUndefined=y,t.isNumber=b,t.isString=v,t.isSymbol=w,t.isUndefined=_,t.isRegExp=k,t.isObject=x,t.isDate=T,t.isError=S,t.isFunction=q,t.isPrimitive=E,t.isBuffer=n(282);var C=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];t.log=function(){console.log("%s - %s",X(),t.format.apply(t,arguments))},t.inherits=n(283),t._extend=function(e,t){if(!t||!x(t))return e;for(var n=Object.keys(t),r=n.length;r--;)e[n[r]]=t[n[r]];return e}}).call(t,n(5),n(1))},function(e,t){e.exports=function(e){return e&&"object"==typeof e&&"function"==typeof e.copy&&"function"==typeof e.fill&&"function"==typeof e.readUInt8}},function(e,t){"function"==typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},function(e,t){function n(){this.cmd=null,this.retain=!1,this.qos=0,this.dup=!1,this.length=-1,this.topic=null,this.payload=null}e.exports=n},function(e,t,n){"use strict";function r(e){var t=new i;return s(e,t),t.concat()}function i(){this._array=new Array(20),this._i=0}var o=n(9).Buffer,s=n(120),a=n(30).EventEmitter;n(10)(i,a),i.prototype.write=function(e){return this._array[this._i++]=e,!0},i.prototype.concat=function(){var e,t,n=0,r=new Array(this._array.length),i=this._array,s=0;for(e=0;e<i.length&&i[e];e++)"string"!=typeof i[e]?r[e]=i[e].length:r[e]=o.byteLength(i[e]),n+=r[e];for(t=o.allocUnsafe(n),e=0;e<i.length&&i[e];e++)"string"!=typeof i[e]?(i[e].copy(t,s),s+=r[e]):(t.write(i[e],s),s+=r[e]);return t},e.exports=r},function(e,t,n){"use strict";function r(e){var t=o.allocUnsafe(2);return t.writeUInt8(e>>8,0,!0),t.writeUInt8(255&e,1,!0),t}function i(){for(var e=0;e<s;e++)a[e]=r(e)}var o=n(9).Buffer,s=65536,a={};e.exports={cache:a,generateCache:i,generateNumber:r}},function(e,t,n){"use strict";(function(t){function n(e,n,r,i){if("function"!=typeof e)throw new TypeError('"callback" argument must be a function');var o,s,a=arguments.length;switch(a){case 0:case 1:return t.nextTick(e);case 2:return t.nextTick(function(){e.call(null,n)});case 3:return t.nextTick(function(){e.call(null,n,r)});case 4:return t.nextTick(function(){e.call(null,n,r,i)});default:for(o=new Array(a-1),s=0;s<o.length;)o[s++]=arguments[s];return t.nextTick(function(){e.apply(null,o)})}}!t.version||0===t.version.indexOf("v0.")||0===t.version.indexOf("v1.")&&0!==t.version.indexOf("v1.8.")?e.exports=n:e.exports=t.nextTick}).call(t,n(1))},function(e,t,n){"use strict";function r(e,t,n){var r=this;this._callback=e,this._args=n,this._interval=setInterval(e,t,this._args),this.reschedule=function(e){e||(e=r._interval),r._interval&&clearInterval(r._interval),r._interval=setInterval(r._callback,e,r._args)},this.clear=function(){r._interval&&(clearInterval(r._interval),r._interval=void 0)},this.destroy=function(){r._interval&&clearInterval(r._interval),r._callback=void 0,r._interval=void 0,r._args=void 0}}function i(){if("function"!=typeof arguments[0])throw new Error("callback needed");if("number"!=typeof arguments[1])throw new Error("interval needed");var e;if(arguments.length>0){e=new Array(arguments.length-2);for(var t=0;t<e.length;t++)e[t]=arguments[t+2]}return new r(arguments[0],arguments[1],e)}e.exports=i},function(e,t,n){"use strict";function r(e){for(var t=e.split("/"),n=0;n<t.length;n++)if("+"!==t[n]){if("#"===t[n])return n===t.length-1;if(-1!==t[n].indexOf("+")||-1!==t[n].indexOf("#"))return!1}return!0}function i(e){if(0===e.length)return"empty_topic_list";for(var t=0;t<e.length;t++)if(!r(e[t]))return e[t];return null}e.exports={validateTopics:i}},function(e,t,n){(function(e,r){var i;!function(o){function s(e){throw new RangeError(P[e])}function a(e,t){for(var n=e.length,r=[];n--;)r[n]=t(e[n]);return r}function c(e,t){var n=e.split("@"),r="";return n.length>1&&(r=n[0]+"@",e=n[1]),e=e.replace(A,"."),r+a(e.split("."),t).join(".")}function l(e){for(var t,n,r=[],i=0,o=e.length;i<o;)t=e.charCodeAt(i++),t>=55296&&t<=56319&&i<o?(n=e.charCodeAt(i++),56320==(64512&n)?r.push(((1023&t)<<10)+(1023&n)+65536):(r.push(t),i--)):r.push(t);return r}function u(e){return a(e,function(e){var t="";return e>65535&&(e-=65536,t+=C(e>>>10&1023|55296),e=56320|1023&e),t+=C(e)}).join("")}function d(e){return e-48<10?e-22:e-65<26?e-65:e-97<26?e-97:_}function p(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function f(e,t,n){var r=0;for(e=n?O(e/S):e>>1,e+=O(e/t);e>j*x>>1;r+=_)e=O(e/j);return O(r+(j+1)*e/(e+T))}function m(e){var t,n,r,i,o,a,c,l,p,m,h=[],g=e.length,y=0,b=E,v=q;for(n=e.lastIndexOf(I),n<0&&(n=0),r=0;r<n;++r)e.charCodeAt(r)>=128&&s("not-basic"),h.push(e.charCodeAt(r));for(i=n>0?n+1:0;i<g;){for(o=y,a=1,c=_;i>=g&&s("invalid-input"),l=d(e.charCodeAt(i++)),(l>=_||l>O((w-y)/a))&&s("overflow"),y+=l*a,p=c<=v?k:c>=v+x?x:c-v,!(l<p);c+=_)m=_-p,a>O(w/m)&&s("overflow"),a*=m;t=h.length+1,v=f(y-o,t,0==o),O(y/t)>w-b&&s("overflow"),b+=O(y/t),y%=t,h.splice(y++,0,b)}return u(h)}function h(e){var t,n,r,i,o,a,c,u,d,m,h,g,y,b,v,T=[];for(e=l(e),g=e.length,t=E,n=0,o=q,a=0;a<g;++a)(h=e[a])<128&&T.push(C(h));for(r=i=T.length,i&&T.push(I);r<g;){for(c=w,a=0;a<g;++a)(h=e[a])>=t&&h<c&&(c=h);for(y=r+1,c-t>O((w-n)/y)&&s("overflow"),n+=(c-t)*y,t=c,a=0;a<g;++a)if(h=e[a],h<t&&++n>w&&s("overflow"),h==t){for(u=n,d=_;m=d<=o?k:d>=o+x?x:d-o,!(u<m);d+=_)v=u-m,b=_-m,T.push(C(p(m+v%b,0))),u=O(v/b);T.push(C(p(u,0))),o=f(n,y,r==i),n=0,++r}++n,++t}return T.join("")}function g(e){return c(e,function(e){return $.test(e)?m(e.slice(4).toLowerCase()):e})}function y(e){return c(e,function(e){return X.test(e)?"xn--"+h(e):e})}var b=("object"==typeof t&&t&&t.nodeType,"object"==typeof e&&e&&e.nodeType,"object"==typeof r&&r);var v,w=2147483647,_=36,k=1,x=26,T=38,S=700,q=72,E=128,I="-",$=/^xn--/,X=/[^\x20-\x7E]/,A=/[\x2E\u3002\uFF0E\uFF61]/g,P={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},j=_-k,O=Math.floor,C=String.fromCharCode;v={version:"1.4.1",ucs2:{decode:l,encode:u},decode:m,encode:h,toASCII:y,toUnicode:g},void 0!==(i=function(){return v}.call(t,n,t,e))&&(e.exports=i)}()}).call(t,n(40)(e),n(5))},function(e,t,n){"use strict";e.exports={isString:function(e){return"string"==typeof e},isObject:function(e){return"object"==typeof e&&null!==e},isNull:function(e){return null===e},isNullOrUndefined:function(e){return null==e}}},function(e,t,n){"use strict";t.decode=t.parse=n(293),t.encode=t.stringify=n(294)},function(e,t,n){"use strict";function r(e,t){return Object.prototype.hasOwnProperty.call(e,t)}e.exports=function(e,t,n,o){t=t||"&",n=n||"=";var s={};if("string"!=typeof e||0===e.length)return s;var a=/\+/g;e=e.split(t);var c=1e3;o&&"number"==typeof o.maxKeys&&(c=o.maxKeys);var l=e.length;c>0&&l>c&&(l=c);for(var u=0;u<l;++u){var d,p,f,m,h=e[u].replace(a,"%20"),g=h.indexOf(n);g>=0?(d=h.substr(0,g),p=h.substr(g+1)):(d=h,p=""),f=decodeURIComponent(d),m=decodeURIComponent(p),r(s,f)?i(s[f])?s[f].push(m):s[f]=[s[f],m]:s[f]=m}return s};var i=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)}},function(e,t,n){"use strict";function r(e,t){if(e.map)return e.map(t);for(var n=[],r=0;r<e.length;r++)n.push(t(e[r],r));return n}var i=function(e){switch(typeof e){case"string":return e;case"boolean":return e?"true":"false";case"number":return isFinite(e)?e:"";default:return""}};e.exports=function(e,t,n,a){return t=t||"&",n=n||"=",null===e&&(e=void 0),"object"==typeof e?r(s(e),function(s){var a=encodeURIComponent(i(s))+n;return o(e[s])?r(e[s],function(e){return a+encodeURIComponent(i(e))}).join(t):a+encodeURIComponent(i(e[s]))}).join(t):a?encodeURIComponent(i(a))+n+encodeURIComponent(i(e)):""};var o=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},s=Object.keys||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.push(n);return t}},function(e,t){},function(e,t){},function(e,t,n){(function(t,r){var i=n(44),o=n(118),s=n(10),a=n(298),c=new t([0]),l=function(e,t){e._corked?e.once("uncork",t):t()},u=function(e,t){return function(n){n?e._destroyInterval(n):t&&!e._ended&&e.end()}},d=function(e,t){return e?e._writableState&&e._writableState.finished?t():e._writableState?e.end(t):(e.end(),void t()):t()},p=function(e){return new i.Readable({objectMode:!0,highWaterMark:16}).wrap(e)},f=function(e,t,n){if(!(this instanceof f))return new f(e,t,n);i.Duplex.call(this,n),this._writable=null,this._readable=null,this._readable2=null,this._forwardDestroy=!n||!1!==n.destroy,this._forwardEnd=!n||!1!==n.end,this._corked=1,this._ondrain=null,this._drained=!1,this._forwarding=!1,this._unwrite=null,this._unread=null,this._ended=!1,this._error=null,this._preferError=!1,this.destroyed=!1,e&&this.setWritable(e),t&&this.setReadable(t)};s(f,i.Duplex),f.obj=function(e,t,n){return n||(n={}),n.objectMode=!0,n.highWaterMark=16,new f(e,t,n)},f.prototype.cork=function(){1==++this._corked&&this.emit("cork")},f.prototype.uncork=function(){this._corked&&0==--this._corked&&this.emit("uncork")},f.prototype.setWritable=function(e){if(this._unwrite&&this._unwrite(),this.destroyed)return void(e&&e.destroy&&e.destroy());if(null===e||!1===e)return void this.end();var t=this,n=o(e,{writable:!0,readable:!1},u(this,this._forwardEnd)),i=function(){var e=t._ondrain;t._ondrain=null,e&&e()},s=function(){t._writable.removeListener("drain",i),n()};this._unwrite&&r.nextTick(i),this._writable=e,this._writable.on("drain",i),this._unwrite=s,this.uncork()},f.prototype.setReadable=function(e){if(this._unread&&this._unread(),this.destroyed)return void(e&&e.destroy&&e.destroy());if(null===e||!1===e)return this.push(null),void this.resume();var t=this,n=o(e,{writable:!1,readable:!0},u(this)),r=function(){t._forward()},i=function(){t.push(null)},s=function(){t._readable2.removeListener("readable",r),t._readable2.removeListener("end",i),n()};this._drained=!0,this._readable=e,this._readable2=e._readableState?e:p(e),this._readable2.on("readable",r),this._readable2.on("end",i),this._unread=s,this._forward()},f.prototype._read=function(){this._drained=!0,this._forward()},f.prototype._forward=function(){if(!this._forwarding&&this._readable2&&this._drained){this._forwarding=!0;for(var e;this._drained&&null!==(e=a(this._readable2));)this.destroyed||(this._drained=this.push(e));this._forwarding=!1}},f.prototype.destroy=function(e){if(this._preferError&&!this._error&&e&&(this._error=e),!this.destroyed){this.destroyed=!0;var t=this;r.nextTick(function(){t._destroy(t._preferError?t._error:e)})}},f.prototype._destroyInterval=function(e){if(!this.destroyed){if("premature close"!==e.message)return this.destroy(e);this._preferError=!0,this.destroy(null)}},f.prototype._destroy=function(e){if(e){var t=this._ondrain;this._ondrain=null,t?t(e):this.emit("error",e)}this._forwardDestroy&&(this._readable&&this._readable.destroy&&this._readable.destroy(),this._writable&&this._writable.destroy&&this._writable.destroy()),this.emit("close")},f.prototype._write=function(e,t,n){return this.destroyed?n():this._corked?l(this,this._write.bind(this,e,t,n)):e===c?this._finish(n):this._writable?void(!1===this._writable.write(e)?this._ondrain=n:n()):n()},f.prototype._finish=function(e){var t=this;this.emit("preend"),l(this,function(){d(t._forwardEnd&&t._writable,function(){!1===t._writableState.prefinished&&(t._writableState.prefinished=!0),t.emit("prefinish"),l(t,e)})})},f.prototype.end=function(e,t,n){return"function"==typeof e?this.end(null,null,e):"function"==typeof t?this.end(e,null,t):(this._ended=!0,e&&this.write(e),this._writableState.ending||this.write(c),i.Writable.prototype.end.call(this,n))},e.exports=f}).call(t,n(46).Buffer,n(1))},function(e,t){function n(e){var t=e._readableState;return t?t.objectMode?e.read():e.read(r(t)):null}function r(e){return e.buffer.length?e.buffer.head?e.buffer.head.data.length:e.buffer[0].length:e.length}e.exports=n},function(e,t){var n=null;"undefined"!=typeof WebSocket?n=WebSocket:"undefined"!=typeof MozWebSocket?n=MozWebSocket:"undefined"!=typeof window&&(n=window.WebSocket||window.MozWebSocket),e.exports=n},function(e,t,n){"use strict";/*!
 * in-array <https://github.com/jonschlinkert/in-array>
 *
 * Copyright (c) 2014 Jon Schlinkert, contributors.
 * Licensed under the MIT License
 */
e.exports=function(e,t){e=e||[];var n,r=e.length;for(n=0;n<r;n++)if(e[n]===t)return!0;return!1}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){return l||(l=e),(0,s.default)(t).forEach(function(n,r,o){var s=t[n],a="";s.base&&(u=s.base),a=u,e[n]||(e[n]={}),s.methods&&s.methods.length&&s.methods.forEach(function(t,r){e[n][t.name]=function(){var e=arguments,n=""+a+t.pattern;switch(t.params&&t.params.length&&t.params.forEach(function(t,r,i){-1!==n.indexOf(t)&&(n=n.replace("{"+t+"}",e[r]))}),l.hasClient()||l([]),t.name){case"subscribe":return l.subscribe({name:n,handler:arguments[t.params.length]});case"unsubscribe":return l.unsubscribe(n)}}}),s.children&&(e[n]=i(e[n],s.children))}),e}Object.defineProperty(t,"__esModule",{value:!0});var o=n(16),s=r(o),a=n(125),c=r(a),l=void 0,u="";t.default=function(e){return i(e,c.default)}},function(e,t,n){function r(e){var t=++o;return i(e)+t}var i=n(303),o=0;e.exports=r},function(e,t,n){function r(e){return null==e?"":i(e)}var i=n(304);e.exports=r},function(e,t,n){function r(e){if("string"==typeof e)return e;if(s(e))return o(e,r)+"";if(a(e))return u?u.call(e):"";var t=e+"";return"0"==t&&1/e==-c?"-0":t}var i=n(59),o=n(305),s=n(61),a=n(306),c=1/0,l=i?i.prototype:void 0,u=l?l.toString:void 0;e.exports=r},function(e,t){function n(e,t){for(var n=-1,r=null==e?0:e.length,i=Array(r);++n<r;)i[n]=t(e[n],n,e);return i}e.exports=n},function(e,t,n){function r(e){return"symbol"==typeof e||o(e)&&i(e)==s}var i=n(28),o=n(23),s="[object Symbol]";e.exports=r},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){function n(e){var r=e.split("/").slice(1),i=r.reduce(function(e,t){return e[t]},t);if(!i.$ref)return i;n(i.$ref)}var r=t.basePath,i=r.slice(1);return e[i]={},(0,p.default)(t.paths).reduce(function(o,a,l){var d=(0,p.default)(t.paths[a]).filter(function(e){return"parameters"!==e}),f=(t.paths[a].parameters&&t.paths[a].parameters.reduce(function(e,t){if(t.$ref){var r=n(t.$ref);e[r.name]=r.in}else e[t.name]=t.in;return e},{}),a.split("/").reduce(function(e,t){return t.match(/{(.*)}/g)?e.params.push(t):t&&e.parts.push(t.replace(/-\w/g,function(e){return e[1].toUpperCase()})),e},{params:[],parts:[]}));return d.forEach(function(l){var d=t.paths[a][l].parameters?t.paths[a][l].parameters.reduce(function(e,t){if(t.$ref){var r=n(t.$ref);e[r.name]=r.in}else e[t.name]=t.in;return e},{}):{};f.parts.reduce(function(e,t){return e[t]||(e[t]={}),e[t]},e[i]),f.parts.reduce(function(t,n,i,o){return i===o.length-1&&(t[n][l]=function(){var t=arguments,n=""+r+a,i={},o=[].concat((0,u.default)(f.params));return(0,c.default)(d).includes("query")&&o.push("query"),(0,c.default)(d).includes("body")&&o.push("body"),o.forEach(function(e,r){-1!==n.indexOf(e)&&(n=n.replace(e,t[r])),"query"===e&&t[r]&&(i.params=t[r]),"body"===e&&t[r]&&(i.data=t[r])}),i=arguments[o.length]?(0,s.default)(arguments[o.length],{url:n,method:l},i):(0,s.default)({url:n,method:l},i),e(i)}),t[n]},e[i]);var p=f.parts.reduce(function(e,t){return e+=t[0].toUpperCase()+t.slice(1).replace(/-\w/g,function(e){return e[1].toUpperCase()})},""+l);o[p]=function(){var t=arguments,n=""+r+a,i={},o=[].concat((0,u.default)(f.params));return(0,c.default)(d).includes("query")&&o.push("query"),(0,c.default)(d).includes("body")&&o.push("body"),o.forEach(function(e,r){-1!==n.indexOf(e)&&(n=n.replace(e,t[r])),"query"===e&&t[r]&&(i.params=t[r]),"body"===e&&t[r]&&(i.data=t[r])}),i=arguments[o.length]?(0,s.default)(arguments[o.length],{url:n,method:l},i):(0,s.default)({url:n,method:l},i),e(i)}}),o},{})}Object.defineProperty(t,"__esModule",{value:!0});var o=n(19),s=r(o),a=n(308),c=r(a),l=n(312),u=r(l),d=n(16),p=r(d);t.default=function(e){return[{basePath:"/platform",definitions:{account:{properties:{id:{description:"account unique ID",type:"integer"},key:{$ref:"#/definitions/account.key"},provider:{$ref:"#/definitions/account.provider"}},type:"object"},"account.key":{description:"account unique text key",type:"string"},"account.provider":{description:"provider where given account is registered",type:"string"},"accounts.result":{properties:{result:{description:"accounts with fields included according to request's **fields** parameter.",items:{$ref:"#/definitions/account"},type:"array"}},type:"object"},customer:{properties:{balance:{$ref:"#/definitions/customer.balance"},counters:{$ref:"#/definitions/customer.counters"},email:{$ref:"#/definitions/customer.email"},id:{description:"Customer's unique ID",type:"integer"},name:{$ref:"#/definitions/customer.name"},sla:{$ref:"#/definitions/customer.sla"}},type:"object"},"customer.balance":{description:"Current customer's balance, in USD cents",type:"integer"},"customer.counters":{properties:{abques:{description:"Customer's queues statistics.",properties:{count:{type:"integer"},count_limit:{type:"integer"},storage:{type:"integer"},storage_limit:{type:"integer"}},type:"object"},api:{description:"API calls statistics.",properties:{calls:{type:"integer"},calls_limit:{type:"integer"},mqtt_sessions:{type:"integer"},mqtt_sessions_limit:{type:"integer"},mqtt_storage:{type:"integer"},mqtt_storage_limit:{type:"integer"},traffic:{type:"integer"},traffic_limit:{type:"integer"}},type:"object"},channels:{description:"Customer's channels statistics.",properties:{connections:{type:"integer"},connections_limit:{type:"integer"},count:{type:"integer"},count_limit:{type:"integer"},messages:{type:"integer"},storage:{type:"integer"},storage_limit:{type:"integer"},traffic:{type:"integer"},traffic_limit:{type:"integer"}},type:"object"},containers:{description:"Customer's containers statistics.",properties:{count:{type:"integer"},count_limit:{type:"integer"},storage:{type:"integer"},storage_limit:{type:"integer"}},type:"object"},devices:{description:"Customer's devices statistics.",properties:{count:{type:"integer"},count_limit:{type:"integer"},storage:{type:"integer"},storage_limit:{type:"integer"}},type:"object"},modems:{description:"Customer's modems statistics.",properties:{count:{type:"integer"},count_limit:{type:"integer"}},type:"object"},sms:{description:"Customer's SMS usage statistics.",properties:{count:{type:"integer"},count_limit:{type:"integer"}},type:"object"},streams:{description:"Customer's streams statistics.",properties:{count:{type:"integer"},count_limit:{type:"integer"},messages:{type:"integer"},storage:{type:"integer"},storage_limit:{type:"integer"},traffic:{type:"integer"},traffic_limit:{type:"integer"}},type:"object"}},type:"object"},"customer.email":{description:"Customer's unique e-mail",maxLength:255,minLength:1,type:"string"},"customer.name":{description:"Customer's unique name",maxLength:255,minLength:1,type:"string"},"customer.sla":{description:"SLA level, according to https://flespi.com/pricing. zero mean free, 1 => SLA Best Effort, 2 => SLA Basic, 3 => SLA Premium",format:"uint32",maximum:3,minimum:0,type:"integer"},"customer.statsmessage":{description:"Statistical record. It contains fixed fields described below and additional fields based on origin.",properties:{additionalProperties:!0,properties:{origin:{description:'Which state this record describes, like "gw/channels/123" or "platform".',type:"string"},timestamp:{description:"Record UNIX timestamp.",format:"uint32",type:"integer","x-view-type":"datetime"}},type:"object"},type:"object"},"customers.result":{properties:{result:{description:"Customer's info in reply, fields included according to request's **fields** parameter.",items:{$ref:"#/definitions/customer"},type:"array"}},type:"object"},error:{properties:{code:{description:"Error code.",type:"integer"},id:{description:"Object ID or index of element in array that was the reason of error. Might be 0.",type:"integer"},reason:{description:"Error description.",type:"string"}},type:"object"},errors:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"}},type:"object"},"id.result":{properties:{result:{description:"Element's ID list.",items:{description:"Element's ID",type:"integer"},type:"array"}},type:"object"},logmessage:{description:"Log record. It contains fixed fields described below and additional fields based on log record type.",properties:{additionalProperties:!0,properties:{event_code:{description:"Log record code.",type:"integer"},event_origin:{description:"Log record origin name.",type:"string"},event_text:{description:"Log record text.",type:"integer"},timestamp:{description:"Log record UNIX timestamp.",format:"uint32",type:"integer","x-view-type":"datetime"}},type:"object"},type:"object"},"logs.get":{properties:{count:{default:1e6,description:"limit number of logs to be returned",format:"uint32",maximum:1e6,minimum:1,type:"integer"},fields:{description:"CSV-formatted list of parameters to be returned in response message list. If message does not contain any of the specified fields, it will be skipped.\n",maxLength:4096,type:"string"},filter:{description:"CSV-formatted filtering option list. See request description for details.\n",maxLength:1024,type:"string"},from:{description:"start momemnt's UNIX timestamp to limit log sample from beginning. use 0 to ignore left bound",format:"uint32",type:"integer"},reverse:{default:!1,description:"time sorting parameter (true/false), use false to list logs from end to beginning",type:"boolean"},to:{description:"end moment's UNIX timestamp to limit log sample to end. use 0 to ignore right bound",format:"uint32",type:"integer"}},type:"object"},token:{properties:{accessed:{$ref:"#/definitions/token.accessed"},acl:{$ref:"#/definitions/token.acl"},expire:{$ref:"#/definitions/token.expire"},flags:{$ref:"#/definitions/token.result.flags"},id:{$ref:"#/definitions/token.id"},info:{$ref:"#/definitions/token.info"},key:{$ref:"#/definitions/token.key"},ttl:{$ref:"#/definitions/token.ttl"}},type:"object"},"token.accessed":{description:"UNIX timestamp of last REST request using given token",format:"uint32",type:"integer"},"token.ace":{anyOf:[{$ref:"#/definitions/token.ace.gw"},{$ref:"#/definitions/token.ace.gw.protocols"},{$ref:"#/definitions/token.ace.gw.channels"},{$ref:"#/definitions/token.ace.gw.modems"},{$ref:"#/definitions/token.ace.storage"},{$ref:"#/definitions/token.ace.storage.containers"},{$ref:"#/definitions/token.ace.storage.abques"},{$ref:"#/definitions/token.ace.registry"},{$ref:"#/definitions/token.ace.registry.devices"},{$ref:"#/definitions/token.ace.registry.streams"},{$ref:"#/definitions/token.ace.mqtt"}],description:"Access control entry (ACE) - allows to perform specified HTTP methods on the specified module or with the specified items","x-key-property":"uri"},"token.ace.gw":{properties:{methods:{$ref:"#/definitions/token.ace.methods-all"},uri:{default:"gw",description:"URI affected by ACE (access control entry)",readOnly:!0,title:"uri",type:"string","x-schema-const":"gw"}},required:["uri","methods"],title:"gw",type:"object"},"token.ace.gw.channels":{properties:{ids:{$ref:"#/definitions/token.ace.ids"},methods:{$ref:"#/definitions/token.ace.methods-all"},uri:{default:"gw/channels",description:"URI affected by ACE (access control entry)",readOnly:!0,title:"uri",type:"string","x-schema-const":"gw/channels"}},required:["uri","methods"],title:"gw/channels",type:"object"},"token.ace.gw.modems":{properties:{ids:{$ref:"#/definitions/token.ace.ids"},methods:{$ref:"#/definitions/token.ace.methods-all"},uri:{default:"gw/modems",description:"URI affected by ACE (access control entry)",readOnly:!0,title:"uri",type:"string","x-schema-const":"gw/modems"}},required:["uri","methods"],title:"gw/modems",type:"object"},"token.ace.gw.protocols":{properties:{methods:{$ref:"#/definitions/token.ace.methods-get-only"},uri:{default:"gw/protocols",description:"URI affected by ACE (access control entry)",readOnly:!0,title:"uri",type:"string","x-schema-const":"gw/protocols"}},required:["uri","methods"],title:"gw/protocols",type:"object"},"token.ace.ids":{oneOf:[{description:"Affected items IDs array",items:{format:"uint32",minimum:1,type:"number"},minItems:1,title:"list",type:"array"},{description:"Keyword for all the items IDs accessible by the token",enum:["all"],title:"all",type:"string"}],title:"ids"},"token.ace.methods-all":{oneOf:[{description:"Allowed HTTP methods array for the current URI",items:{enum:["GET","POST","PUT","DELETE"],type:"string"},maxItems:4,minItems:1,title:"list",type:"array",uniqueItems:!0},{description:"Integer mask value of the allowed HTTP methods: 0x1 - GET; 0x2 - POST; 0x4 - PUT; 0x8 - DELETE",enum:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],title:"flags",type:"integer"}],title:"methods"},"token.ace.methods-get-only":{oneOf:[{description:"Allowed HTTP methods array for the current URI",items:{enum:["GET"],type:"string"},maxItems:1,minItems:1,title:"list",type:"array",uniqueItems:!0},{description:"Integer mask value of the allowed HTTP methods: 0x1 - GET",enum:[1],title:"flags",type:"integer"}],title:"methods"},"token.ace.methods-no-put":{oneOf:[{description:"Allowed HTTP methods array for the current URI",items:{enum:["GET","POST","DELETE"],type:"string"},maxItems:3,minItems:1,title:"list",type:"array",uniqueItems:!0},{description:"Integer mask value of the allowed HTTP methods: 0x1 - GET; 0x2 - POST; 0x8 - DELETE",enum:[1,2,3,8,9,10,11],title:"flags",type:"integer"}],title:"methods"},"token.ace.mqtt":{properties:{actions:{description:"Allowed MQTT actions array for the current topic mask.",items:{enum:["publish","subscribe"],type:"string"},maxItems:2,minItems:1,title:"actions",type:"array",uniqueItems:!0},topic:{description:"Authorize token to publish and subscribe topics matched given mask. Mask has a regular format of MQTT subscribtions.",maxLength:1024,minLength:1,type:"string"},uri:{default:"mqtt",description:"URI affected by ACE (access control entry)",readOnly:!0,title:"uri",type:"string","x-schema-const":"mqtt"}},required:["topic","actions"],title:"mqtt",type:"object","x-view-order":["topic","actions"]},"token.ace.registry":{properties:{methods:{$ref:"#/definitions/token.ace.methods-all"},uri:{default:"registry",description:"URI affected by ACE (access control entry)",readOnly:!0,title:"uri",type:"string","x-schema-const":"registry"}},required:["uri","methods"],title:"registry",type:"object"},"token.ace.registry.devices":{properties:{ids:{$ref:"#/definitions/token.ace.ids"},methods:{$ref:"#/definitions/token.ace.methods-all"},uri:{default:"registry/devices",description:"URI affected by ACE (access control entry)",readOnly:!0,title:"uri",type:"string","x-schema-const":"registry/devices"}},required:["uri","methods"],title:"registry/devices",type:"object"},"token.ace.registry.streams":{properties:{ids:{$ref:"#/definitions/token.ace.ids"},methods:{$ref:"#/definitions/token.ace.methods-all"},uri:{default:"registry/streams",description:"URI affected by ACE (access control entry)",readOnly:!0,title:"uri",type:"string","x-schema-const":"registry/streams"}},required:["uri","methods"],title:"registry/streams",type:"object"},"token.ace.storage":{properties:{methods:{$ref:"#/definitions/token.ace.methods-all"},uri:{default:"storage",description:"URI affected by ACE (access control entry)",readOnly:!0,title:"uri",type:"string","x-schema-const":"storage"}},required:["uri","methods"],title:"storage",type:"object"},"token.ace.storage.abques":{properties:{ids:{$ref:"#/definitions/token.ace.ids"},methods:{$ref:"#/definitions/token.ace.methods-all"},uri:{default:"storage/abques",description:"URI affected by ACE (access control entry)",readOnly:!0,title:"uri",type:"string","x-schema-const":"storage/abques"}},required:["uri","methods"],title:"storage/abques",type:"object"},"token.ace.storage.containers":{properties:{ids:{$ref:"#/definitions/token.ace.ids"},methods:{$ref:"#/definitions/token.ace.methods-all"},uri:{default:"storage/containers",description:"URI affected by ACE (access control entry)",readOnly:!0,title:"uri",type:"string","x-schema-const":"storage/containers"}},required:["uri","methods"],title:"storage/containers",type:"object"},"token.ace.template.uri":{description:"URI affected by ACE (access control entry)",readOnly:!0,title:"uri",type:"string"},"token.acl":{description:"Access control list (ACL) - list of granted permissions to work with the specified modules and/or items",items:{$ref:"#/definitions/token.ace"},minItems:1,type:"array"},"token.expire":{description:"UNIX timestamp when token will be automatically removed",format:"uint32",type:"integer","x-view-type":"datetime"},"token.id":{description:"Token's unique ID",type:"integer"},"token.info":{description:"user defined description typically contains the purpose of token",maxLength:255,type:"string"},"token.key":{description:"Token's unique text key",type:"string"},"token.new.flags":{description:"Token's internal flags: 0x1 - token can manage other tokens; 0x2 - enable ACL for the token",enum:[0,1,2],format:"uint32",title:"Type",type:"integer","x-view-enum-labels":["Standard","Master","ACL"]},"token.post":{anyOf:[{additionalProperties:!0,required:["expire"],type:"object"},{additionalProperties:!0,required:["ttl"],type:"object"}],properties:{acl:{$ref:"#/definitions/token.acl"},expire:{$ref:"#/definitions/token.expire"},flags:{$ref:"#/definitions/token.new.flags"},info:{$ref:"#/definitions/token.info"},ttl:{$ref:"#/definitions/token.ttl"}},type:"object","x-view-noselect":!0,"x-view-order":["info","expire","ttl","flags","acl"]},"token.put":{properties:{acl:{$ref:"#/definitions/token.acl"},expire:{$ref:"#/definitions/token.expire"},flags:{$ref:"#/definitions/token.new.flags"},info:{$ref:"#/definitions/token.info"},ttl:{$ref:"#/definitions/token.ttl"}},type:"object","x-view-order":["info","expire","ttl","flags","acl"]},"token.result.flags":{description:"Token's internal flags: 0x1 - token can manage other tokens; 0x2 - enable ACL for the token",enum:[0,1,2,3],format:"uint32",title:"Type",type:"integer","x-view-enum-labels":["Standard","Master","ACL","NOAPI"]},"token.ttl":{description:"Token's time-to-leave - period of time (in seconds) after token's last usage when it is still active and can be used. After that time token will become invalid.",format:"uint32",maximum:31536e3,minimum:0,type:"integer","x-view-divider":60,"x-view-unit":"min."},"tokens.result":{properties:{result:{description:"tokens with fields included according to request's **fields** parameter",items:{$ref:"#/definitions/token"},type:"array"}},type:"object"}},host:"flespi.io",info:{description:'This REST API provides methods to manage your account data and authorization tokens.\n\nTo identify each REST request FlespiToken key has to be passed in HTTP call via header: **Authorization: FlespiToken XXXXXXXXXX**.\nList of tokens available to you is provided in [control panel](https://flespi.io).\nYou can create another tokens to work with flespi platform, but only "master" tokens can be used to authorize this API requests\n(it can be distinguished by field "flag" = 1, otherwise 403 error will be returned).\n\nUsing this API you can automate token and user management actions:\n  - view your customer\'s identification data\n  - view authorizations using your public accounts (like Google, Facebook, etc.) and detach it from your registration\n  - create, list and remove authorization tokens allowing your applications to properly work with flespi products\n\nDetailed REST API description provided in [guidelines](https://flespi.com/api-guidelines).\n',title:"flespi platform REST API",version:1},parameters:{"account-fields":{collectionFormat:"csv",description:"CSV-formatted list of acount's fields to be returned in reply collection.",in:"query",items:{enum:["id","key","provider"],type:"string"},name:"fields",required:!1,type:"array"},"accounts-selector":{collectionFormat:"csv",default:["all"],description:'Accounts selector - CSV-formatted string to filter account records that have to be listed or removed.\nKeyword **"all"** will select all account records ignoring other filtering parameters,\nCSV-list 1,2,3 will select only records with IDs 1,2 and 3.  Available filtering fields: key, provider.\n',in:"path",items:{type:"string"},name:"accounts-selector",required:!0,type:"array"},"customer-fields":{collectionFormat:"csv",description:"CSV-formatted list of customer's fields to be returned in reply collection.",in:"query",items:{enum:["id","name","email","counters","sla","balance"],type:"string"},name:"fields",required:!1,type:"array"},"token-fields":{collectionFormat:"csv",description:"CSV-formatted list of token's fields to be returned in reply collection.",in:"query",items:{enum:["id","key","expire","info","ttl","accessed","flags","acl"],type:"string"},name:"fields",required:!1,type:"array"},"tokens-selector":{collectionFormat:"csv",default:["all"],description:"Token selector - CSV-formatted string to filter tokens that have to be accessed.\n",in:"path",items:{type:"string"},name:"tokens-selector",required:!0,type:"array"}},paths:{"/customer":{get:{description:"View your registration data: name, email, ACL and ID.\n",parameters:[{$ref:"#/parameters/customer-fields"}],responses:{200:{description:"OK. Return customer's data.",schema:{$ref:"#/definitions/customers.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get your registration data\n",tags:["customer"]}},"/customer/accounts/{accounts-selector}":{delete:{description:"Detach selected accounts from flespi customer\n",responses:{200:{description:"Result contain ID of deleted accounts.",schema:{$ref:"#/definitions/id.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Detach selected accounts from flespi customer\n",tags:["accounts"]},get:{description:"Get accounts through which it is possible to authorize customer on the platform.\n",parameters:[{$ref:"#/parameters/account-fields"}],responses:{200:{description:"Result contain selected accounts.",schema:{$ref:"#/definitions/accounts.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get customer's accounts\n",tags:["accounts"]},parameters:[{$ref:"#/parameters/accounts-selector"}]},"/customer/logs":{get:{description:"Get logs for whole platform. The request without parameters will return all logs records.\n",parameters:[{description:"Parameters to generate log sample.",in:"query",name:"data",schema:{$ref:"#/definitions/logs.get"}}],responses:{200:{description:"Log messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"Logs collection",items:{$ref:"#/definitions/logmessage"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get platform log records.\n",tags:["logs"]}},"/customer/statistics":{get:{description:'Platform storing items statistics counters into special container available within this method.\nYou may optionally filter them by "origin" or activate generalization algorithm to aggregate counters.\n',parameters:[{description:"Parameters to retrieve statistical records.\n",in:"query",name:"data",schema:{properties:{count:{default:1e7,description:"limit number of records to be returned",format:"uint32",maximum:1e7,minimum:1,type:"integer"},fields:{description:"CSV-formatted list of parameters to be returned in response message list. If message does not contain any of the specified fields, it will be skipped.\n",maxLength:4096,type:"string"},filter:{description:"CSV-formatted filtering option list. See request description for details.\n",maxLength:1024,type:"string"},from:{description:"start moment's UNIX timestamp to limit statistics records from beginning. use 0 to ignore left bound",format:"uint32",type:"integer"},generalize:{description:"Generalization interval. Only timestamps that are multiple to specified generalization interval will be returned with recalculated parameter values according to\nspecified generalization method. It may be possible that first returned timestamp will be less then specified 'from' timestamp if 'from' timestamp is not a multiple of generalization interval.\nAll numercial parameter values withing generalization interval will be calculated into one value according to specified method.\n",format:"uint32",maximum:1e6,minimum:60,type:"integer"},method:{default:"average",description:"Generalization method. Applicable only when valid generalize parameter specified.\n",enum:["average","minimum","maximum"],type:"string"},reverse:{default:!1,description:"time sorting parameter (true/false), use true to list records from end to beginning",type:"boolean"},to:{description:"end moment's UNIX timestamp to limit statistics records to end. use 0 to ignore right bound",format:"uint32",type:"integer"}},type:"object"}}],responses:{200:{description:"Log messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"Statistical records",items:{$ref:"#/definitions/customer.statsmessage"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get platform statistics records.\n",tags:["statistics"]}},"/customer/tokens":{post:{description:"Create new token with defined lifetime and rights. Either 'expire' or 'ttl' should be specified for correct token expiration time detection.\n",parameters:[{$ref:"#/parameters/token-fields"},{description:"New tokens parameters. At least 'expire' or 'ttl' field should be set.",in:"body",name:"data",required:!1,schema:{items:{$ref:"#/definitions/token.post"},type:"array"}}],responses:{200:{description:"Result contain created tokens.",schema:{$ref:"#/definitions/tokens.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Generate new tokens\n",tags:["tokens"]}},"/customer/tokens/{tokens-selector}":{delete:{description:"Delete uneeded tokens with specified ID or matching filtering parameters.\n",responses:{200:{description:"Return list of ID of deleted tokens.",schema:{$ref:"#/definitions/id.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Delete tokens\n",tags:["tokens"]},get:{description:"List existing tokens with specified fields.\n",parameters:[{$ref:"#/parameters/token-fields"}],responses:{200:{description:"Result contain selected tokens.",schema:{$ref:"#/definitions/tokens.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get customer's tokens\n",tags:["tokens"]},parameters:[{$ref:"#/parameters/tokens-selector"}],put:{description:"Modify some token properies.\n",parameters:[{$ref:"#/parameters/token-fields"},{description:"Properties to change.",in:"body",name:"data",required:!1,schema:{$ref:"#/definitions/token.put"}}],responses:{200:{description:"Return list of ID of deleted tokens.",schema:{$ref:"#/definitions/id.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],tags:["tokens"]}}},produces:["application/json"],schemes:["https","http"],securityDefinitions:{FlespiToken:{description:"Authorization through FlespiToken",in:"header",name:"Authorization",type:"apiKey"}},swagger:2,tags:[{description:'Review your registration data: name, email, access control list, billing (if applicable) and counters.\n\nCounters contain information about yours resources, their current usage and limits. When some resource usage is going beyond its limits this resource will be automatically blocked\nby the platform with corresponding block code. Log entries of with event_code=20 (item was blocked) will containe also "block_code" parameter.\nLog entries with event_code=21 (item was unblocked) do not contain any extra parameters. See [logs](#/tags/!/logs) for more information.\n\nTable with the list of existing block codes:\n\n Block code | Description\n  --------|----------\n    1 | too many items quantity\n    2 | too much items frequency in timeframe\n    3 | too much traffic associated with item in timeframe\n    4 | too much storage used by item\n    5 | items quantity is out of specified limit\n',name:"customer"},{description:'Token is an identification string that being added to REST API request informs flespi products on who is the author of the request.\nRequests from this API can be autorized only by "master"-tokens. This token is marked with field "flag" = 1.\nEvery token has time validity options: **expire** and **time-to-live**. Expire field contains UNIX timestamp of a moment when token becomes invalid.\nTime to live is a period of time, when token being used prolongates its validity for **ttl** minutes.\nExpired tokens will be cleared automatically and can not be used anymore.\n\nYou can read more information about tokens and how to use them in [dedicated article](https://flespi.com/blog/take-control-of-token-access-permissions-with-flexible-acls).\nAll token modification operations are being reported to common [logs subsystem](https://flespi.io/platform/#/tags/!/logs) with next possible event codes:\n\n  Event code | Description\n  -----|------\n  1|token was created via REST API\n  2|token was updated via REST API\n  3|token was deleted via REST API\n  600|token expired and has been deleted\n\n**{tokens-selector}** - CSV-formatted string to filter tokens that have to be listed or removed.\nKeyword **"all"** will select all tokens ignoring other filtering parameters, CSV-list 1,2,3 will select only tokens with IDs 1,2 and 3.\nAvailable filtering fields applied with logical **AND** condition: key, expire, ttl, accessed.\n\nE.g. request\n~~~\n  GET /customer/tokens/1,2,3,accessed>1488179997,ttl=3600\n~~~\nwill list all tokens with IDs among 1,2 and 3, accessed later then timestamp 1488179997 with ttl equal to 3600 seconds.\n~~~\n  DELETE /customer/tokens/key=123456789abcd\n~~~\nwill remove token with key 123456789abcd\n',name:"tokens"},{description:"Customer's accounts on third party authorization platforms such as Google, Facebook, etc. through which customer can authorize to flespi platform.\n",name:"accounts"},{description:"Platform keeps all customer log records about each bit of activity with customer's items. Logs are stored for limited number of days,\nexact amount of which is specified at [pricing](https://flespi.com/pricing) page. For more information about each type of logs codes and log record fields\nplease look at corresponding module page.\n\n Field | Description\n  --------|----------\n    timestamp | Event generation time\n    event_origin | Event owner, equal with topmost REST API item path\n    event_code | Event code, numerical representation of type of event\n    event_text | Event text, textual representation of type of event\n    [param name] | Extra event parameters, depending on event_code\n\nTable with the list of existing event codes:\n\n  Event code | Description\n  -----|------\n  1|item was created, usually via REST API, see below\n  2|item was updated, usually via REST API, see below\n  3|item was deleted, usually via REST API, see below\n  20|item was blocked, see [customer](#/tags/!/customer) for more information\n  21|item was unblocked, see [customer](#/tags/!/customer) for more information\n  100|chanel has accepted connection, see [gw/connections](https://flespi.io/gw/#/tags/!/connections) for more information\n  101|channel connection was identified, see [gw/connections](https://flespi.io/gw/#/tags/!/connections) for more information\n  102|channel connection was closed, see [gw/connections](https://flespi.io/gw/#/tags/!/connections) for more information\n  110|new channel's command was placed onto queue, see [gw/commands](https://flespi.io/gw/#/tags/!/commands) for more information\n  111|channel's command in the queue was updated, see [gw/commands](https://flespi.io/gw/#/tags/!/commands) for more information\n  112|channel's command was deleted from the queue, see [gw/commands](https://flespi.io/gw/#/tags/!/commands) for more information\n  113|channel's command in the queue was executed or discarded and placed into commands-results, see [gw/commands](https://flespi.io/gw/#/tags/!/commands) for more information\n  114|channel configuration is invalid, see [gw/channels](https://flespi.io/gw/#/tags/!/channels) for more information\n  200|SMS was received via modem, see [gw/modems](https://flespi.io/gw/#/tags/!/modems) for more information\n  201|SMS was sent via modem, see [gw/modems](https://flespi.io/gw/#/tags/!/modems) for more information\n  202|modem has successfully connected to SMPP server, see [gw/modems](https://flespi.io/gw/#/tags/!/modems) for more information\n  203|modem has lost connection to SMPP server, see [gw/modems](https://flespi.io/gw/#/tags/!/modems) for more information\n  204|failed to connect to SMPP server, see [gw/modems](https://flespi.io/gw/#/tags/!/modems) for more information\n  300|device connected, see [registry/devices](https://flespi.io/registry/#/tags/!/devices) for more information\n  301|device disconnected, see [registry/devices](https://flespi.io/registry/#/tags/!/devices) for more information\n  302|received SMS from device, see [registry/devices](https://flespi.io/registry/#/tags/!/devices) for more information\n  303|sent SMS to device, see [registry/devices](https://flespi.io/registry/#/tags/!/devices) for more information\n  310|Received a new setting value from the device, see [registry/devices](https://flespi.io/registry/#/tags/!/devices) for more information\n  311|REST API (PUT) request: the system accepted new setting value, see [registry/devices](https://flespi.io/registry/#/tags/!/devices) for more information\n  312|Device confirmed the acceptance of the new setting value, see [registry/devices](https://flespi.io/registry/#/tags/!/devices) for more information\n  313|Device rejected the new setting value, see [registry/devices](https://flespi.io/registry/#/tags/!/devices) for more information\n  314|REST API (DELETE) request: the sending of new setting value was cancelled by user, see [registry/devices](https://flespi.io/registry/#/tags/!/devices) for more information\n  315|REST API (DELETE) request: current setting value was cleared from the system by user, see [registry/devices](https://flespi.io/registry/#/tags/!/devices) for more information\n  401|stream connected successfully, see [registry/streams](https://flespi.io/registry/#/tags/!/streams) for more information\n  402|stream has lost connection, see [registry/streams](https://flespi.io/registry/#/tags/!/streams) for more information\n  403|stream failed to connect, see [registry/streams](https://flespi.io/registry/#/tags/!/streams) for more information\n  404|stream has sent some messages, see [registry/streams](https://flespi.io/registry/#/tags/!/streams) for more information\n  410|new subscription was created for stream, see [registry/streams](https://flespi.io/registry/#/tags/!/streams) for more information\n  411|stream subscription was updated, see [registry/streams](https://flespi.io/registry/#/tags/!/streams) for more information\n  412|stream subscription was deleted, see [registry/streams](https://flespi.io/registry/#/tags/!/streams) for more information\n  500|MQTT session connection was accepted, see [mqtt/sessions](https://flespi.io/mqtt/#/tags/!/sessions) for more information\n  501|MQTT session connection was blocked, see [mqtt/sessions](https://flespi.io/mqtt/#/tags/!/sessions) for more information\n  502|MQTT session connection was rejected, see [mqtt/sessions](https://flespi.io/mqtt/#/tags/!/sessions) for more information\n  503|MQTT session connection was closed, see [mqtt/sessions](https://flespi.io/mqtt/#/tags/!/sessions) for more information\n  504|persistent MQTT session was overflowed and deleted, see [mqtt/sessions](https://flespi.io/mqtt/#/tags/!/sessions) for more information\n  510|new subscription was created for MQTT session via REST API, see [mqtt/sessions](https://flespi.io/mqtt/#/tags/!/sessions) for more information\n  511|MQTT session subscription was updated via REST API, see [mqtt/sessions](https://flespi.io/mqtt/#/tags/!/sessions) for more information\n  512|MQTT session subscription was deleted via REST API, see [mqtt/sessions](https://flespi.io/mqtt/#/tags/!/sessions) for more information\n  600|token expired and has been deleted\n\n For events that were generated due to user actions via REST, e.g. item created/updated/deleted, as well as for stream subscriptions and channel commands queue modification\n next additional parameters can be specified:\n\n Field name | Description\n  --------|----------\n    item_data | contain item's data with default fields prior(DELETE) or after(POST, PUT) request\n    http_data | contain original parameters for POST and PUT operations supplied by the caller\n    token_id | token ID which was used for authorize HTTP request\n    host | IP address from which HTTP request was received\n",name:"logs"},{description:'Each minute, platform retreieve [customer\'s counters](#/tags/!/customer) and store them in special container. Each generated record with counters contain "origin"\nfields, that specifies statsitics origin. To retrieve generic statsitics about your usage of platform just pass "origin=platform" in "filter" field of request.\nStatistical records from other customer items like channels, streams, devices contain origin field with path and ID of item, e.g. "gw/channels/123", "registry/devices/1298".\n\nIt is also possible to use "generalize" and "method" request fields to aggregate statistical values for some interval.\n',name:"statistics"}],"x-acl-schema":{gw:{ids:!1,methods:["GET","POST","PUT","DELETE"]},"gw/channels":{ids:!0,methods:["GET","POST","PUT","DELETE"]},"gw/modems":{ids:!0,methods:["GET","POST","PUT","DELETE"]},"gw/protocols":{ids:!1,methods:["GET"]},registry:{ids:!1,methods:["GET","POST","PUT","DELETE"]},"registry/devices":{ids:!0,methods:["GET","POST","PUT","DELETE"]},"registry/streams":{ids:!0,methods:["GET","POST","PUT","DELETE"]},storage:{ids:!1,methods:["GET","POST","PUT","DELETE"]},"storage/abques":{ids:!0,methods:["GET","POST","PUT","DELETE"]},"storage/containers":{ids:!0,methods:["GET","POST","PUT","DELETE"]}},"x-acl-schema-templates":[{"without-ids":{ids:!1}},{"with-ids":{ids:!0}},{"all-methods":{methods:["GET","POST","PUT","DELETE"]}},{"without-ids-all-methods":{ids:!1,methods:["GET","POST","PUT","DELETE"]}},{"with-ids-all-methods":{ids:!0,methods:["GET","POST","PUT","DELETE"]}}]},{basePath:"/gw",definitions:{channel:{properties:{blocked:{$ref:"#/definitions/channel.blocked"},"channel.configuration":{$ref:"#/definitions/channel.configuration"},commands_size:{$ref:"#/definitions/channel.commands_size"},commands_ttl:{$ref:"#/definitions/channel.commands_ttl"},connections_count:{$ref:"#/definitions/channel.connections_count"},enabled:{$ref:"#/definitions/channel.enabled"},id:{$ref:"#/definitions/channel.id"},messages_size:{$ref:"#/definitions/channel.messages_size"},messages_ttl:{$ref:"#/definitions/channel.messages_ttl"},name:{$ref:"#/definitions/channel.name"},protocol_id:{$ref:"#/definitions/channel.protocol_id"},protocol_name:{$ref:"#/definitions/channel.protocol_name"},uri:{$ref:"#/definitions/channel.uri"}},type:"object"},"channel.blocked":{description:"If non-zero, contain block code (reason of) for the channel",type:"integer"},"channel.command-queue":{properties:{address:{$ref:"#/definitions/channel.command-queue.address"},channel_id:{$ref:"#/definitions/channel.command-queue.channel_id"},expires:{$ref:"#/definitions/channel.command-queue.expires"},id:{$ref:"#/definitions/channel.command-queue.id"},name:{$ref:"#/definitions/channel.command-queue.name"},properties:{$ref:"#/definitions/channel.command-queue.properties"}},type:"object"},"channel.command-queue.address":{anyOf:[{properties:{ident:{description:"The most common scenario to deliver a command is to push it into the established connection(TCP, HTTP, etc) between device and gateway. Command and device must have an equal idents.",maxLength:255,minLength:1,type:"string"},type:{default:"connection",readOnly:!0,type:"string","x-schema-const":"connection"}},required:["type","ident"],title:"connection",type:"object"},{properties:{phone:{description:"Phone number with country code +XXXYYYYYYYY. Command payload will be created according to the channel protocol and will be sent as SMS message through SMPP gateway. Command requires a properly working modem created by a customer.",pattern:"^\\+[0-9]{9,15}$",type:"string"},type:{default:"sms",readOnly:!0,type:"string","x-schema-const":"sms"}},required:["type","phone"],title:"sms",type:"object"}],description:"Command recipient address. There are a few ways to deliver command.","x-key-property":"type"},"channel.command-queue.channel_id":{description:"hosting channel ID.",format:"uint32",type:"integer"},"channel.command-queue.expires":{description:"Period starts from command creation moment and lasts TTL seconds.",format:"uint32",type:"integer"},"channel.command-queue.id":{description:"Command's unique ID.",format:"uint32",minimum:1,type:"integer"},"channel.command-queue.name":{description:"Command name according to the protocol specifications.\n",maxLength:255,minLength:1,type:"string"},"channel.command-queue.post":{properties:{address:{$ref:"#/definitions/channel.command-queue.address"},name:{$ref:"#/definitions/channel.command-queue.name"},properties:{$ref:"#/definitions/channel.command-queue.properties"},ttl:{$ref:"#/definitions/channel.command-queue.ttl"}},required:["address","name"],type:"object"},"channel.command-queue.properties":{additionalProperties:!0,description:"Command parameters.",type:"object"},"channel.command-queue.ttl":{default:86400,description:"Command time to live in pending queue, in seconds.",format:"uint32",maximum:2592e3,minimum:60,type:"integer"},"channel.command-queues":{properties:{errors:{$ref:"#/definitions/errors"},result:{items:{$ref:"#/definitions/channel.command-queue"},type:"array"}},type:"object"},"channel.command-result":{properties:{address:{$ref:"#/definitions/channel.command-queue.address"},channel_id:{$ref:"#/definitions/channel.command-queue.channel_id"},executed:{$ref:"#/definitions/channel.command-result.executed"},expires:{$ref:"#/definitions/channel.command-queue.expires"},id:{$ref:"#/definitions/channel.command-queue.id"},name:{$ref:"#/definitions/channel.command-queue.name"},properties:{$ref:"#/definitions/channel.command-queue.properties"},response:{$ref:"#/definitions/channel.command-result.response"},time:{description:"Command execution time.",format:"uint32",type:"integer"}}},"channel.command-result.executed":{description:"command execution status. 1 - command has been sent, 0 - command have expired.",type:"boolean"},"channel.command-result.response":{description:"reply from the command receiver.",type:"object"},"channel.commands_size":{description:"Executed command queue size (in Kb, updated nearly once per hour).",format:"uint32",type:"integer"},"channel.commands_ttl":{default:86400,description:"Finished commands lifetime. Commands will be automatically removed after specified amount of seconds. if 0 finished commands queue will be cleared.",format:"uint32",maximum:2592e3,minimum:0,type:"integer","x-view-divider":86400,"x-view-unit":"days"},"channel.configuration":{additionalProperties:!0,description:"Protocol dependent configuration parameters.",type:"object","x-view-schema":"configuration"},"channel.connection":{properties:{channel_id:{$ref:"#/definitions/channel.connection.channel_id"},established:{$ref:"#/definitions/channel.connection.established"},id:{$ref:"#/definitions/channel.connection.id"},ident:{$ref:"#/definitions/channel.connection.ident"},ip:{$ref:"#/definitions/channel.connection.ip"}},type:"object"},"channel.connection.channel_id":{description:"hosting connection channel ID.",format:"uint32",minimum:1,type:"integer"},"channel.connection.established":{description:"Connection establishment time.",type:"integer"},"channel.connection.id":{description:"Unique TCP connection identifier.",format:"uint32",minimum:1,type:"integer"},"channel.connection.ident":{description:"Tracking device identification string(may be IMEI, phone number, serial number, etc.)",maxLength:255,type:"string"},"channel.connection.ids":{properties:{errors:{$ref:"#/definitions/errors"},result:{items:{$ref:"#/definitions/channel.connection.id"},type:"array"}},type:"object"},"channel.connection.ip":{description:"Tracking device IP address.",maxLength:255,type:"string"},"channel.connections_count":{description:"TCP connections count established to the channel now.",format:"uint32",type:"integer"},"channel.enabled":{default:!0,description:"Switch channel into active/inactive mode",type:"boolean"},"channel.id":{description:"channel's unique ID.",format:"uint32",minimum:1,type:"integer"},"channel.message":{description:"Message data. Associated array of message parameters. Parameter name is a key and parameter data is a value in associated array. Parameter value may be presented by any of base types: string, number, boolean. Complex types (e.g. JSON object or array) are supported only by several pre-defined parameter names.\n",type:"object"},"channel.messages_size":{description:"Message queue size (in Kb, updated nearly once per hour).",format:"uint32",type:"integer"},"channel.messages_ttl":{default:86400,description:"Messages lifetime. Messages will be automatically removed after specified amount of seconds. if 0 new messages will be ignored, all existing messages will be automatically removed.",format:"uint32",maximum:2592e3,minimum:0,type:"integer","x-view-divider":86400,"x-view-unit":"days"},"channel.name":{description:"channel's short string descriptor.",maxLength:255,minLength:2,type:"string"},"channel.post":{properties:{commands_ttl:{$ref:"#/definitions/channel.commands_ttl"},configuration:{$ref:"#/definitions/channel.configuration"},enabled:{$ref:"#/definitions/channel.enabled"},messages_ttl:{$ref:"#/definitions/channel.messages_ttl"},name:{$ref:"#/definitions/channel.name"},protocol_id:{$ref:"#/definitions/channel.protocol_id"}},required:["name","protocol_id"],title:"create with protocol ID",type:"object","x-view-order":["name","enabled","messages_ttl","commands_ttl","protocol_id","configuration"]},"channel.post.name":{properties:{commands_ttl:{$ref:"#/definitions/channel.commands_ttl"},configuration:{$ref:"#/definitions/channel.configuration"},enabled:{$ref:"#/definitions/channel.enabled"},messages_ttl:{$ref:"#/definitions/channel.messages_ttl"},name:{$ref:"#/definitions/channel.name"},protocol_name:{$ref:"#/definitions/channel.protocol_name"}},required:["name","protocol_name"],title:"create with protocol name",type:"object"},"channel.protocol_id":{description:"ID of a channel's serving protocol",format:"uint32",minimum:1,type:"integer","x-view-dict":"protocols"},"channel.protocol_name":{description:"name of the protocol corresponding to protocol_id",maxLength:255,minLength:1,type:"string"},"channel.put":{properties:{commands_ttl:{$ref:"#/definitions/channel.commands_ttl"},configuration:{$ref:"#/definitions/channel.configuration"},enabled:{$ref:"#/definitions/channel.enabled"},messages_ttl:{$ref:"#/definitions/channel.messages_ttl"},name:{$ref:"#/definitions/channel.name"}},type:"object","x-view-order":["name","enabled","messages_ttl","commands_ttl","protocol_id","configuration"]},"channel.uri":{description:'Channel\'s listening address:\n* unique for [flespi gateway](https://flespi.com/gateway) servers\n* format: "host:port"\n',maxLength:255,minLength:3,type:"string"},channels:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Channels collection.",items:{$ref:"#/definitions/channel"},type:"array"}},type:"object"},"channels.id":{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Channels identifiers collection.",items:{$ref:"#/definitions/channel.id"},type:"array"}},type:"object"},"channels.post":{items:{anyOf:[{$ref:"#/definitions/channel.post"},{$ref:"#/definitions/channel.post.name"}]},minItems:1,type:"array"},command:{description:"Command format.",properties:{description:{$ref:"#/definitions/command.description"},name:{$ref:"#/definitions/command.name"},properties:{$ref:"#/definitions/command.properties"},"protocol.id":{description:"Command's parent protocol.",type:"integer"},title:{$ref:"#/definitions/command.title"}},type:"object"},"command.description":{description:"Command purpose description.",maxLength:1024,type:"string"},"command.name":{description:"Command name, unique for parent protocol (used as command identifier in channels and command-queues).",maxLength:255,minLength:1,type:"string"},"command.properties":{description:"Command's values JSON-scheme.",type:"object"},"command.title":{description:"Command title name.",maxLength:255,type:"string"},commands:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Commands collection.",items:{$ref:"#/definitions/command"},type:"array"}},type:"object"},device_type:{description:"Device type format.",properties:{name:{description:"Short name.",type:"string"},protocol_id:{description:"Parent protocol id.",type:"integer"},protocol_name:{description:"Parent protocol name.",type:"string"},settings:{description:"Set of device settings.",items:{properties:{address:{description:"Ways to update setting - connection, sms etc.",items:{enum:["sms","connection","local"],type:"string"},type:"array"},mode:{description:"Bitmask with setting read/write capabilities.| 0x0 - neither read/write is possible 0x1 - it is possible to read current setting value from device 0x2 - it is possible to write a new setting value into device",format:"uint32",type:"integer"},name:{description:"Setting short name.",type:"string"},schema:{description:"Setting properties JSON schema.",type:"object"}},type:"object"},type:"array"},title:{description:"Device title.",type:"string"}},type:"object"},device_types:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Device types collection.",items:{$ref:"#/definitions/device_type"},type:"array"}},type:"object"},error:{properties:{code:{description:"Error code.",type:"integer"},id:{description:"object ID or index of element in array that was the reason of error. Might be missing in case of common error.",type:"integer"},reason:{description:"Error description.",type:"string"}},type:"object"},errors:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"}},type:"object"},logmessage:{description:"Log record. It contains fixed fields described below and additional fields based on log record type.",properties:{additionalProperties:!0,properties:{event_code:{description:"Log record code.",type:"integer"},event_origin:{description:"Log record origin name.",type:"string"},event_text:{description:"Log record text.",type:"integer"},timestamp:{description:"Log record UNIX timestamp.",format:"uint32",type:"integer","x-view-type":"datetime"}},type:"object"},type:"object"},"logs.get":{properties:{count:{default:1e6,description:"limit number of logs to be returned",format:"uint32",maximum:1e6,minimum:1,type:"integer"},fields:{description:"CSV-formatted list of parameters to be returned in response message list. If message does not contain any of the specified fields, it will be skipped.\n",maxLength:4096,type:"string"},filter:{description:"CSV-formatted filtering option list. See request description for details.\n",maxLength:1024,type:"string"},from:{description:"start momemnt's UNIX timestamp to limit log sample from beginning. use 0 to ignore left bound",format:"uint32",type:"integer"},reverse:{default:!1,description:"time sorting parameter (true/false), use false to list logs from end to beginning",type:"boolean"},to:{description:"end moment's UNIX timestamp to limit log sample to end. use 0 to ignore right bound",format:"uint32",type:"integer"}},type:"object"},message_parameter:{description:"Message parameter.",properties:{id:{$ref:"#/definitions/message_parameter.id"},info:{$ref:"#/definitions/message_parameter.info"},name:{$ref:"#/definitions/message_parameter.name"},type:{$ref:"#/definitions/message_parameter.type"},unit:{$ref:"#/definitions/message_parameter.unit"}},type:"object"},"message_parameter.id":{description:"Message parameter unique index.",format:"uint32",minimum:1,type:"integer"},"message_parameter.info":{description:"Message parameter description.",type:"string"},"message_parameter.name":{description:"Message parameter unique name.",type:"string"},"message_parameter.type":{description:"Message parameter type - double, boolean, string etc.",type:"string"},"message_parameter.unit":{description:"Message parameter measurments unit.",type:"string"},modem:{description:"SMS gateway data",properties:{configuration:{$ref:"#/definitions/modem.configuration"},connected:{$ref:"#/definitions/modem.connected"},enabled:{$ref:"#/definitions/modem.enabled"},id:{$ref:"#/definitions/modem.id"},name:{$ref:"#/definitions/modem.name"},priority:{$ref:"#/definitions/modem.priority"}},type:"object"},"modem.configuration":{anyOf:[{properties:{protocol:{default:"flespi",description:"Send SMS messages through flespi built-in modem. Only limited quantity of SMS messages can be send, see [pricing](https://flespi.com/pricing) for details.\n",readOnly:!0,type:"string","x-schema-const":"flespi"}},required:["protocol"],title:"flespi",type:"object","x-view-order":["protocol"]},{properties:{api_key:{description:"Clickatell API key SMS integration",maxLength:255,minLength:1,type:"string"},protocol:{default:"clickatell",description:"Clickatell SMS integration via REST API: https://www.clickatell.com/developers/api-documentation/rest-api-send-message/\nIn order to use it, please register clickatell account and create REST API integration (please not use HTTP API, only REST API is supported).\n",readOnly:!0,type:"string","x-schema-const":"clickatell"}},required:["protocol","api_key"],title:"clickatell",type:"object","x-view-order":["protocol","api_key"]},{properties:{password:{description:"Authorization password.",maxLength:255,type:"string"},protocol:{default:"smpp",description:"SMPP gateway. Use SMPP modem to connect to any SMS gateway provider with SMPP protocol and send unlimited quantity of SMS messages.",readOnly:!0,type:"string","x-schema-const":"smpp"},source_addr:{description:"Source address for outgoung SMS messages.",maxLength:255,type:"string"},timeout:{default:20,description:"SMPP send message timeout",maximum:60,minimum:10,type:"integer"},uri:{description:"IP or DNS hostname + port (usually 2775 is used) of the SMPP-server",maxLength:255,pattern:"([\\w\\.\\:\\-]+)",type:"string"},username:{description:"Authorization username.",maxLength:255,minLength:1,type:"string"}},required:["protocol","uri","username"],title:"smpp",type:"object","x-view-order":["protocol","uri","username","password","source_addr","timeout"]}],"x-key-property":"protocol"},"modem.connected":{description:"Current modem status. If true - modem is active and ready to deliver SMS messages.",type:"boolean"},"modem.enabled":{default:!0,description:"Active/inactive mode switch",type:"boolean"},"modem.id":{description:"Modem's unique ID.",type:"integer"},"modem.name":{description:"Modem's name.",maxLength:255,minLength:1,type:"string"},"modem.post":{properties:{configuration:{$ref:"#/definitions/modem.configuration"},enabled:{$ref:"#/definitions/modem.enabled"},name:{$ref:"#/definitions/modem.name"},priority:{$ref:"#/definitions/modem.priority"}},required:["name","configuration"],type:"object","x-view-order":["name","enabled","priority","configuration"]},"modem.priority":{default:5,description:"Modem priority, used for selecting modem for SMS dispatching. Higher priority modem will be used first.",maximum:10,minimum:0,type:"integer"},"modem.put":{properties:{configuration:{$ref:"#/definitions/modem.configuration"},enabled:{$ref:"#/definitions/modem.enabled"},name:{$ref:"#/definitions/modem.name"},priority:{$ref:"#/definitions/modem.priority"}},type:"object","x-view-order":["name","enabled","priority","configuration"]},"modems.id":{properties:{result:{description:"ID's collection.",items:{description:"elements ID.",type:"integer"},type:"array"}},type:"object"},"modems.result":{properties:{result:{description:"modems collection. returned data according to 'fields' parameter.",items:{$ref:"#/definitions/modem"},type:"array"}},type:"object"},protocol:{properties:{commands:{$ref:"#/definitions/protocol.commands"},configuration:{$ref:"#/definitions/protocol.configuration"},description:{$ref:"#/definitions/protocol.description"},id:{$ref:"#/definitions/protocol.id"},message_parameters:{$ref:"#/definitions/protocol.message_parameters"},name:{$ref:"#/definitions/protocol.name"}},type:"object"},"protocol.commands":{additionalProperties:{properties:{description:{$ref:"#/definitions/command.description"},properties:{$ref:"#/definitions/command.properties"},title:{$ref:"#/definitions/command.title"}},type:"object"},description:"A comprehensive list of commands supported by protocol. Commands list and it`s format updates automatically during protocol development. Incompatible commands with current protocol version revomes from the queue.",type:"object"},"protocol.configuration":{description:"Scheme for custom protocol configuration. Exact configuration specified in configuration of channels that are using this protocol.\n",type:"object"},"protocol.description":{description:"protocol description.",format:"markdown",maxLength:1024,type:"string"},"protocol.id":{description:"Unique protocol ID.",format:"uint32",minimum:1,type:"integer"},"protocol.message_parameters":{description:"Standard message parameters supported by this protocol.",items:{$ref:"#/definitions/message_parameter"},type:"array"},"protocol.name":{description:"Unique protocol name.",maxLength:255,minLength:1,type:"string"},protocols:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Protocol collection.",items:{$ref:"#/definitions/protocol"},type:"array"}},type:"object"}},host:"flespi.io",info:{description:"This API provides methods to set up and manage data flow channels from tracking devices to [flespi gateway](https://flespi.com/gateway) and further to your application.\nWhile raw data from devices comes in unparsed and fragmented way, flespi gateway takes on work to analyze incoming data from different types of devices,\nregisters it to unified-formatted messages and provides easy and reliable access to tracker's data for your software.\nNote that access to messages from trackers is provided in a **single reader** way, i.e. stable reading can be carried out by only one worker.\n\nGateway API is considered as a low-level type of work with devices. For high-level type of work with devices please consider using [registry API](https://flespi.io/registry),\nwhere all messages are splitted per device already. You can use both APIs in parallel.\n\nTo identify each REST request FlespiToken key has to be passed in HTTP call via header: **Authorization: FlespiToken XXXXXXXXXX**.\nList of tokens available to you is provided in [control panel](https://flespi.io).\n\nDetailed REST API description provided in [guidelines](https://flespi.com/api-guidelines).\n\nAll modification operations with gateway items are gathered in common customer's [logs subsystem](https://flespi.io/platform/#/tags/!/logs).\n",title:"flespi gateway REST API\n",version:1},parameters:{"ch-selector":{collectionFormat:"csv",default:["all"],description:"Requested elements selecting template:\n  - **all** - choose all possible elements\n  - 1,2,3,... - choose elements by ID list\n\nUse additional filter (CSV-formatted, applied with logical AND condition):\n  - name=mask -name matches wildcard mask\n  - uri=mask - URI matches wildcard mask\n  - protocol_id=value - channel's protocol ID matches value\n  - protocol_name=mask - protocol's name matches wildcard mask\n  - enabled=true/false - if channel is in active/inactive mode\n\nChannel selection example | Description\n--------- | --------\n  /gw/channels/all | all channels\n  /gw/channels/1,2,3 | channels with IDs 1,2,3\n  /gw/channels/enabled=true,protocol_id=10 | all active channels using protocol with ID 10\n  /gw/channels/1,2,3,enabled=false | inactive channels from the list of channels with IDs 1,2,3\n",in:"path",items:{type:"string"},name:"ch-selector",required:!0,type:"array"},"channel.commands-queue.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["id","channel_id","name","address","properties","expires"],type:"string"},name:"fields",required:!1,type:"array"},"channel.connection.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["id","channel_id","ident","ip","established"],type:"string"},name:"fields",required:!1,type:"array"},"channel.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["id","name","uri","protocol_id","protocol_name","messages_ttl","commands_ttl","enabled","blocked","configuration","messages_size","commands_size","connections_count"],type:"string"},name:"fields",required:!1,type:"array"},"cmd-queue-selector":{collectionFormat:"csv",default:["all"],description:"Requested elements selecting template:\n  - **all** - choose all possible elements\n  - 1,2,3,... - choose elements by ID list\n\nApply additional filter (CSV-formatted, applied with logical AND condition)\n  - ident=mask - connected device identification string matches wildcard mask\n  - executed=true/false - flag that command have been already executed\n\nRequest example | Description\n--------- | --------\n  /gw/channels/all/commands-queue/all | all created commands on all channels\n  /gw/channels/1,2,3/commands-queue/all | all created commands on channels 1,2,3\n  /gw/channels/all/commands-queue/executed=true | all executed commands on all channels\n",in:"path",items:{type:"string"},name:"cmd-queue-selector",required:!0,type:"array"},"conn-selector":{collectionFormat:"csv",default:["all"],description:"Requested elements selecting template:\n  - **all** - choose all possible elements\n  - 1,2,3,... - choose elements by ID list\n\nApply additional filter (CSV-formatted, applied with logical AND condition)\n  - ident=mask - connected device identification string matches wildcard mask\n  - ip=mask - incoming connection IP address matches wildcard mask\n  - established⋚value - UNIX timestamp of connection opening is greater or smaller then value\n\nRequest example | Description\n--------- | --------\n  /gw/channels/all/connections/all | all active TCP connections to all channels\n  /gw/channels/1,2,3/connections/all | all active TCP connections to channels 1,2,3\n  /gw/channels/all/connections/ip=127.0.\\*.\\*,all active TCP connections to all channels, from given IP address established after Fri Dec 23 2016 08:52:43 GMT+0300\n",in:"path",items:{type:"string"},name:"conn-selector",required:!0,type:"array"},"devtypes-selector":{collectionFormat:"csv",default:["all"],description:"Requested elements selecting template:\n  - **all** - choose all possible elements\n  - **cmd_name** - choose elements by name mask\n",in:"path",items:{type:"string"},name:"devtypes-selector",required:!0,type:"array"},"devtypes.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["id","protocol_id","protocol_name","name","title","settings"],type:"string"},name:"fields",required:!1,type:"array"},"message-parameter.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["id","name","info","unit","type"],type:"string"},name:"fields",required:!1,type:"array"},"message-parameter.selector":{collectionFormat:"csv",default:["all"],description:"Requested elements selecting template:\n  - **all** - choose all possible elements\n  - 1,2,3,... - choose elements by indexes list\n  - adc1,pwr_ext,.. - choose elements by names\n  - unit=V - choose elements by filter\n",in:"path",items:{type:"string"},name:"message-parameter.selector",required:!0,type:"array"},"modem-fields":{collectionFormat:"csv",description:"CSV-formatted list of modem's JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["id","name","enabled","connected","configuration","priority"],type:"string"},name:"fields",required:!1,type:"array"},"modem-selector":{collectionFormat:"csv",default:["all"],description:"Requested elements selecting template:\n- **all** - choose all possible elements\n- 1,2,3,... - choose elements by ID list\n",in:"path",items:{type:"string"},name:"modem-selector",required:!0,type:"array"},"protocol-cmds-selector":{collectionFormat:"csv",default:["all"],description:"Requested elements selecting template:\n  - **all** - choose all possible elements\n  - **cmd_name** - choose elements by name mask\n",in:"path",items:{type:"string"},name:"protocol-cmds-selector",required:!0,type:"array"},"protocol-selector":{collectionFormat:"csv",default:["all"],description:'Requested elements selecting template:\n  - **all** - choose all possible elements\n  - 1,2,3,... - choose elements by ID list\n\nApply additional filter (CSV-formatted, applied with logical AND condition)\n  - name=mask - protocol name matches wildcard mask\n  - description=mask - description matches wildcard mask\n\n\nRequest example | Description\n--------- | --------\n  /gw/protocols/name=\\*gurtam\\* | all protocols with keyword "gurtam" in **name** field\n',in:"path",items:{type:"string"},name:"protocol-selector",required:!0,type:"array"},"protocol.command.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["protocol_id","name","title","description","properties"],type:"string"},name:"fields",required:!1,type:"array"},"protocol.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["id","name","description","commands","message_parameters","configuration"],type:"string"},name:"fields",required:!1,type:"array"}},paths:{"/channels":{post:{description:'Create new channel listening for messages from tracking devices, working on specified protocol.\nTo assign protocol either protocol_id or protocol_name should be specified.\nThe channel will be created with automaticaly assigned unique **"host:port"** to listen for incoming connections from devices.\n\nBy default, start to receive data immediately after request. Use option **enabled**=false to create inactive channel.\n\nTo receive **protocol_name** in response select this option in **fields** list.\n**protocol_name** is secondary parameter, so if **protocol_id** is specified then **protocol_name** will not be used.\n',parameters:[{$ref:"#/parameters/channel.fields"},{in:"body",name:"data",required:!0,schema:{$ref:"#/definitions/channels.post",type:"array"}}],responses:{200:{description:"Channels collection.",schema:{$ref:"#/definitions/channels"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Create new channel\n",tags:["channels"]}},"/channels/{ch-selector}":{delete:{description:"Remove all existing channels matching filtering parameters.\n\nRequest closes all active connections. Unsent commands to given connections would be canceled.\n",responses:{200:{description:"Deleted channels identifiers collection.",schema:{$ref:"#/definitions/channels.id"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Remove selected channels\n",tags:["channels"]},get:{description:'Get collection of channels matching filter parameters. Use special keyword "all" to retreieve all channels.\n',parameters:[{$ref:"#/parameters/channel.fields"}],responses:{200:{description:"Channels collection.",schema:{$ref:"#/definitions/channels"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get collection of channels matching filter parameters",tags:["channels"]},parameters:[{$ref:"#/parameters/ch-selector"}],put:{description:"Change properties of existing channels matching filter parameters.\n\nAll active connections to the channels will be closed before updates.\n",parameters:[{$ref:"#/parameters/channel.fields"},{in:"body",name:"data",required:!0,schema:{$ref:"#/definitions/channel.put"}}],responses:{200:{description:"Channels collection.",schema:{$ref:"#/definitions/channels"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Change existing channels properties\n",tags:["channels"]}},"/channels/{ch-selector}/commands-queue":{parameters:[{$ref:"#/parameters/ch-selector"}],post:{description:"Add command to commands queue. Command would be delivered to the device with coresponding ident as soon as there will be established connection from it to the channel. The command to given **ident** would be added for every channel specified by **{ch-selector}**.\n",parameters:[{$ref:"#/parameters/channel.commands-queue.fields"},{in:"body",name:"data",required:!0,schema:{items:{$ref:"#/definitions/channel.command-queue.post"},minItems:1,type:"array"}}],responses:{200:{description:"Commands collection.",schema:{$ref:"#/definitions/channel.command-queues"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Add command to commands buffer\n",tags:["commands"]}},"/channels/{ch-selector}/commands-queue/{cmd-queue-selector}":{delete:{description:"Delete commands meeting filtering conditions for specified channels.\n",responses:{200:{description:"Deleted commands identifiers collection.",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{items:{$ref:"#/definitions/channel.command-queue.id"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Remove commands from queue\n",tags:["commands"]},get:{description:"Get commands waiting to be sent meeting filtering conditions.\n",parameters:[{$ref:"#/parameters/channel.commands-queue.fields"}],responses:{200:{description:"Commands collection.",schema:{$ref:"#/definitions/channel.command-queues"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get commands from the queue\n",tags:["commands"]},parameters:[{$ref:"#/parameters/ch-selector"},{$ref:"#/parameters/cmd-queue-selector"}]},"/channels/{ch-selector}/commands-result":{delete:{description:"Remove finished commands until **delete_key** parameter. **delete_key** value may be taken from **next_key** value of previous GET commands-result request. This request is optional, normal method of work is to delete messages via GET /channels/.../commands-result request with **delete**=true and valid **curr_key** from previous response.",parameters:[{description:"Parameters to delete already processed commands.",in:"query",name:"data",required:!0,schema:{properties:{delete_key:{description:"Delete all processed commands with key smaller then given.",format:"uint32",minimum:2,type:"integer"}},required:["delete_key"],type:"object"}}],responses:{200:{description:"IDs of selected channels",schema:{$ref:"#/definitions/channels.id"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Remove finished commands\n",tags:["commands"]},get:{description:"Get executed or expired commands from specified channels. Request features:\n* Push mode: server will process request as soon as finished commands appear in the channel (or **timeout** expired)\n* It is assumed that only one handler has a possibility to delete commands.\n* If **delete** parameter is set and **curr_key** parameter is not empty all the commands up to specified **curr_key** are marked as read and processed.\n\nDesignated method of messages consumption is to use GET /channels/.../commands-result request with **timeout**=XX (plus some optional limits) and **delete**=true and valid **curr_key** from previous response.\nThis will fetch only new executed or expired commands and automatically delete command instances received in previous request.\nTimeout parameter is wise to use when we need to wait until any new message will arrive to the channel and return then in immediately in response.\n",parameters:[{description:"These parameters are used to receive finished commands and delete processed instances.",in:"query",name:"data",schema:{properties:{curr_key:{description:"next_key value taken from previous request, so only new finished commands will be returned, you may use zero for the first request",type:"integer"},delete:{description:"Mark finished commands with key **curr_key** and less as processed, so it can be deleted by the system. Use to delete already processed commands.\n",type:"boolean"},limit_count:{default:1e6,description:"Limit returning command instances quantity. Will be returned this or slightly higher quantity of messages, depending on how much messages are passed through channel per second.",maximum:1e6,minimum:1,type:"integer"},timeout:{description:"Timeout for request in a push mode (in case if there is no finished commands at the moment). Timeout is valid only for the request to a single channel. Request to several channels negotiates timeout value.",maximum:30,type:"integer"}},type:"object"}}],responses:{200:{description:"Finished commands array.",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{items:{$ref:"#/definitions/channel.command-result"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get executed or expired commands\n",tags:["commands"]},parameters:[{$ref:"#/parameters/ch-selector"}]},"/channels/{ch-selector}/connections/{conn-selector}":{delete:{description:"Close selected TCP connections to selected channels.\n",responses:{200:{description:"Collection of closed TCP connections.",schema:{$ref:"#/definitions/channel.connection.ids"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Close TCP connections\n",tags:["connections"]},get:{description:"List active TCP connections matching filtering parameters to selected channels.\n",parameters:[{$ref:"#/parameters/channel.connection.fields"}],responses:{200:{description:"Collection of active TCP connections.",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{items:{$ref:"#/definitions/channel.connection"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"List active TCP connections\n",tags:["connections"]},parameters:[{$ref:"#/parameters/ch-selector"},{$ref:"#/parameters/conn-selector"}]},"/channels/{ch-selector}/logs":{get:{description:"Get logs for specified channels. The request without parameters will return all logs records.\n",parameters:[{description:"Parameters to generate log sample.",in:"query",name:"data",schema:{$ref:"#/definitions/logs.get"}}],responses:{200:{description:"Log messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"Logs collection",items:{$ref:"#/definitions/logmessage"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get channel logs records\n",tags:["channels"]},parameters:[{$ref:"#/parameters/ch-selector"}]},"/channels/{ch-selector}/messages":{delete:{description:"Free messages buffer until **delete_key** parameter. **delete_key** value may be taken from **next_key** value of previous GET messages request.\nThis request is optional, normal method of work is to delete messages via GET /channels/.../messages request with delete=true and valid curr_key from previous response.\n",parameters:[{description:"Parameters to delete already processed messages from channel's messages buffer.",in:"query",name:"data",required:!0,schema:{properties:{delete_key:{description:"Delete all messages with key smaller then given.",format:"uint32",minimum:2,type:"integer"}},required:["delete_key"],type:"object"}}],responses:{200:{description:"Channel IDs collection where messages have been successfully deleted. The whole request success can be checked by number of returned channel ID's: E.g. if command to delete messages in N channels have been sent, then there must be N channel ID's in reply. Otherwise something's missing.\n",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{items:{$ref:"#/definitions/channel.id"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Remove unnecessary messages\n",tags:["messages"]},get:{description:"Get new messages from specified channels. Request features:\n* Push mode: server will process request as soon as new messages appear in the channel (or timeout expired)\n* It is assumed that only one handler has a possibility to delete messages.\n* If **delete** parameter is set and **curr_key** parameter is not empty all messages up to specified curr_key are marked as read and processed.\n\nDesignated method of messages consumption is to use GET /channels/.../messages request with timeout=XX (plus some optional limits) and delete=true and valid curr_key from previous response.\nThis will fetch only new portion of messages and automatically delete messages received in previous request.\nTimeout parameter is wise to use when we need to wait until any new message will arrive to the channel and return then in immediately in response.\n",parameters:[{description:"These parameters are used to read new messages and delete processed messages from the channel.",in:"query",name:"data",schema:{properties:{curr_key:{description:"next_key value taken from previous request, so only new messages will be returned, you may use zero for the first request",type:"integer"},delete:{description:"Mark messages with key **curr_key** and less as processed, so it can be deleted by the system.\nUsed to delete already read messages from previous request and decrease message buffer size.\n",type:"boolean"},limit_count:{default:1e6,description:"Limit returning messages quantity. Will be returned this or slightly higher quantity of messages, depending on how much messages are passed through channel per second.",format:"uint32",maximum:1e6,minimum:1,type:"integer"},limit_size:{default:1e8,description:"Limit returning messages size. Will be returned this or slightly larger size of messages, depending on how much messages are passed through channel per second.",format:"uint32",maximum:1e8,type:"integer"},timeout:{description:"Timeout for request in a push mode (in case if there is no messages in the channel at the moment). Timeout is valid only for the request to a single channel. Request to several channels negotiates timeout value.",maximum:30,type:"integer"}},type:"object"}}],responses:{200:{description:"Message collection.",schema:{properties:{errors:{$ref:"#/definitions/errors"},next_key:{description:"Key for the next request",type:"integer"},result:{items:{$ref:"#/definitions/channel.message"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get new messages from specified channels\n",tags:["messages"]},parameters:[{$ref:"#/parameters/ch-selector"}]},"/message-parameters/{message-parameter.selector}":{get:{description:"Gateway acts as IoT protocols converter. It converts parameters with different names and measurments into unified standard.\nSo message-parameters is a compele list of all available message parameters that Gateway detects. Each parameter has a unique name and index.\n",parameters:[{$ref:"#/parameters/message-parameter.fields"}],responses:{200:{description:"Message parameters collection.",schema:{properties:{errors:{items:{$ref:"#/definitions/error"},type:"array"},result:{items:{$ref:"#/definitions/message_parameter"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Fetch full list of possible message parameters",tags:["messages"]},parameters:[{$ref:"#/parameters/message-parameter.selector"}]},"/modems":{post:{description:"Create modem and establish SMPP connection. Parameters for SMPP connection (authorization data and SMPP server address) must be specified in configuration. Timeout value is used on sending messages operation.\n",parameters:[{$ref:"#/parameters/modem-fields"},{in:"body",name:"data",required:!0,schema:{items:{$ref:"#/definitions/modem.post"},minItems:1,type:"array"}}],responses:{200:{description:"created modems collection",schema:{$ref:"#/definitions/modems.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},summary:"Create modem and establish SMPP connection.\n",tags:["modems"]}},"/modems/{modem-selector}":{delete:{description:"Delete selected modems.\n",responses:{200:{description:"deleted modem ID's collection.",schema:{$ref:"#/definitions/modems.id"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},summary:"Delete selected modems.\n",tags:["modems"]},get:{description:"Get specified modems info.\n",parameters:[{$ref:"#/parameters/modem-fields"}],responses:{200:{description:"created modems collection",schema:{$ref:"#/definitions/modems.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},summary:"Get specified modems info.\n",tags:["modems"]},parameters:[{$ref:"#/parameters/modem-selector"}],put:{description:"Change parameters of selected modem.\n",parameters:[{$ref:"#/parameters/modem-fields"},{in:"body",name:"data",required:!0,schema:{$ref:"#/definitions/modem.put"}}],responses:{200:{description:"created modems collection",schema:{$ref:"#/definitions/modems.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},summary:"Change parameters of selected modem.\n",tags:["modems"]}},"/modems/{modem-selector}/logs":{get:{description:"Get logs for specified modem. The request without parameters will return all logs records.\n",parameters:[{description:"Parameters to generate log sample.",in:"query",name:"data",schema:{$ref:"#/definitions/logs.get"}}],responses:{200:{description:"Log messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"Logs collection",items:{$ref:"#/definitions/logmessage"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get modem logs records\n",tags:["modems"]},parameters:[{$ref:"#/parameters/modem-selector"}]},"/protocols/{protocol-selector}":{get:{description:'Get collection of protocols matching filtering parameters. Use special keyword "all" to retreieve all protocols.\n',parameters:[{$ref:"#/parameters/protocol.fields"}],responses:{200:{description:"Protocols collection.",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{items:{$ref:"#/definitions/protocol"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get protocols matching filtering parameters",tags:["protocols"]},parameters:[{$ref:"#/parameters/protocol-selector"}]},"/protocols/{protocol-selector}/commands/{protocol-cmds-selector}":{get:{description:"Get commands collection supported by selected protocol.\n\nA single command is an object described by [Swagger schema object](http://swagger.io/specification/#schemaObject).\nNon-empty command has **properties** field: the description of parameters to be passed with the command. The optional **required** object contains the list of properties that must be specified in command.\n",parameters:[{$ref:"#/parameters/protocol.command.fields"}],responses:{200:{description:"Commands collection.",schema:{$ref:"#/definitions/commands"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get commands supported by protocol.",tags:["protocols"]},parameters:[{$ref:"#/parameters/protocol-selector"},{$ref:"#/parameters/protocol-cmds-selector"}]},"/protocols/{protocol-selector}/device-types/{devtypes-selector}":{get:{description:"Get device types collection supported by selected protocol.\n",parameters:[{$ref:"#/parameters/devtypes.fields"}],responses:{200:{description:"Device types collection.",schema:{$ref:"#/definitions/device_types"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get device types supported by protocol.",tags:["protocols"]},parameters:[{$ref:"#/parameters/protocol-selector"},{$ref:"#/parameters/devtypes-selector"}]}},produces:["application/json"],schemes:["https","http"],securityDefinitions:{FlespiToken:{description:"Authorization through FlespiToken",in:"header",name:"Authorization",type:"apiKey"}},swagger:2,tags:[{description:"List of available protocols.\nProtocol defines the way channel transforms incoming data stream from connections and converts it into messages.\n\nIntegration of new protocols is available upon request to info@flespi.com.\n\nEach protocol defines list of supported commands that can be delivered to the devices once they are connected to flespi gateway.\n",name:"protocols"},{description:"[Channel](https://flespi.com/gateway#channels) is an entrance point for tracking devices to [flespi gateway](https://flespi.com/gateway).\nConfigured channel starts to listen to new TCP/UDP connections from tracking devices on specified host:port.\nOne channel can parse messages with only one protocol, defined during channel initialization.\n\nParsed data is stored in messages buffer associated with given channel.\nMessages can be pulled out from buffer by **channels/messages** interface in a \"single reader\" way, which means that stable reading process can be done by only one worker.\n\nIt is also possible to receive channel messages in realtime using [MQTT API](https://flespi.com/mqtt-api) by subscribing to 'flespi/message/gw/channels/#' topic.\n\nEvery message in buffer is represented by a JSON object with next fields:\n\n  Field | Description\n  --------|----------\n    timestamp | Actual message time provided by tracking device\n    ident | Tracking device identification string** * **\n    [param name] | Any additional parameters passed by tracking device\n\n** * ** *Tracking device's unique descriptor. It might be IMEI, international phone number or device's serial number.*\n\nAll channel modification operations are being reported to common [logs subsystem](https://flespi.io/platform/#/tags/!/logs) with next possible event codes:\n\n  Event code | Description\n  -----|------\n  1|channel was created via REST API\n  2|channel was updated via REST API\n  3|channel was deleted via REST API\n  20|channel was blocked, see [customer](https://flespi.io/platform/#/tags/!/customer) for more information\n  21|channel was unblocked, see [customer](https://flespi.io/platform/#/tags/!/customer) for more information\n  100|chanel has accepted connection, see [gw/connections](https://flespi.io/gw/#/tags/!/connections) for more information\n  101|channel connection was identified, see [gw/connections](https://flespi.io/gw/#/tags/!/connections) for more information\n  102|channel connection was closed, see [gw/connections](https://flespi.io/gw/#/tags/!/connections) for more information\n  110|new channel's command was placed onto queue, see [gw/commands](https://flespi.io/gw/#/tags/!/commands) for more information\n  111|channel's command in the queue was updated, see [gw/commands](https://flespi.io/gw/#/tags/!/commands) for more information\n  112|channel's command was deleted from the queue, see [gw/commands](https://flespi.io/gw/#/tags/!/commands) for more information\n  113|channel's command in the queue was executed or discarded and placed into commands-results, see [gw/commands](https://flespi.io/gw/#/tags/!/commands) for more information\n  114|channel configuration is invalid, see [gw/channels](https://flespi.io/gw/#/tags/!/channels) for more information\n\nFor more information please read [logs subsystem](https://flespi.io/platform/#/tags/!/logs)\nor look at [connections](#/tags/!/connections) and [commands](#/tags/!/commands) log records.\n",name:"channels"},{description:"Access to messages from tracking devices. Message fields depend on the channel's protocol or **message-parameters** configuration of the channel.\nNote that access to messages is provided in a **single reader** way, i.e. stable reading can be carried out by only one worker.\n\nEvery message in buffer is represented by a JSON object with next fields:\n\n  Field | Description\n  --------|----------\n    timestamp | Actual message time provided by tracking device\n    ident | Tracking device identification string** * **\n    [param name] | Any additional parameters passed by tracking device\n\n** * ** *Tracking device's unique descriptor. It might be IMEI, international phone number or device's serial number.*\n",name:"messages"},{description:"In order to deliver messages to devices you can use commands API.\nEach protocol defines which commands are supported and what kind of parameters they require.\nCommands should be posted to the commands-queue, where they will wait for the special thing to be connected and identified with specified 'ident'.\nAfter device identification, channel will try to deliver command to it and move command from commands-queue into commands-result queue, where you can grab list of executed or failed commands.\n\nCommand represent itself JSON object with fields specified by protocol.\n\nTo add a command to the queue an **ident** parameter must be specifed. **ident** is tracking device unique string descriptor. Whole command instance consists of:\n\n  Field | Description\n  ------|------------\n    ident | descriptor of tracking device where command is to be delivered\n    channel_id | channel id where command is to be sent\n    name | string command identifier, see **channels/commands** for details\n    properties | pre-defined command properties corresponding to specified command\n    delivery | preferable way to deliver a command\n    expires | UNIX timestamp when command will be transfered to command-result list with failure status\n\nCommand will be delivered to the device with coresponding ident as soon as there will be established connection from it to the channel.\n\nApart from regular commands queue parameters commands-result instances have **executed** flag (1 - command executed, 0 - command expired), **response** string (command's reply to sender), and **timestamp** of transfer to commands-result from commands-queue.\n\nChannel's command queue operations are being reported to common [logs subsystem](https://flespi.io/platform/#/tags/!/logs) with next possible event codes:\n\n  Event code | Description\n  -----|------\n  110|new channel's command was placed onto queue\n  111|channel's command in the queue was updated\n  112|channel's command was deleted from the queue\n  113|channel's command in the queue was executed or discarded and placed into commands-results\n\nFor event_code=110,111,112 that are occured when you placing, updating or remove command from the channel's queue using REST API each record contain standard fields:\n\n Field name | Description\n  --------|----------\n    item_data | contain comand's data with default fields prior(DELETE) or after(POST, PUT) request\n    http_data | contain original parameters for POST and PUT operations supplied by the caller\n    token_id | token ID which was used for authorize HTTP request\n    host | IP address from which HTTP request was received\n",name:"commands"},{description:"A single protocol is usually used by multiple devices of the same manufacturer.\n",name:"device-types"},{description:'Information on every active TCP connection from single tracking device to specified channel:\n* connection opening time\n* listening channel ID\n* connected device IP address and identification string** * **\n\n ** * ** *Tracking device\'s unique descriptor. It might be IMEI, international phone number or device\'s serial number. The way flespi gateway identifies certain device is defined by the protocol.*\n\nConnections opening, closing, identification are being reported to common [logs subsystem](https://flespi.io/platform/#/tags/!/logs) with next possible event codes:\n\n  Event code | Description\n  -----|------\n  100|chanel has accepted connection\n  101|channel connection was identified\n  102|channel connection was closed, see below values of "close_code" parameter\n\nIf connection is accepted or identified (event_code=100 or event_code=101), then you may expect next additional parameters in log record:\n\n  Field name | Meaning\n  ----------------------|--------\n  source          |connected device\'s address\n  transport       |connected device\'s transport: tcp, udp, http etc.\n  ident           |connected device\'s identification string (optional, last value only)\n\nIf connection is closed (event_code=102), then you may expect next additional parameters in log record:\n\n  Field name | Meaning\n  ----------------------|--------\n  close_code      |code, specifying the reason of connection close operation\n  error_text      |optional, specifies additional error textual information\n  source          |connected device\'s address\n  transport       |connected device\'s transport: tcp, udp, http etc.\n  ident           |connected device\'s identification string (optional, last value only)\n  duration        |connection duration in seconds\n  msgs            |quantity of messages received\n  recv            |quantity of bytes received\n  send            |quantity of bytes sent\n\nPossible "close_code" values:\n\n  Code | Event\n  -----|------\n  2|connection closed by tracking device\n  3|connection successfully processed and closed\n  4|received data violates channel\'s protocol\n  5|internal error\n  6|data parsing error\n  7|gateway server updated\n  8|channel protocol was modified on the server\n  9|channel\'s parameters changed\n  10|connection closed upon user\'s request\n  11|outgoing connection failed\n\nHere is an example of log message reporting that **TCP** connection from **127.0.0.1** to **channel 1374** was successfully processed and closed after **11 seconds** and identified by device with ident **123456789**, **32** bytes received and **64** bytes transmitted, **10** messages total:\n\n```json\n{\n  "close_code": 3,\n  "duration": 11,\n  "event_code": 102,\n  "event_origin": "gw/channels/1374",\n  "event_text": "connections/127.0.0.1/closed",\n  "ident": "123456789",\n  "msgs": 10,\n  "recv": 32,\n  "send": 64,\n  "source": "127.0.0.1",\n  "timestamp": 1490347944.893743,\n  "transport": "tcp"\n}\n```\n',name:"connections"},{description:"API to manage modems. Modem can be used to send or receive SMS messages from devices.\nSpecial modem with configuration.type = \"flespi\" is one that provided by the platform by default, but limited quantity of SMS messages are available.\nCheck information about how much SMS messages are available for free in [platform pricing](https://flespi.com/pricing) page.\n\nAll actions with modems are being reported to common [logs subsystem](https://flespi.io/platform/#/tags/!/logs) with next possible event codes:\n\n  Event code | Description\n  -----|------\n  200|SMS was received via modem\n  201|SMS was sent via modem\n  202|modem has successfully connected to SMS gateway\n  203|modem has lost connection to SMS gateway server\n  204|failed to connect to SMPP gateway\n\nIf SMS was received via modem (event_code=200), then you may expect next additional parameters in log record:\n\n  Field name | Meaning\n  ----------------------|--------\n  address    | SMS source address, who sent this message\n  type       | hex or text\n  text       | textual SMS contents (for text messages only)\n  hex        | hex representation of binary SMS contents (for binary messages only)\n\nIf SMS was sent via modem (event_code=201), then you may expect next additional parameters in log record:\n\n  Field name | Meaning\n  ----------------------|--------\n  address      | SMS destination address, who should receive this message\n  type         | hex or text\n  text         | textual SMS contents (for text messages only)\n  hex          | hex representation of binary SMS contents (for binary messages only)\n  send_code    | resulting code for send operation, zero if no errors\n\nYou may expect next additional values to send_code:\n\n  Send code | Description\n  -----|------\n  -2|Error from SMS gateway, see special field 'error_text' for error description\n  -1|No more SMS available for current period\n  0|SMS accepted for delivery by SMS gateway\n  positive| error code for send operation returned by SMPP gateway\n\nFor connection related event codes only \"error_code\" parameter may be used by event_code=204 which contain reason of connection failure:\n\n  SMPP code | Meaning\n  ----------------------|--------\n  -1|Authorization problems - check the SMPP modem's username and password\n  -2|TCP/SSL connection related errors - check the SMPP modem's 'uri' field\n\nPositive value reflects directly answer from SMPP gateway server.\n",name:"modems"}]},{basePath:"/storage",definitions:{abque:{properties:{blocked:{$ref:"#/definitions/abque.blocked"},id:{$ref:"#/definitions/abque.id"},name:{$ref:"#/definitions/abque.name"},size:{$ref:"#/definitions/abque.size"},ttl:{$ref:"#/definitions/abque.ttl"}},type:"object"},"abque.blocked":{description:"Active block code for abque. Zero code means abque is not blocked for posting new messages.",format:"uint32",type:"integer"},"abque.id":{description:"queue's unique ID",format:"uint32",minimum:1,type:"integer"},"abque.message":{additionalProperties:!0,description:"Message data. Associated array of message parameters.\nParameter name is a key and parameter data is a value in associated array.\nParameter value may be presented by any of base types: string, number, boolean.\nComplex types (e.g. JSON object or array) are supported only by several pre-defined parameter names.\n",maxProperties:1e3,title:"abque message",type:"object"},"abque.messages.array":{additionalItems:!0,items:{$ref:"#/definitions/abque.message"},minItems:1,title:"array of abque messages",type:"array"},"abque.messages.delete":{properties:{delete_key:{description:"Delete all messages with key smaller then given.",format:"uint32",minimum:2,type:"integer"}},required:["delete_key"],type:"object"},"abque.messages.get":{properties:{curr_key:{description:"next_key value taken from previous request, so only new messages will be returned, you may use zero for the first request",type:"integer"},delete:{description:"Mark messages with key **curr_key** and less as processed, so it can be deleted by the system.\nUsed to delete already read messages from previous request and decrease queue storage size.\n",type:"boolean"},limit_count:{default:1e6,description:"Limit returning messages quantity. Will be returned this or slightly higher quantity of messages, depending on how much messages are passed through queue per second.",format:"uint32",maximum:1e6,minimum:1,type:"integer"},limit_size:{default:1e8,description:"Limit returning messages size. Will be returned this or slightly larger size of messages, depending on how much messages are passed through queue per second.",format:"uint32",maximum:1e8,type:"integer"},timeout:{description:"Timeout for request in a push mode (in case if there is no messages in the queue at the moment). Timeout is valid only for the request to a single queue. Request to several queues negotiates timeout value.",maximum:30,type:"integer"}},type:"object"},"abque.messages.result":{properties:{errors:{$ref:"#/definitions/errors"},next_key:{description:"Key for the next request",type:"integer"},result:{items:{$ref:"#/definitions/abque.message"},type:"array"}},type:"object"},"abque.name":{description:"optional abque name to easily access to certain abques with {abque-selector}",maxLength:255,type:"string"},"abque.post":{properties:{name:{$ref:"#/definitions/abque.name"},ttl:{$ref:"#/definitions/abque.ttl"}},type:"object","x-view-order":["name","ttl"]},"abque.put":{properties:{name:{$ref:"#/definitions/abque.name"},ttl:{$ref:"#/definitions/abque.ttl"}},type:"object","x-view-order":["name","ttl"]},"abque.size":{description:"size of queue messages in KB",format:"uint32",type:"integer"},"abque.ttl":{default:86400,description:"Messages lifetime. Messages will be automatically removed after specified amount of seconds. if 0 new messages will be ignored, all existing messages will be automatically removed.",format:"uint32",maximum:2592e3,minimum:0,type:"integer"},abques:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Queues collection.",items:{$ref:"#/definitions/abque"},type:"array"}},type:"object"},"abques.post":{items:[{$ref:"#/definitions/abque.post"}],minItems:1,type:"array"},container:{properties:{blocked:{$ref:"#/definitions/container.blocked"},flags:{$ref:"#/definitions/container.flags"},id:{$ref:"#/definitions/container.id"},name:{$ref:"#/definitions/container.name"},parameters:{$ref:"#/definitions/container.parameters"},size:{$ref:"#/definitions/container.size"}},type:"object"},"container.blocked":{description:"Active block code for container. Zero code means container is not blocked for messages registration.",format:"uint32",type:"integer"},"container.flags":{description:"container flags",enum:[0,1,2,3],format:"uint32",type:"integer","x-view-enum-labels":["replace message with new","skip new message","merge parameters","allow duplicates"]},"container.id":{description:"container's unique ID",format:"uint32",minimum:1,type:"integer"},"container.message":{description:"Message data",properties:{key:{description:"message key",format:"uint32",minimum:1,type:"integer"},params:{additionalProperties:!0,description:"Message data. Associated array of message parameters.\nParameter name is a key and parameter data is a value in associated array.\nParameter value may be presented by any of base types: string, number, boolean.\nComplex types (e.g. JSON object or array) are supported only by several pre-defined parameter names.\n",maxProperties:1e3,type:"object"}},required:["key","params"],title:"container message",type:"object"},"container.message.filter":{description:"CSV-formatted filtering option list. See request description for details.\n",maxLength:1024,type:"string"},"container.message.left_key":{description:"left-most including messages key, use 0 to ignore left bound",format:"uint32",type:"integer"},"container.message.right_key":{description:"right-most including messages key, use 0 to ignore left bound",format:"uint32",type:"integer"},"container.messages.array":{additionalItems:!0,items:{$ref:"#/definitions/container.message"},minItems:1,title:"array of container messages",type:"array"},"container.messages.delete":{properties:{filter:{$ref:"#/definitions/container.message.filter"},left_key:{$ref:"#/definitions/container.message.left_key"},right_key:{$ref:"#/definitions/container.message.right_key"}},type:"object"},"container.messages.get":{properties:{fields:{description:'CSV-formatted list of parameters to be returned in response message list in form "param1,param2,param3.*".\nIf message does not contain any of the specified fields, it will be skipped.\n',maxLength:4096,type:"string"},filter:{$ref:"#/definitions/container.message.filter"},generalize:{description:"Generalization interval. Only keys that are multiple to specified generalization interval will be returned with recalculated parameter values according to\nspecified generalization method. It may be possible that first returned key will be less then specified left_key if left_key is not a multiple of generalization interval.\nAll numercial parameter values withing generalization interval will be calculated into one value according to specified method. For non-numerical parameters\nfirst encountered value will be returned.\n",format:"uint32",maximum:1e6,minimum:60,type:"integer"},left_key:{$ref:"#/definitions/container.message.left_key"},max_count:{default:1e7,description:"maximum quantity of returned messages",format:"uint32",maximum:1e7,minimum:1,type:"integer"},method:{default:"average",description:"Generalization method. Applicable only when valid generalize parameter specified.\n",enum:["average","minimum","maximum","summary"],type:"string"},reverse:{default:!1,description:"time sorting parameter (true/false), use false to list logs from end to beginning",type:"boolean"},right_key:{$ref:"#/definitions/container.message.right_key"},skip_key:{default:!1,description:"If true, then remove 'key' attribute from returned messages collection. In case of generalization interval 'timestamp' parameter will contain valid generalization key value.\n",type:"boolean"}},type:"object"},"container.name":{description:"optional container name to easily access to certain containers with {container-selector}",maxLength:255,type:"string"},"container.parameters":{description:"collection of message parameter names that were ever registered for given container",items:{description:"name of parameter",type:"string"},type:"array"},"container.post":{properties:{flags:{$ref:"#/definitions/container.flags"},name:{$ref:"#/definitions/container.name"}},type:"object","x-view-order":["name","flags"]},"container.put":{properties:{name:{$ref:"#/definitions/container.name"}},type:"object"},"container.size":{description:"size of container messages in KB",format:"uint32",type:"integer"},containers:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Containers collection.",items:{$ref:"#/definitions/container"},type:"array"}},type:"object"},error:{properties:{code:{description:"Error code.",type:"integer"},id:{description:"object ID or index of element in array that was the reason of error. Might be missing in case of common error.",type:"integer"},reason:{description:"Error description.",type:"string"}},type:"object"},errors:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"}},type:"object"},ids:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Containers identifiers collection.",items:{description:"Object ID or array index of successfully processed elements",type:"integer"},type:"array"}},type:"object"},logmessage:{description:"Log record. It contains fixed fields described below and additional fields based on log record type.",properties:{additionalProperties:!0,properties:{event_code:{description:"Log record code.",type:"integer"},event_origin:{description:"Log record origin name.",type:"string"},event_text:{description:"Log record text.",type:"integer"},timestamp:{description:"Log record UNIX timestamp.",format:"uint32",type:"integer","x-view-type":"datetime"}},type:"object"},type:"object"},"logs.get":{properties:{count:{default:1e6,description:"limit number of logs to be returned",format:"uint32",maximum:1e6,minimum:1,type:"integer"},fields:{description:"CSV-formatted list of parameters to be returned in response message list. If message does not contain any of the specified fields, it will be skipped.\n",maxLength:4096,type:"string"},filter:{description:"CSV-formatted filtering option list. See request description for details.\n",maxLength:1024,type:"string"},from:{description:"start momemnt's UNIX timestamp to limit log sample from beginning. use 0 to ignore left bound",format:"uint32",type:"integer"},reverse:{default:!1,description:"time sorting parameter (true/false), use false to list logs from end to beginning",type:"boolean"},to:{description:"end moment's UNIX timestamp to limit log sample to end. use 0 to ignore right bound",format:"uint32",type:"integer"}},type:"object"}},host:"flespi.io",info:{description:'This API provides methods to set up and manage low-level storage elements that can be used as building blocks inside any telematics system.\nCurrently two types of storage elements are available: containers, that store structurized JSON messages sorted by unique 32-bit key and abques, which\nname mean "asynchronous batch queue", they provide functionality for multiple writers single reader structurized JSON messages queue.\n\nTo identify each REST request FlespiToken key has to be passed in HTTP call via header: **Authorization: FlespiToken XXXXXXXXXX**.\nList of tokens available to you is provided in [control panel](https://flespi.io).\n\nDetailed REST API description provided in [guidelines](https://flespi.com/api-guidelines).\n\nAll modification operations with storage items are gathered in common customer\'s [logs subsystem](https://flespi.io/platform/#/tags/!/logs).\n',title:"flespi storage REST API\n",version:1.1},parameters:{"abque-selector":{collectionFormat:"csv",default:["all"],description:'Requested elements selecting template:\n  - **all** - choose all possible elements\n  - 1,2,3,... - choose elements by ID list\n\nUse additional filter (CSV-formatted, applied with logical AND condition):\n  - size⋚value - queue messages size is greater, smaller or equal to value\n  - name=?mask* - container name matches the mask\n\nContainer selection example | Description\n--------- | --------\n  /storage/abques/all | all queues\n  /storage/abques/1,2,3 | queues with IDs 1,2,3\n  /storage/abques/size>1000,name=mask* | all queues that occupy more then 1MB of messages data, with name beginning from "mask" symbols\n',in:"path",items:{type:"string"},name:"abque-selector",required:!0,type:"array"},"abque.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["id","size","name","blocked"],type:"string"},name:"fields",required:!1,type:"array"},"container-selector":{collectionFormat:"csv",default:["all"],description:"Requested elements selecting template:\n  - **all** - choose all possible elements\n  - 1,2,3,... - choose elements by ID list\n\nUse additional filter (CSV-formatted, applied with logical AND condition):\n  - flags=value - flags matches value\n  - size⋚value - container messages size is greater, smaller or equal to value\n  - name=?mask* - container name matches the mask\n\nContainer selection example | Description\n--------- | --------\n  /storage/containers/all | all containers\n  /storage/containers/1,2,3 | containers with IDs 1,2,3\n  /storage/containers/size>1000,flags=1,name=mask* | all containers with flags=1 and occupying more then 1MB of messages data, with name beginning from \"mask\" symbols\n  /storage/containers/parameters=abc | containers, for which message with parameter name 'abc' was ever registered\n",in:"path",items:{type:"string"},name:"container-selector",required:!0,type:"array"},"container.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["id","name","flags","size","blocked","parameters"],type:"string"},name:"fields",required:!1,type:"array"}},paths:{"/abques":{post:{description:"Create new asynchronous batch queue for reliably posting JSON messages.\n",parameters:[{$ref:"#/parameters/abque.fields"},{in:"body",name:"data",required:!0,schema:{$ref:"#/definitions/abques.post"}}],responses:{200:{description:"Queues collection.",schema:{$ref:"#/definitions/abques"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Create new asynchronous batch queue\n",tags:["abques"]}},"/abques/{abque-selector}":{delete:{description:"Remove all existing queues matching filtering parameters.\n\nAll queue messages are deleted and can not be restored anymore.\n",responses:{200:{description:"Deleted queues identifiers collection.",schema:{$ref:"#/definitions/ids"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Remove selected queues\n",tags:["abques"]},get:{description:'Get collection of queues matching filter parameters. Use special keyword "all" to retreieve all queues.\n',parameters:[{$ref:"#/parameters/abque.fields"}],responses:{200:{description:"Queues collection.",schema:{$ref:"#/definitions/abques"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get collection of queues matching filter parameters",tags:["abques"]},parameters:[{$ref:"#/parameters/abque-selector"}],put:{description:"Update all existing queues matching filtering parameters.\n",parameters:[{$ref:"#/parameters/abque.fields"},{in:"body",name:"data",required:!0,schema:{$ref:"#/definitions/abque.put"}}],responses:{200:{description:"Updated queues collection.",schema:{$ref:"#/definitions/abques"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Update selected queues\n",tags:["abques"]}},"/abques/{abque-selector}/logs":{get:{description:"Get logs for specified abque. The request without parameters will return all logs records.\n",parameters:[{description:"Parameters to generate log sample.",in:"query",name:"data",schema:{$ref:"#/definitions/logs.get"}}],responses:{200:{description:"Log messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"Logs collection",items:{$ref:"#/definitions/logmessage"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get abque logs\n",tags:["abques"]},parameters:[{$ref:"#/parameters/abque-selector"}]},"/abques/{abque-selector}/messages":{delete:{description:"Free messages buffer until **delete_key** parameter. **delete_key** value may be taken from **next_key** value of previous GET messages request.\nThis request is optional, normal method of work is to delete messages via GET /storage/abques/.../messages request with delete=true and valid curr_key from previous response.\n",parameters:[{description:"Parameters to delete already processed messages from queue buffer.",in:"query",name:"data",required:!0,schema:{$ref:"#/definitions/abque.messages.delete"}}],responses:{200:{description:"IDs collection of queues where messages have been successfully deleted. The whole request success can be checked by number of returned queue ID's: E.g. if command to delete messages in N queues have been sent, then there must be N queue ID's in reply.\n",schema:{$ref:"#/definitions/ids"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Remove unnecessary messages\n",tags:["abques"]},get:{description:"Get new messages from specified queues. Request features:\n* Push mode: server will process request as soon as new messages appear in the container (or timeout expired)\n* It is assumed that only one handler has a possibility to delete messages.\n* If **delete** parameter is set and **curr_key** parameter is not empty all messages up to specified curr_key are marked as read and processed.\n\nDesignated method of messages consumption is to use GET /storage/abques/.../messages request with timeout=XX (plus some optional limits) and delete=true and valid curr_key from previous response.\nThis will fetch only new portion of messages and automatically delete messages received in previous request.\nTimeout parameter is wise to use when we need to wait until any new message will arrive to the queue and return then in immediately in response.\n",parameters:[{description:"These parameters are used to read new messages and delete processed messages from the queue.",in:"query",name:"data",required:!1,schema:{$ref:"#/definitions/abque.messages.get"}}],responses:{200:{description:"Message collection.",schema:{$ref:"#/definitions/abque.messages.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get new messages from specified queues\n",tags:["abques"]},parameters:[{$ref:"#/parameters/abque-selector"}],post:{description:"Post new messages into specified queues.\n",parameters:[{description:"Messages to be posted",in:"body",name:"data",required:!0,schema:{anyOf:[{$ref:"#/definitions/abque.messages.array"},{$ref:"#/definitions/abque.message"}]}}],responses:{200:{description:"IDs collection of queues where messages have been successfully posted.\nThe whole request success can be checked by number of returned queue ID's:\nE.g. if command to post messages into N queues have been sent, then there must be N queue ID's in reply.\n",schema:{$ref:"#/definitions/ids"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Post new messages into specified queues\n",tags:["abques"]}},"/containers":{post:{description:"Create new container for storing JSON messages identified by unique key.\n\nDuring container creation you can specify **flags** attribute, which determine duplicate for new messages registration.\n",parameters:[{$ref:"#/parameters/container.fields"},{in:"body",name:"data",required:!0,schema:{items:{$ref:"#/definitions/container.post"},minItems:1,type:"array"}}],responses:{200:{description:"Containers collection.",schema:{$ref:"#/definitions/containers"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Create new container\n",tags:["containers"]}},"/containers/{container-selector}":{delete:{description:"Remove all existing containers matching filtering parameters.\n\nAll container messages are deleted and can not be restored anymore.\n",responses:{200:{description:"Deleted containers identifiers collection.",schema:{$ref:"#/definitions/ids"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Remove selected containers\n",tags:["containers"]},get:{description:'Get collection of containers matching filter parameters. Use special keyword "all" to retreieve all containers.\n',parameters:[{$ref:"#/parameters/container.fields"}],responses:{200:{description:"Containers collection.",schema:{$ref:"#/definitions/containers"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get collection of containers matching filter parameters",tags:["containers"]},parameters:[{$ref:"#/parameters/container-selector"}],put:{description:"Update all existing containers matching filtering parameters.\n",parameters:[{in:"body",name:"data",required:!0,schema:{$ref:"#/definitions/container.put"}}],responses:{200:{description:"Updated containers collection.",schema:{$ref:"#/definitions/containers"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Update selected containers\n",tags:["containers"]}},"/containers/{container-selector}/logs":{get:{description:"Get logs for specified containers. The request without parameters will return all logs records.\n",parameters:[{description:"Parameters to generate log sample.",in:"query",name:"data",schema:{$ref:"#/definitions/logs.get"}}],responses:{200:{description:"Log messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"Logs collection",items:{$ref:"#/definitions/logmessage"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get container logs\n",tags:["containers"]},parameters:[{$ref:"#/parameters/container-selector"}]},"/containers/{container-selector}/messages":{delete:{description:"Delete specified messages from the container. The request without parameters will delete all container messages.\n\nFilter parameter can be used to delete only specific set of messages. It is represented by CSV-formatted option list. One option is represented by:\n  * parameter-operand-value expression, e.g. parameter_name=value* or param=1\n  * just parameter_name (without operand and expression) - filter messages by existance of specified parameter_name\n\nPossible operands:\n  * numeric comparison (=, !=, &lt;=, &gt;=, &lt;, &gt;)\n  * text mask correspondance: '=' for mask match, '!=' for mask mismatch\n\nE.g. following the list\n\n  **param1=name*,param2,param3>=5**\n\nwill delete messages with:\n  * param1 string value starts with \"name\"-symbols\n  * existing parameter named \"param2\"\n  * with param3 numeric value greater or equal to 5\n",parameters:[{description:"Parameters for filtering set of messages to delete.\n",in:"query",name:"data",required:!1,schema:{$ref:"#/definitions/container.messages.delete"}}],responses:{200:{description:"IDs collection of containers where messages have been successfully deleted.\nThe whole request success can be checked by number of returned queue ID's:\nE.g. if command to delete messages into N containers have been sent, then there must be N container ID's in reply.\n",schema:{$ref:"#/definitions/ids"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Delete specified container's messages\n",tags:["containers"]},get:{description:"Get specified messages from the container. The request without parameters will return all containers messages.\n\nReply contain messages sorted by key (without sorting by container).\n\nFilter parameter can be used to extract only specific set of messages. It is represented by CSV-formatted option list. One option is represented by:\n  * parameter-operand-value expression, e.g. parameter_name=value* or param=1\n  * just parameter_name (without operand and expression) - filter messages by existance of specified parameter_name\n\nPossible operands:\n  * numeric comparison (=, !=, &lt;=, &gt;=, &lt;, &gt;)\n  * text mask correspondance: '=' for mask match, '!=' for mask mismatch\n\nE.g. following the list\n\n  **param1=name*,param2,param3>=5**\n\nwill return list of messages with:\n  * param1 string value starts with \"name\"-symbols\n  * existing parameter named \"param2\"\n  * with param3 numeric value greater or equal to 5\n\nWhen retreieveing messages from container it is possible to generalize numerical parameter values withing specified keys interval according to specified generalization method.\n",parameters:[{description:"Parameters for filtering resulting set of messages.\n",in:"query",name:"data",required:!1,schema:{$ref:"#/definitions/container.messages.get"}}],responses:{200:{description:"messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"messages collection",items:{$ref:"#/definitions/container.message"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get container's messages\n",tags:["containers"]},parameters:[{$ref:"#/parameters/container-selector"}],post:{description:"Post new messages into specified containers.\n",parameters:[{description:"Messages to be posted to container",in:"body",name:"data",required:!0,schema:{anyOf:[{$ref:"#/definitions/container.messages.array"},{$ref:"#/definitions/container.message"}]}}],responses:{200:{description:"IDs collection of containers where messages have been successfully posted.\nThe whole request success can be checked by number of returned queue ID's:\nE.g. if command to post messages into N containers have been sent, then there must be N container ID's in reply.\n",schema:{$ref:"#/definitions/ids"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Post new messages into specified containers\n",tags:["containers"]}}},produces:["application/json"],schemes:["https","http"],securityDefinitions:{FlespiToken:{description:"Authorization through FlespiToken",in:"header",name:"Authorization",type:"apiKey"}},swagger:2,tags:[{description:"Container represent base storage element for storing structurized JSON messages.\nAll messages consists from 32-bit unsigned integer key and flat list of custom parameters (name/value pairs):\n\n  Field | Description\n  --------|----------\n    key | unique message 32-bit unsigned integer key\n    params | parameters JSON object\n\nContainer provides operations for posting new messages, reading, searching and deleting them.\n\nContainer name can be set to easily access certain containers using container selector.\n\nSpecial container attribute 'flags' determines strategy for working with duplicates, e.g. what happening when posting messages with already existent key:\n\nValue    | Description\n  --------- | --------\n   0x0      | replace message with new, default action\n   0x1      | skip new message\n   0x2      | merge parameters, parameters with the same names will be replaced by values from new message\n   0x3      | allow duplicates, in this mode, during messages retrieval all duplicates for requested key will be returned to prevent data loss, even if read request limitations where specified\n\n\nAttribute 'parameters' contain names of all parameters that were ever registered for given container.\n\nIt is also possible to receive messages POSTed to container in realtime using [MQTT API](https://flespi.com/mqtt-api) by subscribing to 'flespi/message/storage/containers/{container_id}/#' topic.\nMQTT topic name will contain {container_id}/{container_name} and MQTT message payload will contain message information with 'key', 'params' and additional 'timestamp' attribute.\n\nEvent generated when message is being POSTed to container, so it is possible that immediate GET messages will not return this message.\n\nIf 'blocked' attribute is not zero, then container is blocked for new messages. Usually this is because container used space is out of [specified limitations](https://flespi.com/pricing).\nIn order to unblock the container you need to cleanup its messages first.\n\nAll container modification operations are being reported to common [logs subsystem](https://flespi.io/platform/#/tags/!/logs) with next possible event codes:\n\n  Event code | Description\n  -----|------\n  1|container was created via REST API\n  2|container was updated via REST API\n  3|container was deleted via REST API\n  20|container was blocked, see [customer](https://flespi.io/platform/#/tags/!/customer) for more information\n  21|container was unblocked, see [customer](https://flespi.io/platform/#/tags/!/customer) for more information\n  700|container size has been changed\n\nFor event_code=20 log record contain 'block_code', which is the reason of container blocking.\n\nFor size changed event (event_code=700) you may expect additional 'size' field that contain updated container size in KB.\n\nFor event_code=1,2,3 that are occured when you placing, updating or deleting container using REST API each record contain standard fields:\n\n Field name | Description\n  --------|----------\n    item_data | contain item's data with default fields prior(DELETE) or after(POST, PUT) request\n    http_data | contain original parameters for POST and PUT operations supplied by the caller\n    token_id | token ID which was used for authorize HTTP request\n    host | IP address from which HTTP request was received\n",name:"containers"},{description:"Abque is composite name from \"asynchronous batch queue\" and represent reliable JSON messages queue. It designed to operate in multiple writer and single reader mode.\n\nAbque name can be set to easily access certain abques using abque selector.\n\nPosting new messages to the queue can be done from multiple unrelated writes,\nmessages in the queue will be delivered to readers in the same order as they were posted, but with one second granularity -\nthis means that inside one second abque does not guarantee order of posted messages, but outside of second they will be serialized during access.\n\nReliable reading of queue can be implemented only by using one worker that issuing GET /storage/abques/XXX/messages requests one by one,\nreading some messages in batch and checkpointing previously read messages with each next request.\n\nIt is also possible to receive messages POSTed to abque in realtime using [MQTT API](https://flespi.com/mqtt-api) by subscribing to 'flespi/message/storage/abques/{abque_id}/#' topic.\nMQTT topic name will contain {abque_id}/{abque_name} and MQTT message payload will contain 'key' and 'message' attributes.\n\nEvent generated when message is being POSTed to abque, so it is absolutelly normal that immediate GET messages will not return this message.\nMoreover you should wait approximatelly 1 second until you will be able to receive it.\n\nThis MQTT event can be used as indication that abque received some messages and you may expect to receive them in GET messages HTTP request up to given 'next_key'.\n\nIf 'blocked' attribute is not zero, then abque is blocked for new messages. Usually this is because abque used space is out of [specified limitations](https://flespi.com/pricing).\nIn order to unblock the abque you need to optionally read and obviously delete its\nmessages first or set lower 'ttl' attribute for auto-cleanup.\n\nAll abque modification operations are being reported to common [logs subsystem](https://flespi.io/platform/#/tags/!/logs) with next possible event codes:\n\n  Event code | Description\n  -----|------\n  1|abque was created via REST API\n  2|abque was updated via REST API\n  3|abque was deleted via REST API\n  20|abque was blocked, see [customer](https://flespi.io/platform/#/tags/!/customer) for more information\n  21|abque was unblocked, see [customer](https://flespi.io/platform/#/tags/!/customer) for more information\n  800|abque size has been changed\n\nFor event_code=20 log record contain 'block_code', which is the reason of abque blocking.\n\nFor size changed event (event_code=700) you may expect additional 'size' field that contain updated abque size in KB.\n\nFor event_code=1,2,3 that are occured when you placing, updating or deleting abque using REST API each record contain standard fields:\n\n Field name | Description\n  --------|----------\n    item_data | contain item's data with default fields prior(DELETE) or after(POST, PUT) request\n    http_data | contain original parameters for POST and PUT operations supplied by the caller\n    token_id | token ID which was used for authorize HTTP request\n    host | IP address from which HTTP request was received\n",name:"abques"}]},{basePath:"/registry",definitions:{device:{properties:{blocked:{$ref:"#/definitions/device.blocked"},connected:{$ref:"#/definitions/device.connected"},device_type_id:{$ref:"#/definitions/device.device_type_id"},id:{$ref:"#/definitions/device.id"},ident:{$ref:"#/definitions/device.ident"},messages_size:{$ref:"#/definitions/device.messages_size"},messages_ttl:{$ref:"#/definitions/device.messages_ttl"},name:{$ref:"#/definitions/device.name"},phone:{$ref:"#/definitions/device.phone"},settings:{$ref:"#/definitions/device.settings"},telemetry:{$ref:"#/definitions/device.telemetry"}},type:"object"},"device.blocked":{description:"Active block code for device. Zero code means device is not blocked for messages registration.",format:"uint32",type:"integer"},"device.connected":{description:"Device connection status. true - device is connected.",type:"boolean"},"device.device_type_id":{description:"Device type. In order flespi platform is able to communicate with this device you should have at least one channel that is working on the device type's protocol.\n",format:"uint32",title:"Device type",type:"integer","x-view-dict":"device_types"},"device.id":{description:"Device unique ID.",format:"uint32",minimum:1,type:"integer"},"device.ident":{description:"Identification string of the device.",maxLength:255,type:"string"},"device.message":{additionalProperties:!0,description:"Device message",maxProperties:1e3,properties:{timestamp:{description:"UTC timestamp in seconds. Values below 1000000 are reserved for internal use.",minimum:1e6,type:"number"}},type:"object"},"device.message.filter":{description:"CSV-formatted filtering option list. See request description for details.\n",maxLength:1024,type:"string"},"device.messages_size":{description:"Message queue size (in Kb, updated nearly once per hour).",format:"uint32",type:"integer"},"device.messages_ttl":{default:31536e3,description:"Messages lifetime. Messages will be automatically removed after specified amount of seconds. if 0 new messages will be ignored, all existing messages will be automatically removed.",format:"uint32",maximum:31536e4,minimum:0,title:"Messages ttl",type:"integer","x-view-divider":86400,"x-view-unit":"days"},"device.name":{description:"Name of the device.",maxLength:255,type:"string"},"device.phone":{anyOf:[{maxLength:16,minLength:10,pattern:"^\\+[0-9]{9,15}$",readOnly:!1,title:"Phone",type:"string"},{maxLength:0,readOnly:!0,title:"No phone",type:"string"}],description:"Device phone number in internatonal format, like +XXXYYYYYYYY. Used as the destination number for outgoing SMS commands."},"device.post":{properties:{device_type_id:{$ref:"#/definitions/device.device_type_id"},ident:{$ref:"#/definitions/device.ident"},messages_ttl:{$ref:"#/definitions/device.messages_ttl"},name:{$ref:"#/definitions/device.name"},phone:{$ref:"#/definitions/device.phone"}},type:"object","x-view-order":["name","ident","phone","device_type_id","messages_ttl"]},"device.put":{properties:{device_type_id:{$ref:"#/definitions/device.device_type_id"},ident:{$ref:"#/definitions/device.ident"},messages_ttl:{$ref:"#/definitions/device.messages_ttl"},name:{$ref:"#/definitions/device.name"},phone:{$ref:"#/definitions/device.phone"}},type:"object","x-view-order":["name","ident","phone","device_type_id","messages_ttl"]},"device.settings":{description:"User has a readonly access to the device settings. Settings like firmware version updates by device upon established connection.",type:"object"},"device.telemetry":{description:"User has a readonly access to the device latest telemetry values. They are updated automatically from messages with fresher timestamp.",type:"object"},devices:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Devices collection.",items:{$ref:"#/definitions/device"},type:"array"}},type:"object"},"devices.id":{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"IDs collection.",items:{$ref:"#/definitions/device.id"},type:"array"}},type:"object"},error:{properties:{code:{description:"Error code.",type:"integer"},id:{description:"object ID or index of element in array that was the reason of error. Might be missing in case of common error.",type:"integer"},reason:{description:"Error description.",type:"string"}},type:"object"},errors:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"}},type:"object"},logmessage:{description:"Log record. It contains fixed fields described below and additional fields based on log record type.",properties:{additionalProperties:!0,properties:{event_code:{description:"Log record code.",type:"integer"},event_origin:{description:"Log record origin name.",type:"string"},event_text:{description:"Log record text.",type:"integer"},timestamp:{description:"Log record UNIX timestamp.",format:"uint32",type:"integer","x-view-type":"datetime"}},type:"object"},type:"object"},"logs.get":{properties:{count:{default:1e6,description:"limit number of logs to be returned",format:"uint32",maximum:1e6,minimum:1,type:"integer"},fields:{description:"CSV-formatted list of parameters to be returned in response message list. If message does not contain any of the specified fields, it will be skipped.\n",maxLength:4096,type:"string"},filter:{description:"CSV-formatted filtering option list. See request description for details.\n",maxLength:1024,type:"string"},from:{description:"start momemnt's UNIX timestamp to limit log sample from beginning. use 0 to ignore left bound",format:"uint32",type:"integer"},reverse:{default:!1,description:"time sorting parameter (true/false), use false to list logs from end to beginning",type:"boolean"},to:{description:"end moment's UNIX timestamp to limit log sample to end. use 0 to ignore right bound",format:"uint32",type:"integer"}},type:"object"},setting:{properties:{current:{description:"Current setting value."},device_id:{$ref:"#/definitions/setting.device_id"},mode:{description:"Setting execution mode bitmask"},name:{$ref:"#/definitions/setting.name"},pending:{description:"Pending, setting value is not applied yet."},schema:{description:"JSON schema for current and pending setting value.",type:"object"},tab:{description:"Configurator interface tab name"},updated:{description:"UNIX timestamp of current setting value update (get or set).",format:"double",type:"number"}},type:"object"},"setting.address":{description:"The way to be used to deliver a command to set/get setting (connection/SMS).",enum:["connection","sms","local"],type:"string"},"setting.delete":{properties:{device_id:{$ref:"#/definitions/setting.device_id"},name:{$ref:"#/definitions/setting.name"}},type:"object"},"setting.device_id":{description:"Device ID.",format:"uint32",type:"integer","x-view-dict":"devices"},"setting.name":{description:"Setting name according to the channel protocol.",type:"string"},"setting.post":{properties:{address:{$ref:"#/definitions/setting.address"},ttl:{$ref:"#/definitions/setting.ttl"}},required:["address"],type:"object"},"setting.put":{description:"New setting value.",properties:{address:{$ref:"#/definitions/setting.address"},properties:{anyOf:[{type:"string"},{type:"number"},{type:"null"},{type:"boolean"},{type:"array"},{additionalProperties:!0,type:"object"}],description:"New setting value."},ttl:{$ref:"#/definitions/setting.ttl"}},required:["address"],type:"object"},"setting.ttl":{default:86400,description:"Setting get or set command time to live in pending queue, in seconds.",format:"uint32",maximum:2592e3,minimum:60,type:"integer"},settings:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Settings collection.",items:{$ref:"#/definitions/setting"},type:"array"}},type:"object"},"settings.delete":{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Deleted settings collection.",items:{$ref:"#/definitions/setting.delete"},type:"array"}},type:"object"},stream:{properties:{blocked:{$ref:"#/definitions/stream.blocked"},configuration:{$ref:"#/definitions/stream.configuration"},connected:{$ref:"#/definitions/stream.connected"},enabled:{$ref:"#/definitions/stream.enabled"},id:{$ref:"#/definitions/stream.id"},name:{$ref:"#/definitions/stream.name"},queue_size:{$ref:"#/definitions/stream.queue_size"},queue_ttl:{$ref:"#/definitions/stream.queue_ttl"}},type:"object"},"stream.blocked":{description:"Active block code for stream. Zero code means stream is not blocked for new messages reception.",format:"uint32",type:"integer"},"stream.configuration":{anyOf:[{properties:{headers:{additionalProperties:{title:"value",type:"string"},description:'Custom HTTP headers. For example name - "Authorization", value - "FlespiToken XXXXXXXX".',maxProperties:10,type:"object"},ident:{default:"%ident%",description:'Value to replace ident parameter in each message. "%ident%" value with use original ident.\nIt is possible to use any parameter names available in original message to the mask.\nUseful examples - "%ident%", "%vehicle.vin%", "my-retranslator-%ident%", "%device_name%".\n',maxLength:255,type:"string"},protocol:{default:"http",description:"Stream messages to the custom HTTP server by POST requests with messages JSON payload in 'data' element.",readOnly:!0,type:"string","x-schema-const":"http"},uri:{description:"URI with protocol specification http/https.",maxLength:255,pattern:"^https?:\\/\\/[-a-zA-Z0-9@:%._\\+~#=/]+",type:"string"}},required:["protocol","uri"],title:"http",type:"object","x-view-order":["protocol","uri","ident","headers"]},{properties:{ident:{default:"%ident%",description:'Mask for unit identification (unique ID) of each retranslator message. "%ident%" value with use original ident.\nIt is possible to use any parameter names available in original message to the mask.\nUseful examples - "%ident%", "%vehicle.vin%", "my-retranslator-%ident%", "%device_name%".\n',maxLength:255,type:"string"},protocol:{default:"wialon_retranslator",description:"Stream to other telematics server (e.g. Wialon) using TCP connection via Wialon Retranslator protocol (https://gurtam.com/en/gps-hardware/soft/wialon-retranslator)\n",readOnly:!0,type:"string","x-schema-const":"wialon_retranslator"},uri:{description:"Connection point URI (host:port)",maxLength:255,pattern:"^([\\w\\.\\-]+):(\\d+)$",type:"string"}},required:["protocol","uri"],title:"wialon_retranslator",type:"object","x-view-order":["protocol","uri","ident"]},{properties:{certificate:{description:"Connection certificate to use, contents of xxx-certificate.pem.crt file",format:"textarea",maxLength:4096,minLength:1200,type:"string"},endpoint:{description:"AWS IoT endpoint where to connect with MQTT protocol. You can read endpoint value under Settings link in AWS IoT Console.",maxLength:255,pattern:"^([\\w\\.\\-]+)",type:"string"},mqtt_topic:{description:'Topic mask where to push MQTT message to, if specified then each message received by the device will be forwarded as MQTT message with specified topic and JSON payload. It is possible to substitute any message parameter to the mask. Useful examples - "channels/%channel_id%/device/%ident%", "thing/%device_name%/new_message".',maxLength:255,pattern:"^([\\w\\.\\-\\_\\/]*)",type:"string"},private_key:{description:"Private key of of connection certificate, contents of xxx-private.pem.key file",format:"textarea",maxLength:4096,minLength:1200,type:"string"},protocol:{default:"aws_iot",description:"Stream into Amazon Web Services IoT. In order to connect, first create in AWS IoS Registry thing with associated name, which you can specify\nusing 'thing_name' mask. Then create security certificate and attch this certificate to the thing.\nYou need to download certificate and use contents of certificate.pem.crt and private.pem.key files in associated configuration fields.\n\nDo not forget to activate also policy for this certificate, so that it is possible for flespi mqtt client to connect and report thing shadow state messages.\n\nIf you will enable 'update_shadow' configuration option, then thing's shadow in AWS will be automatically updated with latest known values of parameters.\nIf you will specify 'messages_topic' configuration option, then each message received by the device will be forwarded as MQTT message with specified topic mask and JSON payload.\n",readOnly:!0,type:"string","x-schema-const":"aws_iot"},thing_name:{default:"%device_name%",description:'Thing name mask in AWS IoT Registry, if specified then associated thing shadow will be updated with latest known values of parameters. It is possible to substitute any message parameter to the mask. Useful examples - "%ident%", "%device_name%".',maxLength:255,type:"string"}},required:["protocol","endpoint","certificate","private_key"],title:"aws_iot",type:"object","x-view-order":["protocol","endpoint","thing_name","mqtt_topic","certificate","private_key"]},{properties:{access_token:{description:"Thingsboard device access token, specified in device's properties.",maxLength:255,minLength:1,type:"string"},device_name:{default:"%device_name%",description:'Device name mask. It is possible to substitute any message parameter to the mask. Useful examples - "%ident%", "%device_name%".',maxLength:255,type:"string"},protocol:{default:"thingsboard",description:"Stream into thingsboard.io device using MQTT Device API.\nYou need to provide URI of MQTT broker of your installation of Thingsboard and device's access token where to stream telemetry to.\n",readOnly:!0,type:"string","x-schema-const":"thingsboard"},uri:{default:"demo.thingsboard.io:1883",description:"URI of MQTT broker of thingsboard.io installation where to stream in 'HOST:PORT' format. Use port 1883 if unsure, as a default port for MQTT protocol.",maxLength:255,minLength:3,pattern:"^([\\w\\.\\-]+):(\\d+)$",type:"string"}},required:["protocol","uri","access_token"],title:"thingsboard",type:"object","x-view-order":["protocol","uri","device_name","access_token"]},{properties:{certificate:{description:"Use SSL/TLS protocol to protect connection. Certificate to use, usually crt file content.",format:"textarea",maxLength:4096,minLength:1200,type:"string"},client_id:{description:"MQTT session client ID.",maxLength:1024,type:"string"},password:{description:"MQTT session password.",maxLength:1024,type:"string"},private_key:{description:"Private key of of connection certificate, usually contents of pem.key file",format:"textarea",maxLength:4096,minLength:1200,type:"string"},protocol:{default:"mqtt",description:"Stream that publishes device and channel messages to custom MQTT broker. Message topics are customizable, message payload is plain JSON.",readOnly:!0,type:"string","x-schema-const":"mqtt"},ssl:{description:"Enable SSL mode for TCP connection. Certificate and private key are optional.",type:"boolean"},topics:{description:'MQTT topic masks. It is possible to substitute any message parameter to the mask.\nUseful examples: "channels/%channel_id%/device/%ident%", "thing/%device_name%/new_message"\n',items:{maxLength:1024,type:"string"},minItems:1,type:"array"},uri:{description:"MQTT broker URI in 'HOST:PORT' format. Use port 1883 if unsure, as a default port for MQTT protocol.",maxLength:1024,pattern:"^([\\w\\.\\-]+):(\\d+)",type:"string"},username:{description:"MQTT session username.",maxLength:1024,type:"string"}},required:["protocol","uri"],title:"mqtt",type:"object","x-view-order":["protocol","uri","ssl","client_id","username","password","topics","certificate","private_key"]}],"x-key-property":"protocol"},"stream.connected":{description:"Stream connection status. true - stream is connected and streaming messages now.",type:"boolean"},"stream.enabled":{default:!0,description:"Switch stream into active/inactive mode",type:"boolean"},"stream.id":{description:"Unique stream ID.",format:"uint32",minimum:1,type:"integer"},"stream.name":{description:"optional stream name to easily access certain streams using {stm-selector}",maxLength:255,type:"string"},"stream.post":{properties:{configuration:{$ref:"#/definitions/stream.configuration"},enabled:{$ref:"#/definitions/stream.enabled"},name:{$ref:"#/definitions/stream.name"},queue_ttl:{$ref:"#/definitions/stream.queue_ttl"}},required:["configuration"],type:"object","x-view-order":["name","enabled","queue_ttl","configuration"]},"stream.put":{properties:{configuration:{$ref:"#/definitions/stream.configuration"},enabled:{$ref:"#/definitions/stream.enabled"},name:{$ref:"#/definitions/stream.name"},queue_ttl:{$ref:"#/definitions/stream.queue_ttl"}},type:"object","x-view-order":["name","enabled","queue_ttl","configuration"]},"stream.queue_size":{description:"Current stream queue size, in KB. Updates periodically.",format:"uint32",type:"integer"},"stream.queue_ttl":{default:86400,description:"Time To Live of messages in stream queue. Defalt value is 1 day. Zero value is to stop the stream.",format:"uint32",maximum:864e3,minimum:0,type:"integer","x-view-divider":86400,"x-view-unit":"days"},streams:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Streams collection.",items:{$ref:"#/definitions/stream"},type:"array"}},type:"object"},"streams.id":{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"IDs collection.",items:{$ref:"#/definitions/device.id"},type:"array"}},type:"object"},subscription:{properties:{channel_id:{$ref:"#/definitions/subscription.channel_id"},device_id:{$ref:"#/definitions/subscription.device_id"},id:{$ref:"#/definitions/subscription.id"},stream_id:{$ref:"#/definitions/subscription.stream_id"}},type:"object"},"subscription.channel_id":{description:"Streamed channel ID.",format:"uint32",type:"integer","x-view-dict":"channels"},"subscription.device_id":{description:"Streamed device ID.",format:"uint32",type:"integer","x-view-dict":"devices"},"subscription.id":{description:"Unique subscription ID.",format:"uint32",minimum:1,type:"integer"},"subscription.post":{anyOf:[{properties:{channel_id:{$ref:"#/definitions/subscription.channel_id"},device_id:{default:0,maximum:0,minimum:0,readOnly:!0,type:"integer","x-flespi-const":0,"x-view-dict":"devices"}},required:["channel_id"],title:"Channel messages",type:"object"},{properties:{channel_id:{default:0,maximum:0,minimum:0,readOnly:!0,type:"integer","x-flespi-const":0,"x-view-dict":"channels"},device_id:{$ref:"#/definitions/subscription.device_id"}},required:["device_id"],title:"Device messages",type:"object"}],"x-key-property":"Messages source"},"subscription.stream_id":{description:"Stream ID.",format:"uint32",type:"integer","x-view-dict":"streams"},subscriptions:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Subscriptions collection.",items:{$ref:"#/definitions/subscription"},type:"array"}},type:"object"},"subscriptions.id":{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"ID collection.",items:{$ref:"#/definitions/subscription.id"},type:"array"}},type:"object"}},host:"flespi.io",info:{description:"This API provides set of methods to operate with devices and streaming their telematic data into 3rd party platforms. For low-level work with channels please\nlook into [gateway API](https://flespi.io/gw).\n\nTo identify each REST request FlespiToken key has to be passed in HTTP call via header: **Authorization: FlespiToken XXXXXXXXXX**.\nList of tokens available to you is provided in [control panel](https://flespi.io).\n\nDetailed REST API description provided in [guidelines](https://flespi.com/api-guidelines).\n\nAll modification operations with registry items are gathered in common customer's [logs subsystem](https://flespi.io/platform/#/tags/!/logs).\n",title:"flespi registry REST API\n",version:.9},parameters:{"dev-selector":{collectionFormat:"csv",default:["all"],description:"Requested elements selecting template:\n  - **all** - choose all possible elements\n  - 1,2,3,... - choose elements by ID list\n\nUse additional filter (CSV-formatted, applied with logical AND condition):\n  - ident=mask - ident matches wildcard mask\n  - name=mask - name matches wildcard mask\n  - device_type_id=value - device's type ID matches value\n\nDevice selection example | Description\n--------- | --------\n  /registry/devices/all | all devices\n  /registry/devices/1,2,3 | devices with IDs 1,2,3\n",in:"path",items:{type:"string"},name:"dev-selector",required:!0,type:"array"},"device.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["id","name","phone","ident","device_type_id","settings","telemetry","messages_size","messages_ttl","blocked","connected"],type:"string"},name:"fields",required:!1,type:"array"},"sett-selector":{collectionFormat:"csv",default:["all"],description:"Requested elements selecting template:\n  - **all** - choose all possible settings\n  - mask,... - setting name matches wildcard mask\n",in:"path",items:{type:"string"},name:"sett-selector",required:!0,type:"array"},"settings.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["name","device_id","updated","schema","current","pending","address","mode","tab"],type:"string"},name:"fields",required:!1,type:"array"},"stm-selector":{collectionFormat:"csv",default:["all"],description:"Requested elements selecting template:\n  - **all** - choose all possible elements\n  - 1,2,3,... - choose elements by ID list\nUse additional filter (CSV-formatted, applied with logical AND condition):\n  - configuration.protocol=mask - protocol matches wildcard mask\n  - configuration.<something>[action]<value> - configuration field matches or compares to the value, for example configuration.uri=my-domain.*\n  - name=mask - name matches wildcard mask\n\nStream selection example | Description\n--------- | --------\n  /registry/streams/all | all streams\n",in:"path",items:{type:"string"},name:"stm-selector",type:"array"},"stream.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["id","name","queue_size","queue_ttl","configuration","connected","enabled","blocked"],type:"string"},name:"fields",required:!1,type:"array"},"subscr-selector":{collectionFormat:"csv",default:["all"],description:"Requested elements selecting template:\n  - **all** - choose all possible elements\n  - 1,2,3,... - choose elements by ID list\n",in:"path",items:{type:"string"},name:"subscr-selector",required:!0,type:"array"},"subscr.fields":{collectionFormat:"csv",description:"CSV-formatted list of JSON object fields to be returned in reply collection.\n",in:"query",items:{enum:["id","stream_id","channel_id","device_id"],type:"string"},name:"fields",required:!1,type:"array"}},paths:{"/devices":{post:{description:"Create new device.\n",parameters:[{$ref:"#/parameters/device.fields"},{in:"body",name:"data",required:!0,schema:{items:{$ref:"#/definitions/device.post"},minItems:1,type:"array"}}],responses:{200:{description:"Devices collection.",schema:{$ref:"#/definitions/devices"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Create new device\n",tags:["devices"]}},"/devices/{dev-selector}":{delete:{description:"Delete all devices matching filtering parameters. This method can not be undone, please use it with caution.\n",responses:{200:{description:"Deleted devices identifiers collection.",schema:{$ref:"#/definitions/devices.id"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Delete selected devices\n",tags:["devices"]},get:{description:'Get collection of devices matching filter parameters. Use special keyword "all" to retreieve all devices.\n',parameters:[{$ref:"#/parameters/device.fields"}],responses:{200:{description:"Devices collection.",schema:{$ref:"#/definitions/devices"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get collection of devicese matching filter parameters",tags:["devices"]},parameters:[{$ref:"#/parameters/dev-selector"}],put:{description:"Change properties of existing devices matching filter parameters.\n",parameters:[{$ref:"#/parameters/device.fields"},{in:"body",name:"data",required:!0,schema:{$ref:"#/definitions/device.put"}}],responses:{200:{description:"Devices collection.",schema:{$ref:"#/definitions/devices"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Change existing devices properties\n",tags:["devices"]}},"/devices/{dev-selector}/logs":{get:{description:"Get logs for specified device. The request without parameters will return all logs records.\n",parameters:[{description:"Parameters to generate log sample.",in:"query",name:"data",schema:{$ref:"#/definitions/logs.get"}}],responses:{200:{description:"Log messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"Logs collection",items:{$ref:"#/definitions/logmessage"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get device logs records\n",tags:["devices"]},parameters:[{$ref:"#/parameters/dev-selector"}]},"/devices/{dev-selector}/messages":{delete:{description:"Delete specified messages from the device container. The request without parameters will delete all device messages.\n\nFilter parameter can be used to delete only specific set of messages. It is represented by CSV-formatted option list. One option is represented by:\n  * parameter-operand-value expression, e.g. parameter_name=value* or param=1\n  * just parameter_name (without operand and expression) - filter messages by existance of specified parameter_name\n\nPossible operands:\n  * numeric comparison (=, !=, &lt;=, &gt;=, &lt;, &gt;)\n  * text mask correspondance: '=' for mask match, '!=' for mask mismatch\n\nE.g. following the list\n\n  **param1=name*,param2,param3>=5**\n\nwill delete messages with:\n  * param1 string value starts with \"name\"-symbols\n  * existing parameter named \"param2\"\n  * with param3 numeric value greater or equal to 5\n",parameters:[{description:"Parameters for filtering set of messages to delete.\n",in:"query",name:"data",schema:{properties:{filter:{$ref:"#/definitions/device.message.filter"},from:{description:"UNIX timestamp of left time border for messages. Use 0 to ignore left bound.",format:"uint32",type:"integer"},to:{description:"UNIX timestamp of right time border for messages. Use 0 to ignore right bound.",format:"uint32",type:"integer"}},type:"object"}}],responses:{200:{description:"messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"messages collection",items:{$ref:"#/definitions/device.id"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Delete specified device's messages\n",tags:["devices"]},get:{description:"Get specified device messages. The request without parameters will return all device messages.\n\nReply contains sorted by time messages, in case you request messages from multiple devices simulateniously they are not sorted by device.\n\nFilter parameter can be used to select part of messages. It is represented by CSV-formatted option list. One option is represented by:\n  * parameter-operand-value expression, e.g. parameter_name=value* or param=1\n  * just parameter_name (without operand and expression) - filter messages by existance of specified parameter_name\n\nPossible operands:\n  * numeric comparison (=, !=, &lt;=, &gt;=, &lt;, &gt;)\n  * text mask correspondance: '=' for mask match, '!=' for mask mismatch\n\nE.g. following the list\n\n  **param1=name*,param2,param3>=5**\n\nwill return list of messages with:\n  * param1 string value starts with \"name\"-symbols\n  * existing parameter named \"param2\"\n  * with param3 numeric value greater or equal to 5\n",parameters:[{in:"query",name:"data",schema:{properties:{count:{default:1e7,description:"limit number of messages to be returned",format:"uint32",maximum:1e7,minimum:1,type:"integer"},fields:{description:'CSV-formatted list of parameters to be returned in response message list in form "timestamp,*can*,position.*".\nIf message does not contain any of the specified fields, it will be skipped.\n',maxLength:4096,type:"string"},filter:{$ref:"#/definitions/device.message.filter"},from:{description:"UNIX timestamp of left time border for messages. Use 0 to ignore left bound.",format:"uint32",type:"integer"},generalize:{description:"Generalization interval. Only timestamps that are multiple to specified generalization interval will be returned with recalculated parameter values according to\nspecified generalization method. It may be possible that first returned timestamp will be less then specified 'from' timestamp if 'from' timestamp is not a multiple of generalization interval.\nAll numercial parameter values withing generalization interval will be calculated into one value according to specified method. For non-numerical parameters\nfirst encountered value will be returned.\n",format:"uint32",maximum:1e6,minimum:60,type:"integer"},method:{default:"average",description:"Generalization method. Applicable only when valid generalize parameter specified.\n",enum:["average","minimum","maximum"],type:"string"},reverse:{default:!1,description:"time sorting parameter (true/false), use false to list messages from end to beginning",type:"boolean"},to:{description:"UNIX timestamp of right time border for messages. Use 0 to ignore right bound.",format:"uint32",type:"integer"}},type:"object"}}],responses:{200:{description:"Device messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"Device messages collection",items:{$ref:"#/definitions/device.message"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get device messages\n",tags:["devices"]},parameters:[{$ref:"#/parameters/dev-selector"}],post:{description:"Post new messages into specified device and associated streams.\n",parameters:[{description:"Messages to be posted to device",in:"body",name:"data",required:!0,schema:{anyOf:[{$ref:"#/definitions/device.message"},{items:{$ref:"#/definitions/device.message"},type:"array"}]}}],responses:{200:{description:"IDs collection of devices where messages have been successfully posted.\nThe whole request success can be checked by number of returned queue ID's:\nE.g. if command to post messages into N devices have been sent, then there must be N container ID's in reply.\n",schema:{$ref:"#/definitions/devices.id"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Post new messages into specified device and associated streams.\n",tags:["devices"]}},"/devices/{dev-selector}/settings/{sett-selector}":{delete:{description:"Reset setting value or cancel pending operation.",in:"query",parameters:[{in:"query",name:"data",required:!1,schema:{properties:{pending:{description:"Reject command with new setting value.",type:"boolean"}},type:"object"}}],required:!1,responses:{200:{description:"Deleted settings names for each affected device.",schema:{$ref:"#/definitions/settings.delete"}},400:{description:"Incorrect parameters."},500:{description:"Server is unable to process request at the moment, try again later."}},summary:"Reset setting value",tags:["devices"]},get:{description:'Get collection of settings matching filter parameters. Use special keyword "all" to retreieve all settings.\n',parameters:[{$ref:"#/parameters/settings.fields"}],responses:{200:{description:"Settings collection.",schema:{$ref:"#/definitions/settings"}},400:{description:"Incorrect parameters."},500:{description:"Server is unable to process request at the moment, try again later."}},summary:"Get settings collection\n",tags:["devices"]},parameters:[{$ref:"#/parameters/dev-selector"},{$ref:"#/parameters/sett-selector"}],put:{description:"Set new setting value by pushing setting set command to device commands queue.",parameters:[{$ref:"#/parameters/settings.fields"},{in:"body",name:"data",required:!0,schema:{$ref:"#/definitions/setting.put"}}],responses:{200:{description:"Settings collection.",schema:{$ref:"#/definitions/settings"}},400:{description:"Incorrect parameters."},500:{description:"Server is unable to process request at the moment, try again later."}},summary:"Push new command to change setting value",tags:["devices"]}},"/streams":{post:{description:"Create new stream that is capable for transferring devices and channel messages to external platforms.\n",parameters:[{$ref:"#/parameters/stream.fields"},{in:"body",name:"data",required:!0,schema:{items:{$ref:"#/definitions/stream.post"},minItems:1,type:"array"}}],responses:{200:{description:"Streams collection.",schema:{$ref:"#/definitions/streams"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Create new stream\n",tags:["streams"]}},"/streams/{stm-selector}":{delete:{description:"Delete all streams matching filtering parameters. This method can not be undone, please use it with caution.\n",responses:{200:{description:"Deleted devices identifiers collection.",schema:{$ref:"#/definitions/streams.id"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Delete selected streams\n",tags:["streams"]},get:{description:'Get collection of streams matching filter parameters. Use special keyword "all" to retreieve all streams.\n',parameters:[{$ref:"#/parameters/stream.fields"}],responses:{200:{description:"Streams collection.",schema:{$ref:"#/definitions/streams"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get collection of streams matching filter parameters.\n",tags:["streams"]},parameters:[{$ref:"#/parameters/stm-selector"}],put:{description:"Change properties of existing streams matching filter parameters.\n",parameters:[{$ref:"#/parameters/stream.fields"},{in:"body",name:"data",required:!0,schema:{$ref:"#/definitions/stream.put"}}],responses:{200:{description:"Streams collection.",schema:{$ref:"#/definitions/streams"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Change existing streams properties\n",tags:["streams"]}},"/streams/{stm-selector}/logs":{get:{description:"Get logs for specified stream. The request without parameters will return all logs records.\n",parameters:[{description:"Parameters to generate log sample.",in:"query",name:"data",schema:{$ref:"#/definitions/logs.get"}}],responses:{200:{description:"Log messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"Logs collection",items:{$ref:"#/definitions/logmessage"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get streams logs records\n",tags:["streams"]},parameters:[{$ref:"#/parameters/stm-selector"}]},"/streams/{stm-selector}/subscriptions":{parameters:[{$ref:"#/parameters/stm-selector"}],post:{description:"There are two available messages sources for now - channel and device.\n",parameters:[{$ref:"#/parameters/subscr.fields"},{in:"body",name:"data",required:!0,schema:{items:{$ref:"#/definitions/subscription.post"},minItems:1,type:"array"}}],responses:{200:{description:"Stream subscriptions collection.",schema:{$ref:"#/definitions/subscriptions"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Subscribe stream to the new messages source.\n",tags:["streams"]}},"/streams/{stm-selector}/subscriptions/{subscr-selector}":{delete:{description:"Delete all subscriptions matching filtering parameters. This method can not be undone, please use it with caution.\n",responses:{200:{description:"Deleted subscriptions identifiers collection.",schema:{$ref:"#/definitions/subscriptions.id"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Delete selected stream subscriptions\n",tags:["streams"]},get:{description:'Get collection of subscriptions matching filter parameters. Use special keyword "all" to retreieve all subscriptions.\n',parameters:[{$ref:"#/parameters/subscr.fields"}],responses:{200:{description:"Subscriptions collection.",schema:{$ref:"#/definitions/subscriptions"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get collection of subscriptions matching filter parameters.\n",tags:["streams"]},parameters:[{$ref:"#/parameters/subscr-selector"},{$ref:"#/parameters/stm-selector"}],put:{description:"Change properties of existing stream subscriptions matching filter parameters.\n",parameters:[{$ref:"#/parameters/subscr.fields"},{in:"body",name:"data",required:!0,schema:{$ref:"#/definitions/subscription.post"}}],responses:{200:{description:"Subscriptions collection.",schema:{$ref:"#/definitions/subscriptions"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Change existing stream subscriptions\n",tags:["streams"]}}},produces:["application/json"],schemes:["https","http"],securityDefinitions:{FlespiToken:{description:"Authorization through FlespiToken",in:"header",name:"Authorization",type:"apiKey"}},swagger:2,tags:[{description:"Device represents normal IoT or vehicle telematics tracking equipment capable of sending messages to the [gateway](https://flespi.com/gateway).\nThe most important attributes in device are: device type, ident and phone number.\n\nDevice type specifies the type of device. It is important to understand that you should have at least one channel in [gateway](https://flespi.io/gw)\nthat working with the same protocol as given device type. if you have few channels working on the same protocol you can connect device to any of them.\n\nIdent attribute is used to identify device, usually in vehicle telematics it is either device IMEI or special custom number value configured by user.\nFrom the moment device is connected to appropriate channel and identified with ident all its messages received by channel will be automatically delivered to device's storage and available via REST API as messages.\n\nPhone number can be used to configure device via SMS. Each flespi user have some number of free SMS that can be used for devices configuration. See [gateway modems](https://flespi.io/gw/#/tags/!/modems) for more information.\n\nIt is possible to receive device messages in realtime using [MQTT API](https://flespi.com/mqtt-api) by subscribing to 'flespi/message/registry/devices/#' topic.\n\nIf 'blocked' attribute is not zero, then device is blocked for new messages registration. Usually this is because device used space is out of [specified limitations](https://flespi.com/pricing).\nIn order to unblock the device you need to cleanup its messages first or set lower 'messages_ttl' attribute for auto-cleanup.\n\nIf 'blocked' attribute is not zero, then device's messages buffer is full and it is blocked for new messages.\nUsually this is because used space for device messages is out of [specified limitations](https://flespi.com/pricing).\nIn order to unblock the device's messages buffer you need to set lower 'messages_ttl' attribute for auto-cleanup.\n\nDevice settings are defined by the device's channel and its protocol specification.\nEach setting can be requested (POST) to read from device and sent (PUT) to the device. flespi platform automatically trying to synchronize all unknown device settings\nand generating synchronization commands so that once device is connected all its actual setting values will be read.\n\nAll device modification operations are being reported to common [logs subsystem](https://flespi.io/platform/#/tags/!/logs) with next possible event codes:\n\n  Event code | Description\n  -----|------\n  1|device was created via REST API\n  2|device was updated via REST API\n  3|device was deleted via REST API\n  20|device was blocked, see [customer](https://flespi.io/platform/#/tags/!/customer) for more information\n  21|device was unblocked, see [customer](https://flespi.io/platform/#/tags/!/customer) for more information\n  300|device connected\n  301|device disconnected\n  302|received SMS from device\n  303|sent SMS to device\n  310|Received a new setting value from the device\n  311|REST API (PUT) request: the system accepted new setting value\n  312|Device confirmed the acceptance of the new setting value\n  313|Device rejected the new setting value\n  314|REST API (DELETE) request: the sending of new setting value was cancelled by user\n  315|REST API (DELETE) request: current setting value was cleared from the system by user\n\nFor event_code=20 log record contain block_code, which is the reason of device blocking. When blocked due to storage size(block_code=4), which is the size of messages buffer,\ndevice does not receive new messages anymore. It will be automatically unblocked when the size of the buffer will return in the specified limits.\n\nFor device connection event (event_code=300), then you may expect next additional parameters in log record, same as [gateway connection](https://flespi.io/gw/#/tags/!/connections):\n\n  Field name | Meaning\n  ----------------------|--------\n  source          |connected device's address\n  transport       |connected device's transport: tcp, udp, http etc.\n  ident           |connected device's identification string (once per connection only)\n\nIf device is disconnected (event_code=102), then you may expect next additional parameters in log record, almost same as [gateway connection](https://flespi.io/gw/#/tags/!/connections):\n\n  Field name | Meaning\n  ----------------------|--------\n  close_code      |code, specifying the reason of connection close operation\n  error_text      |optional, specifies additional error textual information\n  source          |connected device's address\n  transport       |connected device's transport: tcp, udp, http etc.\n  ident           |connected device's identification string (optional, last value only)\n  duration        |connection duration in seconds\n  msgs            |quantity of messages received\n  recv            |quantity of bytes received\n  send            |quantity of bytes sent\n\nPossible \"close_code\" values:\n\n  Code | Event\n  -----|------\n  2|connection closed by tracking device\n  3|connection successfully processed and closed\n  4|received data violates channel's protocol\n  5|internal error\n  6|data parsing error\n  7|gateway server updated\n  8|channel protocol was modified on the server\n  9|channel's parameters changed\n  10|connection closed upon user's request\n  11|failed to establish connection\n\nFor event_code=1,2,3,310,311,312 that are occured when you placing, updating or deleting device using REST API each record contain standard fields:\n\n Field name | Description\n  --------|----------\n    item_data | contain item's data with default fields prior(DELETE) or after(POST, PUT) request\n    http_data | contain original parameters for POST and PUT operations supplied by the caller\n    token_id | token ID which was used for authorize HTTP request\n    host | IP address from which HTTP request was received\n\n For event_code=314 that is occured when device setting was modified either by reading new value from device or by user request, each record contain next additional fields:\n\n Field name | Description\n  --------|----------\n    device_id | ID of device\n    name | name of setting that is being modified\n    current | object with current setting values, according to setting data scheme\n\n For event_code=315 that occured when device setting failed by any reason, each record contain next additional fields:\n\n Field name | Description\n  --------|----------\n    device_id | ID of device\n    name | name of setting that is rejected\n    properties | setting value rejected by device\n    error_text | optional, specifies additional error textual information\n\nIf SMS was sent or received from device (event_code=302 or event_code=303), then you may expect next additional parameters in log record:\n\n  Field name | Meaning\n  ----------------------|--------\n  address    | SMS phone number\n  type       | hex or text\n  text       | textual SMS contents (for text messages only)\n  hex        | hex representation of binary SMS contents (for binary messages only)\n",name:"devices"},{description:"Stream pushes messages into 3rd party platforms via different protocols. It is possible to subscribe stream to incoming messages received by channels or devices.\nEach stream has persistent messages queue thus messages delivery is guaranteed. You can control how many messages you want to buffer in the stream in case target is unreachable via\nqueue_ttl parameter.\nStream name can be set to easily access certain streams using {stm-selector}.\n\nIf 'blocked' attribute is not zero, then stream's internal buffer is full and it is blocked for new messages.\nUsually this is because used space for stream buffer is out of [specified limitations](https://flespi.com/pricing).\nIn order to unblock the stream's internal buffer you need to check its target first - is it capable to receive messages from the stream first or set lower 'queue_ttl' attribute for auto-cleanup.\n\nAll streams modification operations are being reported to common [logs subsystem](https://flespi.io/platform/#/tags/!/logs) with next possible event codes:\n\n  Event code | Description\n  -----|------\n  1|stream was created via REST API\n  2|stream was updated via REST API\n  3|stream was deleted via REST API\n  20|stream was blocked, see [customer](https://flespi.io/platform/#/tags/!/customer) for more information\n  21|stream was unblocked, see [customer](https://flespi.io/platform/#/tags/!/customer) for more information\n  401|stream connected successfully\n  402|stream has lost connection\n  403|stream failed to connect\n  404|stream has sent some messages\n  410|new subscription was created for stream\n  411|stream subscription was updated\n  412|stream subscription was deleted\n\nStream problems can be defined by error codes. HTTP stream error codes match HTTP response codes (if target server responses not 200 HTTP code). Wialon retranslator stream type has a single error code (1) - if it is disconnected. Following are the codes for MQTT streams:\n\n  Error code | Description\n  -----|------\n  -99|certificate error\n  -2|failed to establish TCP connection\n  -1|connection closed by flespi platform due to internal error\n  1|unacceptable protocol version\n  2|identifier rejected\n  3|server unavailable\n  4|bad username or password\n  5|connection not authorized\n\n\nFor event_code=20 log record contain block_code, which is the reason of stream blocking. When blocked due to storage size(block_code=4), which is the size of intermediate buffer,\nstream does not receive new messages anymore, but continue to send them to the target system. It will be automatically unblocked when the size of the buffer will return in the specified limits.\n\nFor event_code=403, when stream encountered problems during connection or during HTTP POST messages operation, \"error_code\" field will contain corresponding error code depending on type of stream.\nFor HTTP streams it will contain HTTP response codes, for MQTT streams it will contain MQTT_CONNECT response code when positive or reflect TCP/SSL connection error when negative.\n\nFor event_code=404, meaning stream has sent some messages special parameter \"messages\" will contain quantity of sent messages.\n\nFor event_code=1,2,3,410,411,412 that are occured when you placing, updating or deleting stream or its subscription using REST API each record contain standard fields:\n\n Field name | Description\n  --------|----------\n    item_data | contain item's data with default fields prior(DELETE) or after(POST, PUT) request\n    http_data | contain original parameters for POST and PUT operations supplied by the caller\n    token_id | token ID which was used for authorize HTTP request\n    host | IP address from which HTTP request was received\n",name:"streams"}]},{basePath:"/mqtt",definitions:{error:{properties:{code:{description:"Error code.",type:"integer"},id:{description:"object ID or index of element in array that was the reason of error. Might be missing in case of common error.",type:"integer"},reason:{description:"Error description.",type:"string"}},type:"object"},errors:{properties:{errors:{description:"Errors occured while processing the request.",items:{$ref:"#/definitions/error"},type:"array"}},type:"object"},"items.id":{properties:{result:{description:"Id collection.",items:{description:"Item id.",type:"integer"},type:"array"}},type:"object"},logmessage:{description:"Log record. It contains fixed fields described below and additional fields based on log record type.",properties:{additionalProperties:!0,properties:{event_code:{description:"Log record code.",type:"integer"},event_origin:{description:"Log record origin name.",type:"string"},event_text:{description:"Log record text.",type:"integer"},timestamp:{description:"Log record UNIX timestamp.",format:"uint32",type:"integer","x-view-type":"datetime"}},type:"object"},type:"object"},"logs.get":{properties:{count:{default:1e6,description:"limit number of logs to be returned",format:"uint32",maximum:1e6,minimum:1,type:"integer"},fields:{description:"CSV-formatted list of parameters to be returned in response message list. If message does not contain any of the specified fields, it will be skipped.\n",maxLength:4096,type:"string"},filter:{description:"CSV-formatted filtering option list. See request description for details.\n",maxLength:1024,type:"string"},from:{description:"start momemnt's UNIX timestamp to limit log sample from beginning. use 0 to ignore left bound",format:"uint32",type:"integer"},reverse:{default:!1,description:"time sorting parameter (true/false), use false to list logs from end to beginning",type:"boolean"},to:{description:"end moment's UNIX timestamp to limit log sample to end. use 0 to ignore right bound",format:"uint32",type:"integer"}},type:"object"},session:{properties:{clean:{$ref:"#/definitions/session.clean"},client_id:{$ref:"#/definitions/session.client_id"},connected:{$ref:"#/definitions/session.connected"},id:{$ref:"#/definitions/session.id"},size:{$ref:"#/definitions/session.size"}},type:"object"},"session.clean":{description:"Session type, true if session is clean.",type:"boolean"},"session.client_id":{description:"Session client_id provided by client or automatically generated.\n",type:"string"},"session.connected":{description:"Session connection status, true if connected now.",type:"boolean"},"session.id":{description:"Session id.",minLength:3,type:"integer"},"session.post":{properties:{client_id:{$ref:"#/definitions/session.client_id"}},required:["client_id"],type:"object"},"session.size":{description:"Persistent session storage size.",type:"integer"},"sessions.result":{properties:{result:{description:"Sessions collection.",items:{$ref:"#/definitions/session"},type:"array"}},type:"object"},subscription:{properties:{client_id:{$ref:"#/definitions/session.client_id"},id:{$ref:"#/definitions/subscription.id"},qos:{$ref:"#/definitions/subscription.qos"},session_id:{$ref:"#/definitions/subscription.session_id"},topic:{$ref:"#/definitions/subscription.topic"}},type:"object"},"subscription.id":{description:"Subscription id.",format:"uint32",minimum:1,type:"integer"},"subscription.post":{properties:{qos:{$ref:"#/definitions/subscription.qos"},topic:{$ref:"#/definitions/subscription.topic"}},required:["topic","qos"],type:"object"},"subscription.put":{properties:{qos:{$ref:"#/definitions/subscription.qos"},topic:{$ref:"#/definitions/subscription.topic"}},type:"object"},"subscription.qos":{description:"Subscription QoS level.",format:"uint32",maximum:1,minimum:0,type:"integer"},"subscription.session_id":{description:"Session id.",format:"uint32",type:"integer"},"subscription.topic":{description:"Subscription topic.",minLength:1,type:"string"},subscriptions:{properties:{errors:{description:"Errors list.",items:{$ref:"#/definitions/error"},type:"array"},result:{description:"Subscriptions collection.",items:{$ref:"#/definitions/subscription"},type:"array"}},type:"object"}},host:"flespi.io",info:{description:"This API provides set of methods to operate with MQTT sessions and subscriptions using [REST API](https://flespi.com/api-guidelines) interface.\nTo identify each REST request FlespiToken key has to be passed in HTTP call via header: **Authorization: FlespiToken XXXXXXXXXX**.\nList of tokens available to you is provided in [control panel](https://flespi.io).\n\nDetailed information about flespi MQTT broker can be obtained on [flespi.com](https://flespi.com/mqtt-broker).\n\nSee also flespi [MQTT API](https://flespi.com/mqtt-api) for more information about how-to use MQTT API to [flespi platform](https://flespi.com/platform).\n",title:"MQTT broker REST API",version:.9},parameters:{"session-fields":{collectionFormat:"csv",description:"CSV-formatted list of fields to be returned in reply collection.",in:"query",items:{enum:["id","client_id","connected","size","clean"],type:"string"},name:"fields",required:!1,type:"array"},"sessions-selector":{collectionFormat:"csv",default:["all"],description:'Sessions selector.\nKeyword **"all"** will select all sessions ignoring other filtering parameters,\nCSV-list 1,2,3 will select only records with IDs 1,2 and 3.  Available filtering fields: client_id, connected, size.\nYou can use session client_id directly or separated by commas to select multiple sessions at once.\n',in:"path",items:{type:"string"},name:"sessions-selector",required:!0,type:"array"},"subscription-fields":{collectionFormat:"csv",description:"CSV-formatted list of fields to be returned in reply collection.\n",in:"query",items:{enum:["id","session_id","client_id","topic","qos"],type:"string"},name:"fields",required:!1,type:"array"},"subscriptions-selector":{collectionFormat:"csv",default:["all"],description:"Persistent session subscriptions.\n",in:"path",items:{type:"string"},name:"subscriptions-selector",required:!0,type:"array"}},paths:{"/logs":{get:{description:"Get specified logs. The request without parameters will return all logs records.\n",parameters:[{description:"Parameters to generate log sample.",in:"query",name:"data",schema:{$ref:"#/definitions/logs.get"}}],responses:{200:{description:"Log messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"Logs collection",items:{$ref:"#/definitions/logmessage"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get MQTT logs records\n",tags:["logs"]}},"/sessions":{post:{description:"Create a new persistent session.\n",parameters:[{in:"body",name:"data",required:!0,schema:{anyOf:[{$ref:"#/definitions/session.post"},{items:{$ref:"#/definitions/session.post"},type:"array"}]}}],responses:{200:{description:"Sessions collection.",schema:{$ref:"#/definitions/sessions.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],tags:["sessions"]}},"/sessions/{sessions-selector}":{delete:{description:"Remove sessions matching given filter.\n",responses:{200:{description:"Result contains ID of deleted items.",schema:{$ref:"#/definitions/items.id"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],tags:["sessions"]},get:{description:"Fetch sessions list.\n",parameters:[{$ref:"#/parameters/session-fields"}],responses:{200:{description:"Sessions collection.",schema:{$ref:"#/definitions/sessions.result"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],tags:["sessions"]},parameters:[{$ref:"#/parameters/sessions-selector"}]},"/sessions/{sessions-selector}/logs":{get:{description:"Get logs for specified session. The request without parameters will return all logs records.\n",parameters:[{description:"Parameters to generate log sample.",in:"query",name:"data",schema:{$ref:"#/definitions/logs.get"}}],responses:{200:{description:"Log messages array",schema:{properties:{errors:{$ref:"#/definitions/errors"},result:{description:"Logs collection",items:{$ref:"#/definitions/logmessage"},type:"array"}},type:"object"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],summary:"Get session logs records\n",tags:["sessions"]},parameters:[{$ref:"#/parameters/sessions-selector"}]},"/sessions/{sessions-selector}/subscriptions":{parameters:[{$ref:"#/parameters/sessions-selector"}],post:{description:"Subscribe sessions matching given selector.\n",parameters:[{$ref:"#/parameters/subscription-fields"},{in:"body",name:"data",required:!0,schema:{anyOf:[{$ref:"#/definitions/subscription.post"},{items:{$ref:"#/definitions/subscription.post"},type:"array"}]}}],responses:{200:{description:"Subscriptions collection.",schema:{$ref:"#/definitions/subscriptions"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],tags:["sessions"]}},"/sessions/{sessions-selector}/subscriptions/{subscriptions-selector}":{delete:{description:"Remove subscriptions matching given selector.\n",responses:{200:{description:"Result contains ID of deleted items.",schema:{$ref:"#/definitions/items.id"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],tags:["sessions"]},get:{description:"Fetch session subscriptions matching given selector.",parameters:[{$ref:"#/parameters/subscription-fields"}],responses:{200:{description:"Subscriptions collection.",schema:{$ref:"#/definitions/subscriptions"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],tags:["sessions"]},parameters:[{$ref:"#/parameters/sessions-selector"},{$ref:"#/parameters/subscriptions-selector"}],put:{description:"Update subscriptions matching given selector.\n",parameters:[{$ref:"#/parameters/subscription-fields"},{in:"body",name:"data",required:!0,schema:{$ref:"#/definitions/subscription.put"}}],responses:{200:{description:"Subscriptions collection.",schema:{$ref:"#/definitions/subscriptions"}},400:{description:"Incorrect parameters.",schema:{$ref:"#/definitions/errors"}},401:{description:'Header "Authorization: FlespiToken XXXXXXXX" required.\n',schema:{$ref:"#/definitions/errors"}},403:{description:"Token or customer is blocked by the platform due to variety of reasons.\n",schema:{$ref:"#/definitions/errors"}},500:{description:"Server is unable to process request at the moment, try again later.\n"}},security:[{FlespiToken:[]}],tags:["sessions"]}}},produces:["application/json"],schemes:["https","http"],securityDefinitions:{FlespiToken:{description:"Authorization through FlespiToken",in:"header",name:"Authorization",type:"apiKey"}},swagger:2,tags:[{description:"Session started without clean_session flag has no lifetime restrictions and keeps subscriptions and undelivered messages. This is a persistent session.\nThis kind of session has an auto removing mechanism wich activates after 10 days of session idling, i.e. 10 days hours without connection.\nAlso via REST API it is possible to configure session's subscriptions.\n\nflespi.io provides a reasonable count of active(online) MQTT sessions and storage capacity per each offline persistent session.\nSee [platform restrictions](https://flespi.com/pricing#restrictions) for more information.\n\nYou can access single or multiple sessions by using client_id, like: GET /mqtt/sessions/my-client1,my-client2 to select two sessions with client-id = my-client1 and my-client2.\n\nAlso please see [MQTT API](https://flespi.com/mqtt-api) for FAQ.\n",name:"sessions"},{description:"Common operations are being reported to common [logs subsystem](https://flespi.io/platform/#/tags/!/logs) with next possible event codes:\n\nEvent code | Description\n-----|------\n    500|session successfully connected to the gateway\n    501|session access prohibited due to blocking rules, [customer](https://flespi.io/platform/#/tags/!/customer) for more information\n    502|session connection was rejected due to invalid credentials\n    503|session connection was closed\n    504|persistent session was overflowed and deleted\n\nEvent codes 500-503 has a fixed fields in event payload:\n\nField name | Meaning\n----------------------|--------\ntoken_id        |token used to establish MQTT connection\nclient_id       |session client id\npublished       |amount of messages published by session\nreceived        |amount of messages received by session\n",name:"logs"}]}].reduce(function(t,n){return t[n.basePath.slice(1)]=i(e,n),t},{})}},function(e,t,n){e.exports={default:n(309),__esModule:!0}},function(e,t,n){n(310),e.exports=n(0).Object.values},function(e,t,n){var r=n(6),i=n(311)(!1);r(r.S,"Object",{values:function(e){return i(e)}})},function(e,t,n){var r=n(21),i=n(15),o=n(27).f;e.exports=function(e){return function(t){for(var n,s=i(t),a=r(s),c=a.length,l=0,u=[];c>l;)o.call(s,n=a[l++])&&u.push(e?[n,s[n]]:s[n]);return u}}},function(e,t,n){"use strict";t.__esModule=!0;var r=n(313),i=function(e){return e&&e.__esModule?e:{default:e}}(r);t.default=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return(0,i.default)(e)}},function(e,t,n){e.exports={default:n(314),__esModule:!0}},function(e,t,n){n(41),n(315),e.exports=n(0).Array.from},function(e,t,n){"use strict";var r=n(24),i=n(6),o=n(34),s=n(103),a=n(104),c=n(50),l=n(316),u=n(68);i(i.S+i.F*!n(109)(function(e){Array.from(e)}),"Array",{from:function(e){var t,n,i,d,p=o(e),f="function"==typeof this?this:Array,m=arguments.length,h=m>1?arguments[1]:void 0,g=void 0!==h,y=0,b=u(p);if(g&&(h=r(h,m>2?arguments[2]:void 0,2)),void 0==b||f==Array&&a(b))for(t=c(p.length),n=new f(t);t>y;y++)l(n,y,g?h(p[y],y):p[y]);else for(d=b.call(p),n=new f;!(i=d.next()).done;y++)l(n,y,g?s(d,h,[i.value,y],!0):i.value);return n.length=y,n}})},function(e,t,n){"use strict";var r=n(7),i=n(25);e.exports=function(e,t,n){t in e?r.f(e,t,i(0,n)):e[t]=n}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t){d||(d=e);var n=(0,c.default)(t),r={};return n.forEach(function(n,o,a){var c=t[n],l="";if(c.base&&(p=c.base),l=p,c.methods&&c.methods.length&&c.methods.forEach(function(e,t){r[""+e.name+f+(n[0].toUpperCase()+n.slice(1))]=function(){var t=arguments,n=""+l+e.pattern;switch(e.params&&e.params.length&&e.params.forEach(function(e,r,i){-1!==n.indexOf(e)&&(n=n.replace("{"+e+"}",t[r]))}),d.hasClient()||d([]),e.name){case"subscribe":return d.subscribe({name:n,handler:arguments[e.params.length]});case"unsubscribe":return d.unsubscribe(n,arguments[e.params.length])}}}),c.children){var u=n[0].toUpperCase()+n.slice(1);f=""+f+u,(0,s.default)(r,i(e,c.children)),f=f.replace(u,"")}}),r}Object.defineProperty(t,"__esModule",{value:!0});var o=n(19),s=r(o),a=n(16),c=r(a),l=n(125),u=r(l),d=void 0,p="",f="";t.default=function(e){return i(e,u.default)}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var i=n(66),o=r(i),s=n(126),a=r(s),c=n(67),l=r(c),u=n(16),d=r(u);t.default=function(e,t){function n(r,s){(0,d.default)(s).forEach(function(c){s[c].origin?(r[c]=function(){var n=(0,l.default)(o.default.mark(function n(r,l){var u,d,p,f,m,h,g,y,b=this;return o.default.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,e.get(s[c].api+"/"+s[c].origin.replace(/\+/g,"all"),{});case 2:u=n.sent,r(u),d=[],p=!0,f=!1,m=void 0,n.prev=8,h=o.default.mark(function e(){var n,r;return o.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=y.value,e.next=3,t.logs.subscribe(s[c].api,s[c].origin,n,function(e){l(n,JSON.parse(e).item_data)});case 3:r=e.sent,r&&d.push(r);case 5:case"end":return e.stop()}},e,b)}),g=(0,a.default)(i);case 11:if(p=(y=g.next()).done){n.next=16;break}return n.delegateYield(h(),"t0",13);case 13:p=!0,n.next=11;break;case 16:n.next=22;break;case 18:n.prev=18,n.t1=n.catch(8),f=!0,m=n.t1;case 22:n.prev=22,n.prev=23,!p&&g.return&&g.return();case 25:if(n.prev=25,!f){n.next=28;break}throw m;case 28:return n.finish(25);case 29:return n.finish(22);case 30:return n.abrupt("return",d);case 31:case"end":return n.stop()}},n,this,[[8,18,22,30],[23,,25,29]])}));return function(e,t){return n.apply(this,arguments)}}(),r[c].stop=function(e){var n=this;e.forEach(function(){var e=(0,l.default)(o.default.mark(function e(r,a){return o.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.logs.unsubscribe(s[c].api,s[c].origin,i[a],r);case 2:case"end":return e.stop()}},e,n)}));return function(t,n){return e.apply(this,arguments)}}())}):r[c]={},s[c].children&&n(r[c],s[c].children)})}var r={},i=["created","updated","deleted"];return n(r,f.default),r};var p=n(127),f=r(p)},function(e,t,n){n(63),n(41),e.exports=n(320)},function(e,t,n){var r=n(8),i=n(68);e.exports=n(0).getIterator=function(e){var t=i(e);if("function"!=typeof t)throw TypeError(e+" is not iterable!");return r(t.call(e))}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function i(e,t,n){var r=(0,m.default)(n),o={};return r.forEach(function(r,a,l){var d=n[r];if(d.api&&(y=d.api),y,d.origin&&(o["pool"+b+(r[0].toUpperCase()+r.slice(1))]=function(){var n=(0,p.default)(c.default.mark(function n(r,i){var o,s,a,l,p,f,m,h,g=this;return c.default.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,e.get(d.api+"/"+d.origin.replace(/\+/g,"all"),{});case 2:o=n.sent,r(o),s=[],a=!0,l=!1,p=void 0,n.prev=8,f=c.default.mark(function e(){var n,r;return c.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=h.value,e.next=3,t.logs.subscribe(d.api,d.origin,n,function(e){i(n,JSON.parse(e).item_data)});case 3:r=e.sent,r&&s.push(r);case 5:case"end":return e.stop()}},e,g)}),m=(0,u.default)(v);case 11:if(a=(h=m.next()).done){n.next=16;break}return n.delegateYield(f(),"t0",13);case 13:a=!0,n.next=11;break;case 16:n.next=22;break;case 18:n.prev=18,n.t1=n.catch(8),l=!0,p=n.t1;case 22:n.prev=22,n.prev=23,!a&&m.return&&m.return();case 25:if(n.prev=25,!l){n.next=28;break}throw p;case 28:return n.finish(25);case 29:return n.finish(22);case 30:return n.abrupt("return",s);case 31:case"end":return n.stop()}},n,this,[[8,18,22,30],[23,,25,29]])}));return function(e,t){return n.apply(this,arguments)}}(),o["pool"+b+(r[0].toUpperCase()+r.slice(1))+"Stop"]=function(e){var n=this;e.forEach(function(){var e=(0,p.default)(c.default.mark(function e(r,i){return c.default.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.logs.unsubscribe(d.api,d.origin,v[i],r);case 2:case"end":return e.stop()}},e,n)}));return function(t,n){return e.apply(this,arguments)}}())}),d.children){var f=r[0].toUpperCase()+r.slice(1);b=""+b+f,(0,s.default)(o,i(e,t,d.children)),b=b.replace(f,"")}}),o}Object.defineProperty(t,"__esModule",{value:!0});var o=n(19),s=r(o),a=n(66),c=r(a),l=n(126),u=r(l),d=n(67),p=r(d),f=n(16),m=r(f),h=n(127),g=r(h),y="",b="",v=["created","updated","deleted"];t.default=function(e,t){return i(e,t,g.default)}}])});